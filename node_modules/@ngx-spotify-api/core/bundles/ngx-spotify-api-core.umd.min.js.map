{"version":3,"sources":["ng://@ngx-spotify-api/core/lib/models/configs/api.config.ts","ng://@ngx-spotify-api/core/lib/models/configs/authorization.config.ts","ng://@ngx-spotify-api/core/lib/models/configs/spotify-api.config.ts","ng://@ngx-spotify-api/core/lib/http-interceptors/Auth.interceptor.ts","ng://@ngx-spotify-api/core/lib/http-interceptors/Cors.interceptor.ts","ng://@ngx-spotify-api/core/lib/http-interceptors/RemoveNullParams.interceptor.ts","ng://@ngx-spotify-api/core/lib/http-interceptors/UnderscoreToCamelcase.interceptor.ts","ng://@ngx-spotify-api/core/lib/http-interceptors/index.ts","ng://@ngx-spotify-api/core/lib/models/album.ts","ng://@ngx-spotify-api/core/lib/models/album-simplified.ts","ng://@ngx-spotify-api/core/lib/models/artist.ts","ng://@ngx-spotify-api/core/lib/models/artist-simplified.ts","ng://@ngx-spotify-api/core/lib/models/audio-analysis.ts","ng://@ngx-spotify-api/core/lib/models/audio-features.ts","ng://@ngx-spotify-api/core/lib/models/category.ts","ng://@ngx-spotify-api/core/lib/models/context.ts","ng://@ngx-spotify-api/core/lib/models/copyright.ts","ng://@ngx-spotify-api/core/lib/models/cursor.ts","ng://@ngx-spotify-api/core/lib/models/cursor-paging.ts","ng://@ngx-spotify-api/core/lib/models/device.ts","ng://@ngx-spotify-api/core/lib/models/error.ts","ng://@ngx-spotify-api/core/lib/models/external-id.ts","ng://@ngx-spotify-api/core/lib/models/external-url.ts","ng://@ngx-spotify-api/core/lib/models/featured-playlists.ts","ng://@ngx-spotify-api/core/lib/models/followers.ts","ng://@ngx-spotify-api/core/lib/models/image.ts","ng://@ngx-spotify-api/core/lib/models/paging.ts","ng://@ngx-spotify-api/core/lib/models/play-history.ts","ng://@ngx-spotify-api/core/lib/models/playback.ts","node_modules/tslib/tslib.es6.js","ng://@ngx-spotify-api/core/lib/models/player-error.ts","ng://@ngx-spotify-api/core/lib/models/playlist.ts","ng://@ngx-spotify-api/core/lib/models/playlist-simplified.ts","ng://@ngx-spotify-api/core/lib/models/playlist-track.ts","ng://@ngx-spotify-api/core/lib/models/recommendations.ts","ng://@ngx-spotify-api/core/lib/models/recommendations-seed.ts","ng://@ngx-spotify-api/core/lib/models/restriction.ts","ng://@ngx-spotify-api/core/lib/models/saved-album.ts","ng://@ngx-spotify-api/core/lib/models/saved-track.ts","ng://@ngx-spotify-api/core/lib/models/search-result.ts","ng://@ngx-spotify-api/core/lib/models/track.ts","ng://@ngx-spotify-api/core/lib/models/track-current.ts","ng://@ngx-spotify-api/core/lib/models/track-link.ts","ng://@ngx-spotify-api/core/lib/models/track-simplified.ts","ng://@ngx-spotify-api/core/lib/models/user-private.ts","ng://@ngx-spotify-api/core/lib/models/user-public.ts","ng://@ngx-spotify-api/core/lib/services/album.service.ts","ng://@ngx-spotify-api/core/lib/services/artist.service.ts","ng://@ngx-spotify-api/core/lib/services/browse.service.ts","ng://@ngx-spotify-api/core/lib/services/follow.service.ts","ng://@ngx-spotify-api/core/lib/services/library.service.ts","ng://@ngx-spotify-api/core/lib/services/personalization.service.ts","ng://@ngx-spotify-api/core/lib/services/player.service.ts","ng://@ngx-spotify-api/core/lib/services/playlist.service.ts","ng://@ngx-spotify-api/core/lib/services/search.service.ts","ng://@ngx-spotify-api/core/lib/services/track.service.ts","ng://@ngx-spotify-api/core/lib/services/user.service.ts","ng://@ngx-spotify-api/core/lib/ngx-spotify-api.module.ts"],"names":["ApiConfig","this","baseUrl","AuthorizationConfig","storagePrefix","scopes","SpotifyApiConfig","AuthInterceptor","apiConfig","authConfig","prototype","attachAuthorizationHeader","req","accessToken","pipe","map","token","clone","headers","set","intercept","origReq","next","flatMap","handle","Injectable","CorsInterceptor","url","indexOf","newReq","RemoveNullParamsInterceptor","params","HttpParams","keys","forEach","key","param","get","UnderscoreToCamelcaseInterceptor","transformObjectKeysToCamelCase","object","_this","ret","Object","newKey","replace","v","toUpperCase","Array","value","res","includes","body","httpInterceptorProviders","provide","HTTP_INTERCEPTORS","useClass","multi","Album","AlbumSimplified","Artist","ArtistSimplified","AudioAnalysis","AudioFeatures","Category","Context","Copyright","Cursor","CursorPaging","Device","Error","ExternalId","ExternalUrl","FeaturedPlaylists","Followers","Image","Paging","PlayHistory","Playback","extendStatics","d","b","setPrototypeOf","__proto__","p","hasOwnProperty","__assign","assign","t","s","i","n","arguments","length","call","apply","PlayerError","__extends","__","constructor","create","tslib_1.__extends","Playlist","PlaylistSimplified","PlaylistTrack","Recommendations","RecommendationsSeed","Restriction","SavedAlbum","SavedTrack","SearchResult","Track","TrackCurrent","TrackLink","TrackSimplified","UserPrivate","UserPublic","AlbumService","config","http","getAlbum","id","market","getAlbumTracks","limit","offset","toString","getAlbums","ids","of","join","albums","args","providedIn","decorators","type","Optional","HttpClient","ArtistService","getArtist","getArtistsAlbums","includeGroups","include_groups","getArtistsTopTracks","tracks","getArtistsRelatedArtists","artists","getArtists","BrowseService","getCategory","country","locale","getCategoryPlaylists","playlists","getCategories","list","categories","getFeaturedPlaylists","timestamp","Date","toISOString","getNewReleases","_a","FollowService","isFollowingArtists","isFollowingUsers","areFollowingPlaylist","playlistId","usersToCheck","followArtists","put","followUsers","followPlaylist","isPublic","public","getFollowedArtists","after","unfollowArtists","delete","unfollowUsers","unfollowPlaylist","LibraryService","areSavedAlbums","undefined","areSavedTracks","getSavedAlbums","getSavedTracks","saveAlbums","removeAlbums","saveTracks","removeTracks","PersonalizationService","getTopArtists","timeRange","time_range","getTopTracks","PlayerService","nextTrack","deviceId","post","device_id","take","previousTrack","seekToPosition","positionMs","position_ms","getAvailableDevices","devices","toggleShuffle","shuffle","state","transferPlayback","deviceIds","forcePlay","device_ids","play","getRecentlyPlayedTracks","before","startPlayback","context","uris","context_uri","pausePlayback","toggleRepeatMode","mode","getPlayback","getCurrentlyPlayingTrack","setPlaybackVolume","volume","volume_percent","PlaylistService","addTracksToPlaylist","position","snapshotId","removeTracksFromPlaylist","request","uri","getPlaylist","getPlaylistTracks","getPlaylistCover","uploadPlaylistCover","image","Content-Type","getOwnPlaylists","updateDetails","name","isCollaborative","description","collaborative","getUsersPlaylists","replacePlaylistTracks","createPlaylists","userid","reorderPlaylistTracks","rangeStart","rangeLength","insertBefore","snapshot","range_start","insert_before","range_length","snapshot_id","SearchService","search","searchTerms","types","includeExternal","q","encodeURIComponent","include_external","TrackService","getTrack","getAudioFeatures","getAudioAnalysis","getTracks","getSeveralAudioFeatures","audioFeatures","UserService","getUser","getCurrentUser","NgxSpotifyApiModule","forRoot","api","authorization","ngModule","providers","useValue","NgModule","imports","CommonModule","HttpClientModule"],"mappings":"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","sourcesContent":["export class ApiConfig {\r\n  baseUrl = 'https://api.spotify.com';\r\n}\r\n","import {Observable} from 'rxjs';\r\n\r\nexport class AuthorizationConfig {\r\n  /**\r\n   * @description This will be used for signing your requests. An access token is required for all endpoints\r\n   */\r\n  accessToken: () => Observable<string>;\r\n\r\n  /**\r\n   * @description This used to prefix the access- and refreshToken inside the local storage.\r\n   */\r\n  storagePrefix = 'ngx-spotify-api-';\r\n\r\n  /**\r\n   * @description This is an array of all scopes you need your application to access to. Default all scopes will be requested\r\n   */\r\n  scopes?: string[] = [\r\n    'user-top-read', 'user-read-recently-played',\r\n    'user-read-email', 'user-read-birthdate', 'user-read-private',\r\n    'playlist-read-collaborative', 'playlist-modify-public', 'playlist-read-private', 'playlist-modify-private',\r\n    'user-library-modify', 'user-library-read',\r\n    'user-follow-modify', 'user-follow-read',\r\n    'streaming', 'app-remote-control',\r\n    'user-read-playback-state', 'user-modify-playback-state', 'user-read-currently-playing'\r\n  ];\r\n}\r\n","import {AuthorizationConfig} from './authorization.config';\r\nimport {ApiConfig} from './api.config';\r\n\r\nexport class SpotifyApiConfig {\r\n  authorization: AuthorizationConfig;\r\n  api?: ApiConfig;\r\n}\r\n","import {HttpEvent, HttpHandler, HttpInterceptor, HttpRequest} from '@angular/common/http';\r\nimport {Observable} from 'rxjs';\r\nimport {Injectable} from '@angular/core';\r\nimport {ApiConfig, AuthorizationConfig} from '../models/configs';\r\nimport {flatMap, map} from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class AuthInterceptor implements HttpInterceptor {\r\n\r\n    constructor(private apiConfig: ApiConfig,\r\n                private authConfig: AuthorizationConfig) {}\r\n\r\n    private attachAuthorizationHeader(req: HttpRequest<any>): Observable<HttpRequest<any>> {\r\n      return  this.authConfig.accessToken().pipe(map((token: string): HttpRequest<any> => {\r\n        return req.clone({\r\n          headers: req.headers.set('Authorization', 'Bearer ' + token)\r\n        });\r\n      }));\r\n    }\r\n\r\n    intercept(origReq: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        return this.attachAuthorizationHeader(origReq).pipe(flatMap((req: HttpRequest<any>): Observable<HttpEvent<any>> => {\r\n          return next.handle(req);\r\n        }));\r\n    }\r\n}\r\n","import {HttpEvent, HttpHandler, HttpInterceptor, HttpRequest} from '@angular/common/http';\r\nimport {Observable} from 'rxjs';\r\nimport {Injectable} from '@angular/core';\r\nimport {ApiConfig} from '../models/configs/api.config';\r\n\r\n@Injectable()\r\nexport class CorsInterceptor implements HttpInterceptor {\r\n    constructor(private apiConfig: ApiConfig) {}\r\n\r\n    intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        let headers = req.headers;\r\n\r\n        if (req.url.indexOf(this.apiConfig.baseUrl) > -1) {\r\n            headers = headers.set('Accept', 'application/json');\r\n            headers = headers.set('Content-Type', 'application/json');\r\n        } else if (req.url.indexOf('authorize')) {\r\n            // headers = req.headers.set('Access-Control-Allow-Origin', '*');\r\n        }\r\n\r\n        const newReq = req.clone({\r\n            headers: headers\r\n        });\r\n        return next.handle(newReq);\r\n    }\r\n}\r\n","import {HttpEvent, HttpHandler, HttpInterceptor, HttpParams, HttpRequest} from '@angular/common/http';\r\nimport {Observable} from 'rxjs';\r\nimport {Injectable} from '@angular/core';\r\nimport {ApiConfig} from '../models/configs';\r\n\r\n@Injectable()\r\nexport class RemoveNullParamsInterceptor implements HttpInterceptor {\r\n  constructor(private apiConfig: ApiConfig) {\r\n\r\n  }\r\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n    const params: HttpParams = new HttpParams();\r\n    if (req.url.indexOf(this.apiConfig.baseUrl) > -1) {\r\n      params.keys().forEach((key: string) => {\r\n        const param = params.get(key);\r\n        if (param != null && param !== 'null' && param !== 'undefined' && param !== '') {\r\n          params.set(key, param);\r\n        }\r\n      });\r\n    }\r\n    const newReq = req.clone({\r\n      'params': params\r\n    });\r\n    return next.handle(newReq);\r\n  }\r\n}\r\n","import {HttpEvent, HttpHandler, HttpInterceptor, HttpRequest, HttpResponse} from '@angular/common/http';\r\nimport {Observable} from 'rxjs';\r\nimport {map, take} from 'rxjs/operators';\r\nimport {Injectable} from '@angular/core';\r\nimport {ApiConfig} from '../models/configs/api.config';\r\nimport {AuthorizationConfig} from \"../models/configs\";\r\n\r\n@Injectable()\r\nexport class UnderscoreToCamelcaseInterceptor implements HttpInterceptor {\r\n\r\n    constructor(private apiConfig: ApiConfig, private authConfig: AuthorizationConfig) {}\r\n\r\n    private transformObjectKeysToCamelCase(object: any): any {\r\n        if (object == null || object === {}) {\r\n            return object;\r\n        }\r\n        const ret = {};\r\n        Object.keys(object).forEach((key: string) => {\r\n            const newKey = key.replace(/[_]([^_])?/g, (v) => {\r\n                return v.replace('_', '').toUpperCase();\r\n            });\r\n            if (object[key] instanceof Array) {\r\n                ret[newKey] = object[key].map((value: any) => {\r\n                    return this.transformObjectKeysToCamelCase(value);\r\n                });\r\n            } else if (object[key] instanceof Object) {\r\n                ret[newKey] = this.transformObjectKeysToCamelCase(object[key]);\r\n            } else {\r\n                ret[newKey] = object[key];\r\n            }\r\n        });\r\n        return ret;\r\n    }\r\n    intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        return next.handle(req).pipe(map((res: HttpResponse<any>): HttpResponse<any> => {\r\n            if (req && req.url && req.url.includes(this.apiConfig.baseUrl) && res.body) {\r\n                return res.clone({\r\n                    body: this.transformObjectKeysToCamelCase(res.body)\r\n                });\r\n            }\r\n            return res;\r\n        }));\r\n    }\r\n}\r\n","/* \"Barrel\" of Http Interceptors */\r\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport {AuthInterceptor} from './Auth.interceptor';\r\nimport {CorsInterceptor} from './Cors.interceptor';\r\nimport {RemoveNullParamsInterceptor} from './RemoveNullParams.interceptor';\r\nimport {UnderscoreToCamelcaseInterceptor} from './UnderscoreToCamelcase.interceptor';\r\n\r\nexport * from './Auth.interceptor';\r\nexport * from './Cors.interceptor';\r\nexport * from './RemoveNullParams.interceptor';\r\nexport * from './UnderscoreToCamelcase.interceptor';\r\n\r\n/** Http interceptor providers in outside-in order */\r\nexport const httpInterceptorProviders = [\r\n  { provide: HTTP_INTERCEPTORS, useClass: AuthInterceptor, multi: true },\r\n  { provide: HTTP_INTERCEPTORS, useClass: CorsInterceptor, multi: true },\r\n  { provide: HTTP_INTERCEPTORS, useClass: RemoveNullParamsInterceptor, multi: true },\r\n  { provide: HTTP_INTERCEPTORS, useClass: UnderscoreToCamelcaseInterceptor, multi: true }\r\n];\r\n","import {Artist} from './artist';\r\nimport {Copyright} from './copyright';\r\nimport {ExternalId} from './external-id';\r\nimport {ExternalUrl} from './external-url';\r\nimport {Image} from './image';\r\nimport {Restriction} from './restriction';\r\nimport {Track} from './track';\r\nimport {Paging} from './paging';\r\nimport {AlbumType} from './album-type';\r\n\r\nexport class Album {\r\n    albumType: AlbumType;\r\n    artists: Artist[];\r\n    availableMarkets: string[];\r\n    copyrights: Copyright[];\r\n    externalIds: ExternalId;\r\n    externalUrls: ExternalUrl;\r\n    genres: string[];\r\n    href: string;\r\n    id: string;\r\n    images: Image[];\r\n    label: string;\r\n    name: string;\r\n    popularity: number;\r\n    releaseDate: string;\r\n    releaseDatePrecision: 'year' | 'month' | 'day';\r\n    restrictions: Restriction;\r\n    tracks: Paging<Track>;\r\n    type: 'album';\r\n    uri: string;\r\n}\r\n","import {ExternalUrl} from './external-url';\r\nimport {Image} from './image';\r\nimport {Restriction} from './restriction';\r\nimport {ArtistSimplified} from './artist-simplified';\r\nimport {AlbumType} from './album-type';\r\nimport {AlbumGroup} from './album-group';\r\n\r\nexport class AlbumSimplified {\r\n    albumGroup: AlbumGroup;\r\n    albumType: AlbumType;\r\n    artists: ArtistSimplified[];\r\n    availableMarkets: string[];\r\n    externalUrls: ExternalUrl;\r\n    href: string;\r\n    id: string;\r\n    images: Image[];\r\n    name: string;\r\n    releaseDate: string;\r\n    releaseDatePrecision: 'year' | 'month' | 'day';\r\n    restrictions: Restriction;\r\n    type: 'album';\r\n    uri: string;\r\n}\r\n","import {ExternalUrl} from './external-url';\nimport {Followers} from './followers';\nimport {Image} from './image';\n\nexport class Artist {\n    externalUrls: ExternalUrl;\n    followers: Followers;\n    genres: string[];\n    href: string;\n    id: string;\n    images: Image[];\n    name: string;\n    populariy: number;\n    type: 'artist';\n    uri: string;\n}\n","import {ExternalUrl} from './external-url';\nimport {Followers} from './followers';\n\nexport class ArtistSimplified {\n    externalUrls: ExternalUrl;\n    href: string;\n    id: string;\n    name: string;\n    type: 'artist';\n    uri: string;\n}\n","export class AudioAnalysis {\r\n  [key: string]: any;\r\n}\r\n","export class AudioFeatures {\r\n    acousticness: number;\r\n    analysisUrl: string;\r\n    danceability: number;\r\n    durationMs: number;\r\n    energy: number;\r\n    id: string;\r\n    instrumentalness: number;\r\n    key: number;\r\n    liveness: number;\r\n    loudness: number;\r\n    mode: 0 | 1; // Major = 1, minor = 0\r\n    speechiness: number;\r\n    tempo: number;\r\n    timeSignature: number;\r\n    trackHref: string;\r\n    type: 'audio_features';\r\n    uri: string;\r\n    valence: number;\r\n}\r\n","import {Image} from './image';\n\nexport class Category {\n    href: string;\n    icons: Image[];\n    id: string;\n    name: string;\n}\n","import {ExternalUrl} from './external-url';\n\nexport class Context {\n    type: 'artist' | 'playlist' | 'album';\n    href: string;\n    externalUrls: ExternalUrl;\n    uri: string;\n}\n","export class Copyright {\n    text: string;\n    type: 'C' | 'P';\n}\n","export class Cursor {\n    after: string;\n}\n","import {Cursor} from './cursor';\n\nexport class CursorPaging<C> {\n    href: string;\n    items: C[];\n    limit: number;\n    next: string;\n    cursors: Cursor;\n    total: number;\n}\n","export class Device {\r\n  id: string;\r\n  name: string;\r\n  type: string;\r\n  volumePercent: number;\r\n  isActive: boolean;\r\n  isPrivateSession: boolean;\r\n  isRestricted: boolean;\r\n}","export class Error {\n    /* HTTP status-code */\n    status: number;\n    message: string;\n}\n","export class ExternalId {\r\n  isrc?: string;\r\n  ean?: string;\r\n  upc?: string;\r\n}\r\n","export class ExternalUrl {\r\n    [target: string]: string\r\n}\r\n","import {Paging} from './paging';\nimport {Playlist} from './playlist';\nimport {PlaylistSimplified} from './playlist-simplified';\n\nexport class FeaturedPlaylists {\n  message: string;\n  playlists: Paging<PlaylistSimplified>;\n}\n","export class Followers {\n    href: string;\n    total: number;\n\n}\n","export class Image {\n    height: number;\n    url: string;\n    width: number;\n}\n","export class Paging<C> {\n    href: string;\n    items: C[];\n    limit: number;\n    next: string;\n    offset: number;\n    previous: string;\n    total: number;\n}\n","import {TrackSimplified} from './track-simplified';\nimport {Timestamp} from 'rxjs';\nimport {Context} from './context';\n\nexport class PlayHistory {\n    track: TrackSimplified;\n    playedAt: number; // timestamp\n    context: Context;\n}\n","import {Device} from './device';\r\nimport {Track} from './track';\r\nimport {Context} from './context';\r\n\r\nexport class Playback {\r\n  timestamp: number;\r\n  device: Device;\r\n  progressMs: number;\r\n  isPlaying: boolean;\r\n  currentlyPlayingType: 'track';\r\n  item: Track;\r\n  shuffleState: boolean;\r\n  repeatState: 'track' | 'context' | 'off';\r\n  context: Context;\r\n}\r\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { Error } from './error';\n\nexport class PlayerError extends Error {\n    status: 404 | 403;\n    message: string;\n    reason: string;\n}\n","import {ExternalUrl} from './external-url';\nimport {Followers} from './followers';\nimport {Image} from './image';\nimport {UserPublic} from './user-public';\nimport {Paging} from './paging';\nimport {PlaylistTrack} from './playlist-track';\n\nexport class Playlist {\n    collaborative: boolean;\n    description: string;\n    externalUrls: ExternalUrl;\n    followers: Followers;\n    href: string;\n    id: string;\n    images: Image[];\n    name: string;\n    owner: UserPublic;\n    public: boolean | null;\n    snapshotId: string;\n    tracks: Paging<PlaylistTrack>;\n    type: 'playlist';\n    uri: string;\n}\n","import {ExternalUrl} from './external-url';\nimport {Followers} from './followers';\nimport {Image} from './image';\nimport {UserPublic} from './user-public';\nimport {Paging} from './paging';\nimport {PlaylistTrack} from './playlist-track';\n\nexport class PlaylistSimplified {\n    collaborative: boolean;\n    externalUrls: ExternalUrl;\n    href: string;\n    id: string;\n    images: Image[];\n    name: string;\n    owner: UserPublic;\n    public: boolean | null;\n    snapshotId: string;\n    tracks: {\n        href: string;\n        total: number;\n    };\n    type: 'playlist';\n    uri: string;\n}\n","import {UserPublic} from './user-public';\nimport {Track} from './track';\n\nexport class PlaylistTrack {\n    addedAt: number | null; // timestamp\n    addedBy: UserPublic | null;\n    isLocal: boolean;\n    track: Track;\n}\n","import {RecommendationsSeed} from './recommendations-seed';\nimport {TrackSimplified} from './track-simplified';\n\nexport class Recommendations {\n    seeds: RecommendationsSeed[];\n    tracks: TrackSimplified[];\n}\n","export class RecommendationsSeed {\n    afterFilteringSize: number;\n    afterRelinkingSize: number;\n    href: string;\n    id: number;\n    initialPoolSize: number;\n    type: 'artist' | 'track' | 'genre';\n}\n","export class Restriction {\n    reason: string;\n}\n","import {Album} from './album';\n\nexport class SavedAlbum {\n    addedAt: number; // timestamp\n    album: Album;\n}\n","import {Track} from './track';\n\nexport class SavedTrack {\n    addedAt: number; // timestamp\n    track: Track;\n}\n","import {Paging} from './paging';\r\nimport {Artist} from './artist';\r\nimport {AlbumSimplified} from './album-simplified';\r\nimport {Track} from './track';\r\nimport {PlaylistSimplified} from './playlist-simplified';\r\n\r\nexport class SearchResult {\r\n  artists?: Paging<Artist>;\r\n  albums?: Paging<AlbumSimplified>;\r\n  tracks?: Paging<Track>;\r\n  playlists?: Paging<PlaylistSimplified>;\r\n}\r\n","import {Album} from './album';\nimport {ArtistSimplified} from './artist-simplified';\nimport {ExternalId} from './external-id';\nimport {ExternalUrl} from './external-url';\nimport {TrackLink} from './track-link';\nimport {Restriction} from './restriction';\n\nexport class Track {\n    album: Album;\n    artists: ArtistSimplified[];\n    availableMarkets: string[];\n    discNumber: number;\n    durationMs: number;\n    explicit: boolean;\n    externalIds: ExternalId;\n    externalUrls: ExternalUrl;\n    href: string;\n    id: string;\n    isPlayable: boolean;\n    linkedFrom: TrackLink;\n    restrictions: Restriction;\n    name: string;\n    popularity: number;\n    previewUrl: string;\n    trackNumber: number;\n    type: 'track';\n    uri: string;\n    isLocal: boolean;\n}\n","import {Context} from './context';\r\nimport {Track} from './track';\r\n\r\nexport class TrackCurrent {\r\n  context: Context;\r\n  timestamp: number;\r\n  progressMs: number;\r\n  isPlaying: boolean;\r\n  currentlyPlayingType: 'track';\r\n  item: Track;\r\n}","import {ExternalUrl} from './external-url';\n\nexport class TrackLink {\n    externalUrls: ExternalUrl;\n    href: string;\n    id: string;\n    type: 'track';\n    uri: string;\n}\n","import {ArtistSimplified} from './artist-simplified';\nimport {ExternalUrl} from './external-url';\nimport {TrackLink} from './track-link';\nimport {Restriction} from './restriction';\n\nexport class TrackSimplified {\n    artists: ArtistSimplified[];\n    availableMarkets: string[];\n    discNumber: number;\n    durationMs: number;\n    explicit: boolean;\n    externalUrls: ExternalUrl;\n    href: string;\n    id: string;\n    isPlayable: boolean;\n    linkedFrom: TrackLink;\n    restrictions: Restriction;\n    name: string;\n    previewUrl: string;\n    trackNumber: number;\n    type: 'track';\n    uri: string;\n    isLocal: boolean;\n}\n","import {ExternalUrl} from './external-url';\nimport {Followers} from './followers';\nimport {Image} from './image';\n\nexport class UserPrivate {\n    birthdate: string;\n    country: string;\n    displayName: string;\n    email?: string;\n    externalUrls: ExternalUrl;\n    followers: Followers;\n    href: string;\n    id: string;\n    images: Image[];\n    product: 'premium' | 'free' | 'open';\n    type: 'user';\n    uri: string;\n}\n","import {ExternalUrl} from './external-url';\nimport {Followers} from './followers';\nimport {Image} from './image';\n\nexport class UserPublic {\n    displayName: string;\n    externalUrls: ExternalUrl;\n    followers: Followers;\n    href: string;\n    id: string;\n    images: Image[];\n    type: 'user';\n    uri: string;\n}\n","import {Injectable, Optional} from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {Observable, of} from 'rxjs';\r\nimport {Album} from '../models';\r\nimport {map, tap} from 'rxjs/operators';\r\nimport {Paging} from '../models';\r\nimport {Track} from '../models';\r\nimport {ApiConfig} from '../models';\r\n\r\nclass AlbumsResponse {\r\n  albums: Album[];\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AlbumService {\r\n\r\n  constructor(@Optional() private config: ApiConfig,\r\n              private http: HttpClient) {\r\n  }\r\n\r\n  getAlbum(id: string, market?: string): Observable<Album> {\r\n    return this.http.get<Album>(this.config.baseUrl + '/v1/albums/' + id, {\r\n      params: {\r\n        market: market\r\n      }\r\n    });\r\n  }\r\n\r\n  getAlbumTracks(id: string, limit: number = 20, offset: number = 0, market?: string): Observable<Paging<Track>> {\r\n    return this.http.get<Paging<Track>>(this.config.baseUrl + '/v1/albums/' + id + '/tracks', {\r\n      params: {\r\n        limit: limit.toString(),\r\n        offset: offset.toString(),\r\n        market: market\r\n      }\r\n    });\r\n  }\r\n\r\n  getAlbums(ids: string[], market?: string): Observable<Album[]> {\r\n    if (ids == null || ids.length < 1) {\r\n      return of([]);\r\n    } else if (ids.length > 20) {\r\n      return of(null);\r\n    }\r\n\r\n    return this.http.get<AlbumsResponse>(this.config.baseUrl + '/v1/albums', {\r\n      params: {\r\n        ids: ids.join(','),\r\n        market: market\r\n      }\r\n    }).pipe(map((res: AlbumsResponse): Album[] => {\r\n      return res.albums;\r\n    }));\r\n  }\r\n}\r\n","import {Injectable, Optional} from '@angular/core';\r\nimport {Observable, of} from 'rxjs';\r\nimport {Artist} from '../models';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {Paging} from '../models';\r\nimport {Track} from '../models';\r\nimport {Album} from '../models';\r\nimport {map} from 'rxjs/operators';\r\nimport {ApiConfig} from '../models';\r\nimport {AlbumGroup} from '../models';\r\nimport {AlbumSimplified} from '../models';\r\n\r\nclass ArtistListResponse {\r\n  artists: Artist[];\r\n}\r\n\r\nclass TrackListResponse {\r\n  tracks: Track[];\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ArtistService {\r\n\r\n  constructor(@Optional() private config: ApiConfig,\r\n              private http: HttpClient) { }\r\n\r\n  getArtist(id: string): Observable<Artist> {\r\n    return this.http.get<Artist>(this.config.baseUrl + '/v1/artists/' + id, {\r\n      params: {}\r\n    });\r\n  }\r\n\r\n  getArtistsAlbums(id: string, includeGroups?: AlbumGroup[], market?: string, limit: number = 20, offset: number = 0): Observable<Paging<AlbumSimplified>> {\r\n    return this.http.get<Paging<AlbumSimplified>>(this.config.baseUrl + '/v1/artists/' + id + '/albums', {\r\n      params: {\r\n        include_groups: includeGroups ? includeGroups.join(',') : null,\r\n        market,\r\n        limit: limit.toString(),\r\n        offset: offset.toString()\r\n      }\r\n    });\r\n  }\r\n\r\n  getArtistsTopTracks(id: string, market: string): Observable<Track[]> {\r\n    return this.http.get<TrackListResponse>(this.config.baseUrl + '/v1/artists/' + id + '/top-tracks', {\r\n      params: {\r\n        market: market\r\n      }\r\n    }).pipe(map((res: TrackListResponse): Track[] => {\r\n      return res.tracks;\r\n    }));\r\n  }\r\n\r\n  getArtistsRelatedArtists(id: string): Observable<Artist[]> {\r\n    return this.http.get<ArtistListResponse>(this.config.baseUrl + '/v1/artists/' + id + '/related-artists', {\r\n      params: {}\r\n    }).pipe(map((res: ArtistListResponse): Artist[] => {\r\n      return res.artists;\r\n    }));\r\n  }\r\n\r\n  getArtists(ids: string[]): Observable<Artist[]> {\r\n    if (ids == null || ids.length < 1) {\r\n      return of([]);\r\n    } else if (ids.length > 50) {\r\n      return of(null);\r\n    }\r\n\r\n    return this.http.get<ArtistListResponse>(this.config.baseUrl + '/v1/artists/', {\r\n      params: {\r\n        ids: ids.join(',')\r\n      }\r\n    }).pipe(map((res: ArtistListResponse): Artist[] => {\r\n      return res.artists;\r\n    }));\r\n  }\r\n}\r\n","import {Injectable, Optional} from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {Observable} from 'rxjs';\r\nimport {Category} from '../models';\r\nimport {Playlist} from '../models';\r\nimport {map} from 'rxjs/operators';\r\nimport {Paging} from '../models';\r\nimport {FeaturedPlaylists} from '../models';\r\nimport {Album} from '../models';\r\nimport {AlbumSimplified} from '../models';\r\nimport {ApiConfig} from '../models';\r\nimport {PlaylistSimplified} from '../models';\r\n\r\nclass PlaylistList {\r\n  playlists: Paging<PlaylistSimplified>;\r\n}\r\n\r\nclass CategoryList {\r\n  categories: Paging<Category>;\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class BrowseService {\r\n\r\n  constructor(@Optional() private config: ApiConfig,\r\n              private http: HttpClient) { }\r\n\r\n  public getCategory(id: string, country?: string, locale?: string): Observable<Category> {\r\n    return this.http.get<Category>(this.config.baseUrl + '/v1/browse/categories/' + id, {\r\n      params: {\r\n        country: country,\r\n        locale: locale\r\n      }\r\n    });\r\n  }\r\n\r\n  public getCategoryPlaylists(id: string, country?: string, limit: number = 20, offset: number = 0): Observable<Paging<PlaylistSimplified>> {\r\n    return this.http.get<PlaylistList>(this.config.baseUrl + '/v1/browse/categories/' + id + '/playlists', {\r\n      params: {\r\n        country: country,\r\n        limit: limit.toString(),\r\n        offset: offset.toString()\r\n      }\r\n    }).pipe(map((res: PlaylistList) => {\r\n        return res.playlists;\r\n      }));\r\n  }\r\n\r\n  public getCategories(country?: string, locale?: string, limit: number = 20, offset: number = 0): Observable<Paging<Category>> {\r\n    return this.http.get<CategoryList>(this.config.baseUrl + '/v1/browse/categories', {\r\n      params: {\r\n        country: country,\r\n        locale: locale,\r\n        limit: limit.toString(),\r\n        offset: offset.toString()\r\n      }\r\n    }).pipe(map((list: CategoryList) => {\r\n      return list.categories;\r\n    }));\r\n  }\r\n\r\n  public getFeaturedPlaylists(\r\n    country?: string,\r\n    locale?: string,\r\n    timestamp: Date = new Date(),\r\n    limit: number = 20, offset: number = 0)\r\n    : Observable<FeaturedPlaylists> {\r\n      return this.http.get<FeaturedPlaylists>(this.config.baseUrl + '/v1/browse/featured-playlists', {\r\n        params: {\r\n          country,\r\n          locale,\r\n          timestamp: timestamp.toISOString(),\r\n          limit: limit.toString(),\r\n          offset: offset.toString()\r\n        }\r\n      });\r\n  }\r\n\r\n  public getNewReleases(country?: string, limit: number = 20, offset: number = 0): Observable<Paging<AlbumSimplified>> {\r\n    return this.http.get<{ albums: Paging<AlbumSimplified> }>(this.config.baseUrl + '/v1/browse/new-releases', {\r\n      params: {\r\n        country,\r\n        limit: limit.toString(),\r\n        offset: offset.toString()\r\n      }\r\n    }).pipe(map(({albums}) => {\r\n      return albums;\r\n    }));\r\n  }\r\n\r\n  // Recommendations will follow in a future release\r\n}\r\n","import {Injectable, Optional} from '@angular/core';\r\nimport {HttpClient, HttpErrorResponse} from '@angular/common/http';\r\nimport {Observable, of} from 'rxjs';\r\nimport {CursorPaging} from '../models';\r\nimport {Artist} from '../models';\r\nimport {ApiConfig} from '../models';\r\nimport {catchError, map} from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class FollowService {\r\n\r\n  constructor(@Optional() private config: ApiConfig,\r\n              private http: HttpClient) { }\r\n\r\n  public isFollowingArtists(ids: string[]): Observable<boolean[]> {\r\n    if (ids === null || ids.length === 0) {\r\n      return of([]);\r\n    } else if (ids.length > 50) {\r\n      return of(null);\r\n    }\r\n    return this.http.get<boolean[]>(this.config.baseUrl + '/v1/me/following/contains', {\r\n      params: {\r\n        type: 'artist',\r\n        ids: ids.join(',')\r\n      }\r\n    });\r\n  }\r\n\r\n  public isFollowingUsers(ids: string[]): Observable<boolean[]> {\r\n    if (ids === null || ids.length === 0) {\r\n      return of([]);\r\n    } else if (ids.length > 50) {\r\n      return of(null);\r\n    }\r\n    return this.http.get<boolean[]>(this.config.baseUrl + '/v1/me/following/contains', {\r\n      params: {\r\n        type: 'user',\r\n        ids: ids.join(',')\r\n      }\r\n    });\r\n  }\r\n\r\n  public areFollowingPlaylist(playlistId: string, usersToCheck: string[]): Observable<boolean[]> {\r\n    if (usersToCheck === null || usersToCheck.length === 0) {\r\n      return of([]);\r\n    } else if (usersToCheck.length > 5) {\r\n      return of(null);\r\n    }\r\n    return this.http.get<boolean[]>(this.config.baseUrl + `/v1/playlists/${playlistId}/followers/contains`, {\r\n      params: {\r\n        ids: usersToCheck.join(',')\r\n      }\r\n    });\r\n  }\r\n\r\n  public followArtists(ids: string[]): Observable<boolean> {\r\n    if (ids === null || ids.length === 0) {\r\n      return of(false);\r\n    } else if (ids.length > 50) {\r\n      return of(false);\r\n    }\r\n    return this.http.put<void>(this.config.baseUrl + '/v1/me/following', {}, {\r\n      params: {\r\n        type: 'artist',\r\n        ids: ids.join(',')\r\n      }\r\n    }).pipe(map((): boolean => {\r\n      return true;\r\n    }));\r\n  }\r\n\r\n  public followUsers(ids: string[]): Observable<boolean> {\r\n    if (ids === null || ids.length === 0) {\r\n      return of(false);\r\n    } else if (ids.length > 50) {\r\n      return of(false);\r\n    }\r\n    return this.http.put(this.config.baseUrl + '/v1/me/following', {}, {\r\n      params: {\r\n        type: 'user',\r\n        ids: ids.join(',')\r\n      }\r\n    }).pipe(map(() => {\r\n      return true;\r\n    }));\r\n  }\r\n\r\n  public followPlaylist(id: string, isPublic: boolean = false): Observable<boolean> {\r\n    return this.http.put(this.config.baseUrl + `/v1/playlists/${id}/followers`, {\r\n      public: isPublic\r\n    }).pipe(map(() => {\r\n      return true;\r\n    }));\r\n  }\r\n\r\n  public getFollowedArtists(limit: number = 20, after?: string): Observable<CursorPaging<Artist>> {\r\n    return this.http.get<CursorPaging<Artist>>(this.config.baseUrl + `/v1/me/following`, {\r\n      params: {\r\n        type: 'artist',\r\n        limit: limit.toString(),\r\n        after: after\r\n      }\r\n    });\r\n  }\r\n\r\n  public unfollowArtists(ids: string[]): Observable<boolean> {\r\n    if (ids === null || ids.length === 0) {\r\n      return of(false);\r\n    } else if (ids.length > 50) {\r\n      return of(false);\r\n    }\r\n    return this.http.delete(this.config.baseUrl + '/v1/me/following', {\r\n      params: {\r\n        type: 'artist',\r\n        ids: ids.join(',')\r\n      }\r\n    }).pipe(map(() => true));\r\n  }\r\n\r\n  public unfollowUsers(ids: string[]): Observable<boolean> {\r\n    if (ids === null || ids.length === 0) {\r\n      return of(false);\r\n    } else if (ids.length > 50) {\r\n      return of(false);\r\n    }\r\n    return this.http.delete(this.config.baseUrl + '/v1/me/following', {\r\n      params: {\r\n        type: 'user',\r\n        ids: ids.join(',')\r\n      }\r\n    }).pipe(map(() => true));\r\n  }\r\n\r\n  public unfollowPlaylist(id: string): Observable<boolean> {\r\n    return this.http.delete(this.config.baseUrl + `/v1/playlists/${id}/followers`).pipe(map(() => true));\r\n  }\r\n}\r\n","import {Injectable, Optional} from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {Observable, of} from 'rxjs';\r\nimport {Paging} from '../models';\r\nimport {Album} from '../models';\r\nimport {Track} from '../models';\r\nimport {ApiConfig} from '../models';\r\nimport {map} from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LibraryService {\r\n\r\n  constructor(@Optional() private config: ApiConfig,\r\n              private http: HttpClient) { }\r\n\r\n  public areSavedAlbums(ids: string[]): Observable<boolean[]> {\r\n    if (ids === null || ids === undefined || ids.length === 0) {\r\n      return of([]);\r\n    } else if (ids.length > 50) {\r\n      return of(null);\r\n    }\r\n\r\n    return this.http.get<boolean[]>(this.config.baseUrl + `/v1/me/albums/contains`, {\r\n      params: {\r\n        ids: ids.join(',')\r\n      }\r\n    });\r\n  }\r\n\r\n  public areSavedTracks(ids: string[]): Observable<boolean[]> {\r\n    if (ids === null || ids === undefined || ids.length === 0) {\r\n      return of([]);\r\n    } else if (ids.length > 50) {\r\n      return of(null);\r\n    }\r\n\r\n    return this.http.get<boolean[]>(this.config.baseUrl + `/v1/me/tracks/contains`, {\r\n      params: {\r\n        ids: ids.join(',')\r\n      }\r\n    });\r\n  }\r\n\r\n  public getSavedAlbums(limit: number = 20, offset: number = 0, market?: string): Observable<Paging<Album>> {\r\n    return this.http.get<Paging<Album>>(this.config.baseUrl + `/v1/me/albums`, {\r\n      params: {\r\n        limit: limit.toString(),\r\n        offset: offset.toString(),\r\n        market\r\n      }\r\n    });\r\n  }\r\n\r\n  public getSavedTracks(limit: number = 20, offset: number = 0, market?: string): Observable<Paging<Track>> {\r\n    return this.http.get<Paging<Track>>(this.config.baseUrl + `/v1/me/tracks`, {\r\n      params: {\r\n        limit: limit.toString(),\r\n        offset: offset.toString(),\r\n        market\r\n      }\r\n    });\r\n  }\r\n\r\n  public saveAlbums(ids: string[]): Observable<boolean> {\r\n    if (ids === null || ids === undefined || ids.length === 0) {\r\n      return of(false);\r\n    } else if (ids.length > 50) {\r\n      return of(false);\r\n    }\r\n    return this.http.put(this.config.baseUrl + `/v1/me/albums`, {}, {\r\n      params: {\r\n        ids: ids.join(',')\r\n      }\r\n    }).pipe(map(() => true));\r\n  }\r\n\r\n  public removeAlbums(ids: string[]): Observable<boolean> {\r\n    if (ids === null || ids === undefined || ids.length === 0) {\r\n      return of(false);\r\n    } else if (ids.length > 50) {\r\n      return of(false);\r\n    }\r\n    return this.http.delete(this.config.baseUrl + `/v1/me/albums`, {\r\n      params: {\r\n        ids: ids.join(',')\r\n      }\r\n    }).pipe(map(() => true));\r\n  }\r\n\r\n  public saveTracks(ids: string[]): Observable<boolean> {\r\n    if (ids === null || ids === undefined || ids.length === 0) {\r\n      return of(false);\r\n    } else if (ids.length > 50) {\r\n      return of(false);\r\n    }\r\n    return this.http.put(this.config.baseUrl + `/v1/me/tracks`, {}, {\r\n      params: {\r\n        ids: ids.join(',')\r\n      }\r\n    }).pipe(map(() => true));\r\n  }\r\n\r\n  public removeTracks(ids: string[]): Observable<boolean> {\r\n    if (ids === null || ids === undefined || ids.length === 0) {\r\n      return of(false);\r\n    } else if (ids.length > 50) {\r\n      return of(false);\r\n    }\r\n    return this.http.delete(this.config.baseUrl + `/v1/me/tracks`, {\r\n      params: {\r\n        ids: ids.join(',')\r\n      }\r\n    }).pipe(map(() => true));\r\n  }\r\n}\r\n","import {Injectable, Optional} from '@angular/core';\r\nimport {Observable} from 'rxjs';\r\nimport {Paging} from '../models';\r\nimport {Artist} from '../models';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {Track} from '../models';\r\nimport {ApiConfig} from '../models';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PersonalizationService {\r\n\r\n  constructor(@Optional() private config: ApiConfig,\r\n              private http: HttpClient) { }\r\n\r\n  public getTopArtists(limit: number = 20, offset: number = 0, timeRange?: 'long_term' | 'medium_term' | 'short_term'): Observable<Paging<Artist>> {\r\n    return this.http.get<Paging<Artist>>(this.config.baseUrl + `/v1/me/top/artists`, {\r\n      params: {\r\n        limit: limit.toString(),\r\n        offset: offset.toString(),\r\n        time_range: timeRange\r\n      }\r\n    });\r\n  }\r\n  public getTopTracks(limit: number = 20, offset: number = 0, timeRange?: 'long_term' | 'medium_term' | 'short_term'): Observable<Paging<Track>> {\r\n    return this.http.get<Paging<Track>>(this.config.baseUrl + `/v1/me/top/tracks`, {\r\n      params: {\r\n        limit: limit.toString(),\r\n        offset: offset.toString(),\r\n        time_range: timeRange\r\n      }\r\n    });\r\n  }\r\n}\r\n","import {Injectable, Optional} from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {Observable} from 'rxjs';\r\nimport {Device} from '../models';\r\nimport {map, take} from 'rxjs/operators';\r\nimport {CursorPaging} from '../models';\r\nimport {PlayHistory} from '../models';\r\nimport {Playback} from '../models';\r\nimport {TrackCurrent} from '../models';\r\nimport {ApiConfig} from '../models';\r\n\r\nclass DeviceList {\r\n  devices: Device[];\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PlayerService {\r\n\r\n  constructor(@Optional() private config: ApiConfig,\r\n              private http: HttpClient) { }\r\n\r\n  public nextTrack(deviceId?: string): Observable<boolean> {\r\n    return this.http.post(this.config.baseUrl + `/v1/me/player/next`, {}, {\r\n      params: {\r\n        device_id: deviceId\r\n      }\r\n    }).pipe(\r\n      take(1),\r\n      map(() => {\r\n        return true;\r\n      })\r\n    );\r\n  }\r\n\r\n  public previousTrack(deviceId?: string): Observable<boolean> {\r\n    return this.http.post(this.config.baseUrl + `/v1/me/player/previous`, {}, {\r\n      params: {\r\n        device_id: deviceId\r\n      }\r\n    }).pipe(\r\n      take(1),\r\n      map(() => {\r\n        return true;\r\n      })\r\n    );\r\n  }\r\n\r\n  public seekToPosition(positionMs: number, deviceId?: string): Observable<boolean> {\r\n    return this.http.put(this.config.baseUrl + `/v1/me/player/seek`, {}, {\r\n      params: {\r\n        position_ms: positionMs.toString(),\r\n        device_id: deviceId\r\n      }\r\n    }).pipe(\r\n      take(1),\r\n      map(() => {\r\n        return true;\r\n      })\r\n    );\r\n  }\r\n\r\n  public getAvailableDevices(): Observable<Device[]> {\r\n    return this.http.get<DeviceList>(this.config.baseUrl + `/v1/me/player/devices`).pipe(map((list: DeviceList) => list.devices));\r\n  }\r\n\r\n  public toggleShuffle(shuffle: boolean, deviceId?: string): Observable<boolean> {\r\n    return this.http.put(this.config.baseUrl + `/v1/me/player/shuffle`, {}, {\r\n      params: {\r\n        state: shuffle.toString(),\r\n        device_id: deviceId\r\n      }\r\n    }).pipe(\r\n      take(1),\r\n      map(() => {\r\n        return true;\r\n      })\r\n    );\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param deviceIds Although an array is accepted, only a single deviceId is currently supported\r\n   * @param forcePlay\r\n   */\r\n  public transferPlayback(deviceIds: string[], forcePlay: boolean = false): Observable<boolean> {\r\n    return this.http.put(this.config.baseUrl + `/v1/me/player`, {\r\n      device_ids: deviceIds.join(','),\r\n      play: forcePlay\r\n    }).pipe(\r\n      take(1),\r\n      map(() => {\r\n        return true;\r\n      })\r\n    );\r\n  }\r\n\r\n  public getRecentlyPlayedTracks(limit: number = 20, before?: number, after: number = 0): Observable<CursorPaging<PlayHistory>> {\r\n    return this.http.get<CursorPaging<PlayHistory>>(this.config.baseUrl + `/v1/me/player/recently-played`, {\r\n      params: {\r\n        limit: limit.toString(),\r\n        before: (before ? before.toString() : undefined),\r\n        after: after.toString(),\r\n      }\r\n    });\r\n  }\r\n\r\n  public startPlayback(deviceId?: string, context?: string, uris?: string[], offset?: any, positionMs?: number): Observable<boolean> {\r\n    return this.http.put(this.config.baseUrl + `/v1/me/player/play`, {\r\n      context_uri: context,\r\n      uris: uris,\r\n      offset: offset,\r\n      position_ms: positionMs\r\n    }, {\r\n      params: {\r\n        device_id: deviceId\r\n      }\r\n    }).pipe(\r\n      take(1),\r\n      map(() => {\r\n        return true;\r\n      })\r\n    );\r\n  }\r\n\r\n  public pausePlayback(deviceId?: string): Observable<boolean> {\r\n    return this.http.put(this.config.baseUrl + `/v1/me/player/pause`, {}, {\r\n      params: {\r\n        device_id: deviceId\r\n      }\r\n    }).pipe(\r\n      take(1),\r\n      map(() => {\r\n        return true;\r\n      })\r\n    );\r\n  }\r\n\r\n  public toggleRepeatMode(mode: 'track' | 'context' | 'off', deviceId?: string): Observable<boolean> {\r\n    return this.http.put(this.config.baseUrl + `/v1/me/player/repeat`, {}, {\r\n      params: {\r\n        state: mode,\r\n        device_id: deviceId\r\n      }\r\n    }).pipe(\r\n      take(1),\r\n      map(() => {\r\n        return true;\r\n      })\r\n    );\r\n  }\r\n\r\n  public getPlayback(market?: string): Observable<Playback> {\r\n    return this.http.get<Playback>(this.config.baseUrl + `/v1/me/player`, {\r\n      params: {\r\n        market: market\r\n      }\r\n    });\r\n  }\r\n\r\n  public getCurrentlyPlayingTrack(market?: string): Observable<TrackCurrent> {\r\n    return this.http.get<TrackCurrent>(this.config.baseUrl + `/v1/me/player/currently-playing`, {\r\n      params: {\r\n        market: market\r\n      }\r\n    });\r\n  }\r\n\r\n  public setPlaybackVolume(volume: number, deviceId?: string): Observable<boolean> {\r\n    return this.http.put(this.config.baseUrl + `/v1/me/player/volume`, {}, {\r\n      params: {\r\n        volume_percent: volume.toString(),\r\n        device_id: deviceId\r\n      }\r\n    }).pipe(\r\n      take(1),\r\n      map(() => {\r\n        return true;\r\n      })\r\n    );\r\n  }\r\n}\r\n","import {Injectable, Optional} from '@angular/core';\r\nimport {HttpClient, HttpResponse} from '@angular/common/http';\r\nimport {Observable, of} from 'rxjs';\r\nimport {map} from 'rxjs/operators';\r\nimport {Playlist} from '../models';\r\nimport {Paging} from '../models';\r\nimport {PlaylistTrack} from '../models';\r\nimport {Image} from '../models';\r\nimport {ApiConfig} from '../models';\r\n\r\nclass Snapshot {\r\n  snapshotId: string;\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PlaylistService {\r\n\r\n  constructor(@Optional() private config: ApiConfig,\r\n              private http: HttpClient) { }\r\n\r\n  public addTracksToPlaylist(id: string, uris: string[], position: number): Observable<string> {\r\n    if (typeof uris !== typeof [] || uris.length < 1 || uris.length > 100) {\r\n      return of(null);\r\n    }\r\n    return this.http.post<Snapshot>(this.config.baseUrl + `/v1/playlists/${id}/tracks`, {\r\n      uris: uris,\r\n      position: position\r\n    }).pipe(map(({ snapshotId }) => {\r\n      return snapshotId;\r\n    }));\r\n  }\r\n\r\n  public removeTracksFromPlaylist(id: string, uris: string[]): Observable<string> {\r\n    if (typeof uris !== typeof [] || uris.length < 1 || uris.length > 100) {\r\n      return of(null);\r\n    }\r\n    return this.http.request<Snapshot>('DELETE', this.config.baseUrl + `/v1/playlists/${id}/tracks`, {\r\n      body: {\r\n        tracks: uris.map((uri: string) => {\r\n          return { uri: uri };\r\n        })\r\n      }\r\n    }).pipe(map(({ snapshotId }) => {\r\n      return snapshotId;\r\n    }));\r\n  }\r\n\r\n  public getPlaylist(id: string, market?: string): Observable<Playlist> {\r\n    return this.http.get<Playlist>(this.config.baseUrl + `/v1/playlists/${id}`, {\r\n      params: {\r\n        market: market || ''\r\n      }\r\n    });\r\n  }\r\n\r\n  public getPlaylistTracks(id: string, market: string, limit: number = 100, offset: number = 0): Observable<Paging<PlaylistTrack>> {\r\n    return this.http.get<Paging<PlaylistTrack>>(this.config.baseUrl + `/v1/playlists/${id}/tracks`, {\r\n      params: {\r\n        limit: limit.toString(),\r\n        offset: offset.toString(),\r\n        market: market\r\n      }\r\n    });\r\n  }\r\n\r\n  public getPlaylistCover(id: string): Observable<Image[]> {\r\n    return this.http.get<Image[]>(this.config.baseUrl + `/v1/playlists/${id}/images`);\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param id id of playlist\r\n   * @param image base64 encoded jpeg (max. 256KB)\r\n   */\r\n  public uploadPlaylistCover(id: string, image: string): Observable<boolean> {\r\n    return this.http.put(this.config.baseUrl + `/v1/playlists/${id}/images`, image, {\r\n      headers: {\r\n        'Content-Type': 'image/jpeg'\r\n      }\r\n    }).pipe(map((res: HttpResponse<any>) => {\r\n      return true;\r\n    }));\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param limit min=1, default=20, max=50\r\n   * @param offset min=0, default=0, max=100000\r\n   */\r\n  public getOwnPlaylists(limit: number = 20, offset: number = 0): Observable<Paging<Playlist>> {\r\n    return this.http.get<Paging<Playlist>>(this.config.baseUrl + `/v1/me/playlists`, {\r\n      params: {\r\n        limit: limit.toString(),\r\n        offset: offset.toString()\r\n      }\r\n    });\r\n  }\r\n\r\n  public updateDetails(id: string, name?: string, isPublic?: boolean, isCollaborative?: boolean, description?: string): Observable<boolean> {\r\n    return this.http.put(this.config.baseUrl + `/v1/playlists/${id}`, {\r\n      name,\r\n      public: isPublic,\r\n      collaborative: isCollaborative,\r\n      description: description\r\n    }, {\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    }).pipe(map((res: HttpResponse<any>): boolean => {\r\n      return true;\r\n    }));\r\n  }\r\n\r\n  public getUsersPlaylists(id: string, limit: number = 20, offset: number = 0): Observable<Paging<Playlist>> {\r\n    return this.http.get<Paging<Playlist>>(this.config.baseUrl + `/v1/users/${id}/playlists`, {\r\n      params: {\r\n        limit: limit.toString(),\r\n        offset: offset.toString()\r\n      }\r\n    });\r\n  }\r\n\r\n  public replacePlaylistTracks(id: string, uris: string[]): Observable<boolean> {\r\n    return this.http.put(this.config.baseUrl + `/v1/playlists/${id}/tracks`, {\r\n      uris: uris\r\n    }, {\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    }).pipe(map((res: HttpResponse<any>): boolean => {\r\n      return true;\r\n    }));\r\n  }\r\n\r\n  public createPlaylists(userid: string, name: string, isPublic: boolean, isCollaborative: boolean, description: string = ''): Observable<Playlist> {\r\n    return this.http.post<Playlist>(this.config.baseUrl + `/v1/users/${userid}/playlists`, {\r\n      name,\r\n      public: isPublic,\r\n      collaborative: isCollaborative,\r\n      description\r\n    }, {\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    });\r\n  }\r\n\r\n  public reorderPlaylistTracks(id: string, rangeStart: number, rangeLength: number, insertBefore: number, snapshot?: string): Observable<string> {\r\n    return this.http.put<Snapshot>(this.config.baseUrl + `/v1/playlists/${id}/tracks`, {\r\n      range_start: rangeStart,\r\n      insert_before: insertBefore,\r\n      range_length: rangeLength,\r\n      snapshot_id: snapshot\r\n    }, {\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    }).pipe(map((s: Snapshot) => s.snapshotId));\r\n  }\r\n}\r\n","import {Injectable, Optional} from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {Observable} from 'rxjs';\r\nimport {SearchResult} from '../models';\r\nimport {ApiConfig} from '../models';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SearchService {\r\n\r\n  constructor(@Optional() private config: ApiConfig,\r\n              private http: HttpClient) { }\r\n\r\n  public search(searchTerms: string, types: ('album' | 'artist' | 'track' | 'playlist')[], market?: string, limit: number = 20, offset: number = 0, includeExternal?: boolean): Observable<SearchResult> {\r\n    return this.http.get<SearchResult>(this.config.baseUrl + `/v1/search`, {\r\n      params: {\r\n        q: encodeURIComponent(searchTerms),\r\n        type: types.join(','),\r\n        market: market,\r\n        limit: limit.toString(),\r\n        offset: offset.toString(),\r\n        include_external: includeExternal ? 'audio' : undefined\r\n      }\r\n    });\r\n  }\r\n}\r\n","import {Injectable, Optional} from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {Observable, of} from 'rxjs';\r\nimport {Track} from '../models';\r\nimport {AudioFeatures} from '../models';\r\nimport {AudioAnalysis} from '../models';\r\nimport {map} from 'rxjs/operators';\r\nimport {ApiConfig} from '../models';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TrackService {\r\n\r\n  constructor(@Optional() private config: ApiConfig,\r\n              private http: HttpClient) { }\r\n\r\n  public getTrack(id: string, market?: string): Observable<Track> {\r\n    return this.http.get<Track>(this.config.baseUrl + `/v1/tracks/${id}`, {\r\n      params: {\r\n        market\r\n      }\r\n    });\r\n  }\r\n\r\n  public getAudioFeatures(id: string): Observable<AudioFeatures> {\r\n    return this.http.get<AudioFeatures>(this.config.baseUrl + `/v1/audio-features/${id}`);\r\n  }\r\n\r\n  public getAudioAnalysis(id: string): Observable<AudioAnalysis> {\r\n    return this.http.get<AudioAnalysis>(this.config.baseUrl + `/v1/audio-analysis/${id}`);\r\n  }\r\n\r\n  public getTracks(ids: string[], market?: string): Observable<Track[]> {\r\n    if (ids === undefined || ids === null || ids.length === 0) {\r\n      return of([]);\r\n    } else if (ids.length > 50) {\r\n      return of(null);\r\n    }\r\n\r\n    return this.http.get<{tracks: Track[]}>(this.config.baseUrl + `/v1/tracks`, {\r\n      params: {\r\n        ids: ids.join(','),\r\n        market: market || ''\r\n      }\r\n    }).pipe(map(({ tracks }): Track[] => tracks));\r\n  }\r\n\r\n  public getSeveralAudioFeatures(ids: string[]): Observable<AudioFeatures[]> {\r\n    if (ids === undefined || ids === null || ids.length === 0) {\r\n      return of([]);\r\n    } else if (ids.length > 50) {\r\n      return of(null);\r\n    }\r\n\r\n    return this.http.get<{audioFeatures: AudioFeatures[]}>(this.config.baseUrl + `/v1/audio-features`, {\r\n      params: {\r\n        ids: ids.join(',')\r\n      }\r\n    }).pipe(map(({ audioFeatures }): AudioFeatures[] => audioFeatures));\r\n  }\r\n}\r\n","import {Injectable, Optional} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {Observable} from 'rxjs';\nimport {UserPublic} from '../models';\nimport {UserPrivate} from '../models';\nimport {ApiConfig} from '../models';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n\n  constructor(@Optional() private config: ApiConfig,\n              private http: HttpClient) { }\n\n  getUser(id: string): Observable<UserPublic> {\n    return this.http.get<UserPublic>(this.config.baseUrl + `/v1/users/${id}`);\n  }\n\n  getCurrentUser(): Observable<UserPrivate> {\n    return this.http.get<UserPrivate>(this.config.baseUrl + `/v1/me`);\n  }\n}\n","import {ModuleWithProviders, NgModule} from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HttpClientModule } from '@angular/common/http';\nimport {\n  AlbumService,\n  ArtistService,\n  BrowseService,\n  FollowService,\n  LibraryService,\n  PersonalizationService,\n  PlayerService, PlaylistService, SearchService, TrackService, UserService\n} from './services';\nimport {httpInterceptorProviders} from './http-interceptors';\nimport {ApiConfig, AuthorizationConfig, SpotifyApiConfig} from './models/configs';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    HttpClientModule,\n  ],\n  providers: [\n    ArtistService,\n    AlbumService,\n    BrowseService,\n    FollowService,\n    LibraryService,\n    PersonalizationService,\n    PlayerService,\n    PlaylistService,\n    SearchService,\n    TrackService,\n    UserService,\n    httpInterceptorProviders\n  ]\n})\nexport class NgxSpotifyApiModule {\n  static forRoot(config: SpotifyApiConfig): ModuleWithProviders {\n    config = {\n      api: {\n        ...new ApiConfig(),\n        ...config.api\n      },\n      authorization: {\n        ...new AuthorizationConfig(),\n        ...config.authorization\n      }\n    };\n    return {\n      ngModule: NgxSpotifyApiModule,\n      providers: [\n        { provide: AuthorizationConfig, useValue: config.authorization },\n        { provide: ApiConfig,           useValue: config.api },\n      ]\n    };\n  }\n}\n"]}