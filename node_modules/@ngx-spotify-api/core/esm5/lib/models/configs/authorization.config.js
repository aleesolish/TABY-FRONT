/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
var AuthorizationConfig = /** @class */ (function () {
    function AuthorizationConfig() {
        /**
         * \@description This used to prefix the access- and refreshToken inside the local storage.
         */
        this.storagePrefix = 'ngx-spotify-api-';
        /**
         * \@description This is an array of all scopes you need your application to access to. Default all scopes will be requested
         */
        this.scopes = [
            'user-top-read', 'user-read-recently-played',
            'user-read-email', 'user-read-birthdate', 'user-read-private',
            'playlist-read-collaborative', 'playlist-modify-public', 'playlist-read-private', 'playlist-modify-private',
            'user-library-modify', 'user-library-read',
            'user-follow-modify', 'user-follow-read',
            'streaming', 'app-remote-control',
            'user-read-playback-state', 'user-modify-playback-state', 'user-read-currently-playing'
        ];
    }
    return AuthorizationConfig;
}());
export { AuthorizationConfig };
if (false) {
    /**
     * \@description This will be used for signing your requests. An access token is required for all endpoints
     * @type {?}
     */
    AuthorizationConfig.prototype.accessToken;
    /**
     * \@description This used to prefix the access- and refreshToken inside the local storage.
     * @type {?}
     */
    AuthorizationConfig.prototype.storagePrefix;
    /**
     * \@description This is an array of all scopes you need your application to access to. Default all scopes will be requested
     * @type {?}
     */
    AuthorizationConfig.prototype.scopes;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXV0aG9yaXphdGlvbi5jb25maWcuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9Abmd4LXNwb3RpZnktYXBpL2NvcmUvIiwic291cmNlcyI6WyJsaWIvbW9kZWxzL2NvbmZpZ3MvYXV0aG9yaXphdGlvbi5jb25maWcudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUVBO0lBQUE7Ozs7UUFTRSxrQkFBYSxHQUFHLGtCQUFrQixDQUFDOzs7O1FBS25DLFdBQU0sR0FBYztZQUNsQixlQUFlLEVBQUUsMkJBQTJCO1lBQzVDLGlCQUFpQixFQUFFLHFCQUFxQixFQUFFLG1CQUFtQjtZQUM3RCw2QkFBNkIsRUFBRSx3QkFBd0IsRUFBRSx1QkFBdUIsRUFBRSx5QkFBeUI7WUFDM0cscUJBQXFCLEVBQUUsbUJBQW1CO1lBQzFDLG9CQUFvQixFQUFFLGtCQUFrQjtZQUN4QyxXQUFXLEVBQUUsb0JBQW9CO1lBQ2pDLDBCQUEwQixFQUFFLDRCQUE0QixFQUFFLDZCQUE2QjtTQUN4RixDQUFDO0lBQ0osQ0FBQztJQUFELDBCQUFDO0FBQUQsQ0FBQyxBQXZCRCxJQXVCQzs7Ozs7OztJQW5CQywwQ0FBc0M7Ozs7O0lBS3RDLDRDQUFtQzs7Ozs7SUFLbkMscUNBUUUiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge09ic2VydmFibGV9IGZyb20gJ3J4anMnO1xyXG5cclxuZXhwb3J0IGNsYXNzIEF1dGhvcml6YXRpb25Db25maWcge1xyXG4gIC8qKlxyXG4gICAqIEBkZXNjcmlwdGlvbiBUaGlzIHdpbGwgYmUgdXNlZCBmb3Igc2lnbmluZyB5b3VyIHJlcXVlc3RzLiBBbiBhY2Nlc3MgdG9rZW4gaXMgcmVxdWlyZWQgZm9yIGFsbCBlbmRwb2ludHNcclxuICAgKi9cclxuICBhY2Nlc3NUb2tlbjogKCkgPT4gT2JzZXJ2YWJsZTxzdHJpbmc+O1xyXG5cclxuICAvKipcclxuICAgKiBAZGVzY3JpcHRpb24gVGhpcyB1c2VkIHRvIHByZWZpeCB0aGUgYWNjZXNzLSBhbmQgcmVmcmVzaFRva2VuIGluc2lkZSB0aGUgbG9jYWwgc3RvcmFnZS5cclxuICAgKi9cclxuICBzdG9yYWdlUHJlZml4ID0gJ25neC1zcG90aWZ5LWFwaS0nO1xyXG5cclxuICAvKipcclxuICAgKiBAZGVzY3JpcHRpb24gVGhpcyBpcyBhbiBhcnJheSBvZiBhbGwgc2NvcGVzIHlvdSBuZWVkIHlvdXIgYXBwbGljYXRpb24gdG8gYWNjZXNzIHRvLiBEZWZhdWx0IGFsbCBzY29wZXMgd2lsbCBiZSByZXF1ZXN0ZWRcclxuICAgKi9cclxuICBzY29wZXM/OiBzdHJpbmdbXSA9IFtcclxuICAgICd1c2VyLXRvcC1yZWFkJywgJ3VzZXItcmVhZC1yZWNlbnRseS1wbGF5ZWQnLFxyXG4gICAgJ3VzZXItcmVhZC1lbWFpbCcsICd1c2VyLXJlYWQtYmlydGhkYXRlJywgJ3VzZXItcmVhZC1wcml2YXRlJyxcclxuICAgICdwbGF5bGlzdC1yZWFkLWNvbGxhYm9yYXRpdmUnLCAncGxheWxpc3QtbW9kaWZ5LXB1YmxpYycsICdwbGF5bGlzdC1yZWFkLXByaXZhdGUnLCAncGxheWxpc3QtbW9kaWZ5LXByaXZhdGUnLFxyXG4gICAgJ3VzZXItbGlicmFyeS1tb2RpZnknLCAndXNlci1saWJyYXJ5LXJlYWQnLFxyXG4gICAgJ3VzZXItZm9sbG93LW1vZGlmeScsICd1c2VyLWZvbGxvdy1yZWFkJyxcclxuICAgICdzdHJlYW1pbmcnLCAnYXBwLXJlbW90ZS1jb250cm9sJyxcclxuICAgICd1c2VyLXJlYWQtcGxheWJhY2stc3RhdGUnLCAndXNlci1tb2RpZnktcGxheWJhY2stc3RhdGUnLCAndXNlci1yZWFkLWN1cnJlbnRseS1wbGF5aW5nJ1xyXG4gIF07XHJcbn1cclxuIl19