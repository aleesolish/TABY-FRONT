/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { NgModule } from '@angular/core';
import { CommonModule } from '@angular/common';
import { HttpClientModule } from '@angular/common/http';
import { AlbumService, ArtistService, BrowseService, FollowService, LibraryService, PersonalizationService, PlayerService, PlaylistService, SearchService, TrackService, UserService } from './services';
import { httpInterceptorProviders } from './http-interceptors';
import { ApiConfig, AuthorizationConfig } from './models/configs';
var NgxSpotifyApiModule = /** @class */ (function () {
    function NgxSpotifyApiModule() {
    }
    /**
     * @param {?} config
     * @return {?}
     */
    NgxSpotifyApiModule.forRoot = /**
     * @param {?} config
     * @return {?}
     */
    function (config) {
        config = {
            api: tslib_1.__assign({}, new ApiConfig(), config.api),
            authorization: tslib_1.__assign({}, new AuthorizationConfig(), config.authorization)
        };
        return {
            ngModule: NgxSpotifyApiModule,
            providers: [
                { provide: AuthorizationConfig, useValue: config.authorization },
                { provide: ApiConfig, useValue: config.api },
            ]
        };
    };
    NgxSpotifyApiModule.decorators = [
        { type: NgModule, args: [{
                    imports: [
                        CommonModule,
                        HttpClientModule,
                    ],
                    providers: [
                        ArtistService,
                        AlbumService,
                        BrowseService,
                        FollowService,
                        LibraryService,
                        PersonalizationService,
                        PlayerService,
                        PlaylistService,
                        SearchService,
                        TrackService,
                        UserService,
                        httpInterceptorProviders
                    ]
                },] }
    ];
    return NgxSpotifyApiModule;
}());
export { NgxSpotifyApiModule };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmd4LXNwb3RpZnktYXBpLm1vZHVsZS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BuZ3gtc3BvdGlmeS1hcGkvY29yZS8iLCJzb3VyY2VzIjpbImxpYi9uZ3gtc3BvdGlmeS1hcGkubW9kdWxlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsT0FBTyxFQUFzQixRQUFRLEVBQUMsTUFBTSxlQUFlLENBQUM7QUFDNUQsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBQy9DLE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLHNCQUFzQixDQUFDO0FBQ3hELE9BQU8sRUFDTCxZQUFZLEVBQ1osYUFBYSxFQUNiLGFBQWEsRUFDYixhQUFhLEVBQ2IsY0FBYyxFQUNkLHNCQUFzQixFQUN0QixhQUFhLEVBQUUsZUFBZSxFQUFFLGFBQWEsRUFBRSxZQUFZLEVBQUUsV0FBVyxFQUN6RSxNQUFNLFlBQVksQ0FBQztBQUNwQixPQUFPLEVBQUMsd0JBQXdCLEVBQUMsTUFBTSxxQkFBcUIsQ0FBQztBQUM3RCxPQUFPLEVBQUMsU0FBUyxFQUFFLG1CQUFtQixFQUFtQixNQUFNLGtCQUFrQixDQUFDO0FBRWxGO0lBQUE7SUF3Q0EsQ0FBQzs7Ozs7SUFuQlEsMkJBQU87Ozs7SUFBZCxVQUFlLE1BQXdCO1FBQ3JDLE1BQU0sR0FBRztZQUNQLEdBQUcsdUJBQ0UsSUFBSSxTQUFTLEVBQUUsRUFDZixNQUFNLENBQUMsR0FBRyxDQUNkO1lBQ0QsYUFBYSx1QkFDUixJQUFJLG1CQUFtQixFQUFFLEVBQ3pCLE1BQU0sQ0FBQyxhQUFhLENBQ3hCO1NBQ0YsQ0FBQztRQUNGLE9BQU87WUFDTCxRQUFRLEVBQUUsbUJBQW1CO1lBQzdCLFNBQVMsRUFBRTtnQkFDVCxFQUFFLE9BQU8sRUFBRSxtQkFBbUIsRUFBRSxRQUFRLEVBQUUsTUFBTSxDQUFDLGFBQWEsRUFBRTtnQkFDaEUsRUFBRSxPQUFPLEVBQUUsU0FBUyxFQUFZLFFBQVEsRUFBRSxNQUFNLENBQUMsR0FBRyxFQUFFO2FBQ3ZEO1NBQ0YsQ0FBQztJQUNKLENBQUM7O2dCQXZDRixRQUFRLFNBQUM7b0JBQ1IsT0FBTyxFQUFFO3dCQUNQLFlBQVk7d0JBQ1osZ0JBQWdCO3FCQUNqQjtvQkFDRCxTQUFTLEVBQUU7d0JBQ1QsYUFBYTt3QkFDYixZQUFZO3dCQUNaLGFBQWE7d0JBQ2IsYUFBYTt3QkFDYixjQUFjO3dCQUNkLHNCQUFzQjt3QkFDdEIsYUFBYTt3QkFDYixlQUFlO3dCQUNmLGFBQWE7d0JBQ2IsWUFBWTt3QkFDWixXQUFXO3dCQUNYLHdCQUF3QjtxQkFDekI7aUJBQ0Y7O0lBcUJELDBCQUFDO0NBQUEsQUF4Q0QsSUF3Q0M7U0FwQlksbUJBQW1CIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtNb2R1bGVXaXRoUHJvdmlkZXJzLCBOZ01vZHVsZX0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBDb21tb25Nb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb21tb24nO1xuaW1wb3J0IHsgSHR0cENsaWVudE1vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvbW1vbi9odHRwJztcbmltcG9ydCB7XG4gIEFsYnVtU2VydmljZSxcbiAgQXJ0aXN0U2VydmljZSxcbiAgQnJvd3NlU2VydmljZSxcbiAgRm9sbG93U2VydmljZSxcbiAgTGlicmFyeVNlcnZpY2UsXG4gIFBlcnNvbmFsaXphdGlvblNlcnZpY2UsXG4gIFBsYXllclNlcnZpY2UsIFBsYXlsaXN0U2VydmljZSwgU2VhcmNoU2VydmljZSwgVHJhY2tTZXJ2aWNlLCBVc2VyU2VydmljZVxufSBmcm9tICcuL3NlcnZpY2VzJztcbmltcG9ydCB7aHR0cEludGVyY2VwdG9yUHJvdmlkZXJzfSBmcm9tICcuL2h0dHAtaW50ZXJjZXB0b3JzJztcbmltcG9ydCB7QXBpQ29uZmlnLCBBdXRob3JpemF0aW9uQ29uZmlnLCBTcG90aWZ5QXBpQ29uZmlnfSBmcm9tICcuL21vZGVscy9jb25maWdzJztcblxuQE5nTW9kdWxlKHtcbiAgaW1wb3J0czogW1xuICAgIENvbW1vbk1vZHVsZSxcbiAgICBIdHRwQ2xpZW50TW9kdWxlLFxuICBdLFxuICBwcm92aWRlcnM6IFtcbiAgICBBcnRpc3RTZXJ2aWNlLFxuICAgIEFsYnVtU2VydmljZSxcbiAgICBCcm93c2VTZXJ2aWNlLFxuICAgIEZvbGxvd1NlcnZpY2UsXG4gICAgTGlicmFyeVNlcnZpY2UsXG4gICAgUGVyc29uYWxpemF0aW9uU2VydmljZSxcbiAgICBQbGF5ZXJTZXJ2aWNlLFxuICAgIFBsYXlsaXN0U2VydmljZSxcbiAgICBTZWFyY2hTZXJ2aWNlLFxuICAgIFRyYWNrU2VydmljZSxcbiAgICBVc2VyU2VydmljZSxcbiAgICBodHRwSW50ZXJjZXB0b3JQcm92aWRlcnNcbiAgXVxufSlcbmV4cG9ydCBjbGFzcyBOZ3hTcG90aWZ5QXBpTW9kdWxlIHtcbiAgc3RhdGljIGZvclJvb3QoY29uZmlnOiBTcG90aWZ5QXBpQ29uZmlnKTogTW9kdWxlV2l0aFByb3ZpZGVycyB7XG4gICAgY29uZmlnID0ge1xuICAgICAgYXBpOiB7XG4gICAgICAgIC4uLm5ldyBBcGlDb25maWcoKSxcbiAgICAgICAgLi4uY29uZmlnLmFwaVxuICAgICAgfSxcbiAgICAgIGF1dGhvcml6YXRpb246IHtcbiAgICAgICAgLi4ubmV3IEF1dGhvcml6YXRpb25Db25maWcoKSxcbiAgICAgICAgLi4uY29uZmlnLmF1dGhvcml6YXRpb25cbiAgICAgIH1cbiAgICB9O1xuICAgIHJldHVybiB7XG4gICAgICBuZ01vZHVsZTogTmd4U3BvdGlmeUFwaU1vZHVsZSxcbiAgICAgIHByb3ZpZGVyczogW1xuICAgICAgICB7IHByb3ZpZGU6IEF1dGhvcml6YXRpb25Db25maWcsIHVzZVZhbHVlOiBjb25maWcuYXV0aG9yaXphdGlvbiB9LFxuICAgICAgICB7IHByb3ZpZGU6IEFwaUNvbmZpZywgICAgICAgICAgIHVzZVZhbHVlOiBjb25maWcuYXBpIH0sXG4gICAgICBdXG4gICAgfTtcbiAgfVxufVxuIl19