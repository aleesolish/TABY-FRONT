{"version":3,"file":"ngx-spotify-api-core.js","sources":["ng:/@ngx-spotify-api/core/lib/models/configs/api.config.ts","ng:/@ngx-spotify-api/core/lib/models/configs/authorization.config.ts","ng:/@ngx-spotify-api/core/lib/models/configs/spotify-api.config.ts","ng:/@ngx-spotify-api/core/lib/http-interceptors/Auth.interceptor.ts","ng:/@ngx-spotify-api/core/lib/http-interceptors/Cors.interceptor.ts","ng:/@ngx-spotify-api/core/lib/http-interceptors/RemoveNullParams.interceptor.ts","ng:/@ngx-spotify-api/core/lib/http-interceptors/UnderscoreToCamelcase.interceptor.ts","ng:/@ngx-spotify-api/core/lib/http-interceptors/index.ts","ng:/@ngx-spotify-api/core/lib/models/album.ts","ng:/@ngx-spotify-api/core/lib/models/album-simplified.ts","ng:/@ngx-spotify-api/core/lib/models/artist.ts","ng:/@ngx-spotify-api/core/lib/models/artist-simplified.ts","ng:/@ngx-spotify-api/core/lib/models/audio-analysis.ts","ng:/@ngx-spotify-api/core/lib/models/audio-features.ts","ng:/@ngx-spotify-api/core/lib/models/category.ts","ng:/@ngx-spotify-api/core/lib/models/context.ts","ng:/@ngx-spotify-api/core/lib/models/copyright.ts","ng:/@ngx-spotify-api/core/lib/models/cursor.ts","ng:/@ngx-spotify-api/core/lib/models/cursor-paging.ts","ng:/@ngx-spotify-api/core/lib/models/device.ts","ng:/@ngx-spotify-api/core/lib/models/error.ts","ng:/@ngx-spotify-api/core/lib/models/external-id.ts","ng:/@ngx-spotify-api/core/lib/models/external-url.ts","ng:/@ngx-spotify-api/core/lib/models/featured-playlists.ts","ng:/@ngx-spotify-api/core/lib/models/followers.ts","ng:/@ngx-spotify-api/core/lib/models/image.ts","ng:/@ngx-spotify-api/core/lib/models/paging.ts","ng:/@ngx-spotify-api/core/lib/models/play-history.ts","ng:/@ngx-spotify-api/core/lib/models/playback.ts","ng:/@ngx-spotify-api/core/lib/models/player-error.ts","ng:/@ngx-spotify-api/core/lib/models/playlist.ts","ng:/@ngx-spotify-api/core/lib/models/playlist-simplified.ts","ng:/@ngx-spotify-api/core/lib/models/playlist-track.ts","ng:/@ngx-spotify-api/core/lib/models/recommendations.ts","ng:/@ngx-spotify-api/core/lib/models/recommendations-seed.ts","ng:/@ngx-spotify-api/core/lib/models/restriction.ts","ng:/@ngx-spotify-api/core/lib/models/saved-album.ts","ng:/@ngx-spotify-api/core/lib/models/saved-track.ts","ng:/@ngx-spotify-api/core/lib/models/search-result.ts","ng:/@ngx-spotify-api/core/lib/models/track.ts","ng:/@ngx-spotify-api/core/lib/models/track-current.ts","ng:/@ngx-spotify-api/core/lib/models/track-link.ts","ng:/@ngx-spotify-api/core/lib/models/track-simplified.ts","ng:/@ngx-spotify-api/core/lib/models/user-private.ts","ng:/@ngx-spotify-api/core/lib/models/user-public.ts","ng:/@ngx-spotify-api/core/lib/services/album.service.ts","ng:/@ngx-spotify-api/core/lib/services/artist.service.ts","ng:/@ngx-spotify-api/core/lib/services/browse.service.ts","ng:/@ngx-spotify-api/core/lib/services/follow.service.ts","ng:/@ngx-spotify-api/core/lib/services/library.service.ts","ng:/@ngx-spotify-api/core/lib/services/personalization.service.ts","ng:/@ngx-spotify-api/core/lib/services/player.service.ts","ng:/@ngx-spotify-api/core/lib/services/playlist.service.ts","ng:/@ngx-spotify-api/core/lib/services/search.service.ts","ng:/@ngx-spotify-api/core/lib/services/track.service.ts","ng:/@ngx-spotify-api/core/lib/services/user.service.ts","ng:/@ngx-spotify-api/core/lib/ngx-spotify-api.module.ts"],"names":[],"mappings":"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AAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAEA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAEA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAEA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAEA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAEA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAnDA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AACA,AAJA,AAAA,AAOA,AAAA,AAbA,AAAA,ACDA,AAUA,AAAA,AAEA,AAAA,AAAA,AACA,AAAA,AADA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAEA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAEA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAdA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AACA,AAJA,AAAA,AAOA,AAAA,AAXA,AAAA,ACDA,AAmCA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AACA,AAAA,AACA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AACA,AACA,AAAA,AACA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AACA,AACA,AAAA,AACA,AAAA,AACA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AACA,AAAA,AACA,AAvCA,AAAA,AAAA,AACA,AAAA,AAAA,AACA,AAAA,AACA,AAAA,AACA,AACA,AAAA,AAAA,AACA,AAAA,AACA,AAAA,AACA,AAAA,AACA,AAAA,AACA,AAAA,AACA,AAAA,AACA,AAAA,AACA,AAAA,AACA,AAAA,AACA,AAAA,AACA,AAAA,AACA,AAAA,AACA,AACA","sourcesContent":["export class ApiConfig {\r\n  baseUrl = 'https://api.spotify.com';\r\n}\r\n","import {Observable} from 'rxjs';\r\n\r\nexport class AuthorizationConfig {\r\n  /**\r\n   * @description This will be used for signing your requests. An access token is required for all endpoints\r\n   */\r\n  accessToken: () => Observable<string>;\r\n\r\n  /**\r\n   * @description This used to prefix the access- and refreshToken inside the local storage.\r\n   */\r\n  storagePrefix = 'ngx-spotify-api-';\r\n\r\n  /**\r\n   * @description This is an array of all scopes you need your application to access to. Default all scopes will be requested\r\n   */\r\n  scopes?: string[] = [\r\n    'user-top-read', 'user-read-recently-played',\r\n    'user-read-email', 'user-read-birthdate', 'user-read-private',\r\n    'playlist-read-collaborative', 'playlist-modify-public', 'playlist-read-private', 'playlist-modify-private',\r\n    'user-library-modify', 'user-library-read',\r\n    'user-follow-modify', 'user-follow-read',\r\n    'streaming', 'app-remote-control',\r\n    'user-read-playback-state', 'user-modify-playback-state', 'user-read-currently-playing'\r\n  ];\r\n}\r\n","import {AuthorizationConfig} from './authorization.config';\r\nimport {ApiConfig} from './api.config';\r\n\r\nexport class SpotifyApiConfig {\r\n  authorization: AuthorizationConfig;\r\n  api?: ApiConfig;\r\n}\r\n","import {HttpEvent, HttpHandler, HttpInterceptor, HttpRequest} from '@angular/common/http';\r\nimport {Observable} from 'rxjs';\r\nimport {Injectable} from '@angular/core';\r\nimport {ApiConfig, AuthorizationConfig} from '../models/configs';\r\nimport {flatMap, map} from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class AuthInterceptor implements HttpInterceptor {\r\n\r\n    constructor(private apiConfig: ApiConfig,\r\n                private authConfig: AuthorizationConfig) {}\r\n\r\n    private attachAuthorizationHeader(req: HttpRequest<any>): Observable<HttpRequest<any>> {\r\n      return  this.authConfig.accessToken().pipe(map((token: string): HttpRequest<any> => {\r\n        return req.clone({\r\n          headers: req.headers.set('Authorization', 'Bearer ' + token)\r\n        });\r\n      }));\r\n    }\r\n\r\n    intercept(origReq: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        return this.attachAuthorizationHeader(origReq).pipe(flatMap((req: HttpRequest<any>): Observable<HttpEvent<any>> => {\r\n          return next.handle(req);\r\n        }));\r\n    }\r\n}\r\n","import {HttpEvent, HttpHandler, HttpInterceptor, HttpRequest} from '@angular/common/http';\r\nimport {Observable} from 'rxjs';\r\nimport {Injectable} from '@angular/core';\r\nimport {ApiConfig} from '../models/configs/api.config';\r\n\r\n@Injectable()\r\nexport class CorsInterceptor implements HttpInterceptor {\r\n    constructor(private apiConfig: ApiConfig) {}\r\n\r\n    intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        let headers = req.headers;\r\n\r\n        if (req.url.indexOf(this.apiConfig.baseUrl) > -1) {\r\n            headers = headers.set('Accept', 'application/json');\r\n            headers = headers.set('Content-Type', 'application/json');\r\n        } else if (req.url.indexOf('authorize')) {\r\n            // headers = req.headers.set('Access-Control-Allow-Origin', '*');\r\n        }\r\n\r\n        const newReq = req.clone({\r\n            headers: headers\r\n        });\r\n        return next.handle(newReq);\r\n    }\r\n}\r\n","import {HttpEvent, HttpHandler, HttpInterceptor, HttpParams, HttpRequest} from '@angular/common/http';\r\nimport {Observable} from 'rxjs';\r\nimport {Injectable} from '@angular/core';\r\nimport {ApiConfig} from '../models/configs';\r\n\r\n@Injectable()\r\nexport class RemoveNullParamsInterceptor implements HttpInterceptor {\r\n  constructor(private apiConfig: ApiConfig) {\r\n\r\n  }\r\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n    const params: HttpParams = new HttpParams();\r\n    if (req.url.indexOf(this.apiConfig.baseUrl) > -1) {\r\n      params.keys().forEach((key: string) => {\r\n        const param = params.get(key);\r\n        if (param != null && param !== 'null' && param !== 'undefined' && param !== '') {\r\n          params.set(key, param);\r\n        }\r\n      });\r\n    }\r\n    const newReq = req.clone({\r\n      'params': params\r\n    });\r\n    return next.handle(newReq);\r\n  }\r\n}\r\n","import {HttpEvent, HttpHandler, HttpInterceptor, HttpRequest, HttpResponse} from '@angular/common/http';\r\nimport {Observable} from 'rxjs';\r\nimport {map, take} from 'rxjs/operators';\r\nimport {Injectable} from '@angular/core';\r\nimport {ApiConfig} from '../models/configs/api.config';\r\nimport {AuthorizationConfig} from \"../models/configs\";\r\n\r\n@Injectable()\r\nexport class UnderscoreToCamelcaseInterceptor implements HttpInterceptor {\r\n\r\n    constructor(private apiConfig: ApiConfig, private authConfig: AuthorizationConfig) {}\r\n\r\n    private transformObjectKeysToCamelCase(object: any): any {\r\n        if (object == null || object === {}) {\r\n            return object;\r\n        }\r\n        const ret = {};\r\n        Object.keys(object).forEach((key: string) => {\r\n            const newKey = key.replace(/[_]([^_])?/g, (v) => {\r\n                return v.replace('_', '').toUpperCase();\r\n            });\r\n            if (object[key] instanceof Array) {\r\n                ret[newKey] = object[key].map((value: any) => {\r\n                    return this.transformObjectKeysToCamelCase(value);\r\n                });\r\n            } else if (object[key] instanceof Object) {\r\n                ret[newKey] = this.transformObjectKeysToCamelCase(object[key]);\r\n            } else {\r\n                ret[newKey] = object[key];\r\n            }\r\n        });\r\n        return ret;\r\n    }\r\n    intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        return next.handle(req).pipe(map((res: HttpResponse<any>): HttpResponse<any> => {\r\n            if (req && req.url && req.url.includes(this.apiConfig.baseUrl) && res.body) {\r\n                return res.clone({\r\n                    body: this.transformObjectKeysToCamelCase(res.body)\r\n                });\r\n            }\r\n            return res;\r\n        }));\r\n    }\r\n}\r\n","/* \"Barrel\" of Http Interceptors */\r\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport {AuthInterceptor} from './Auth.interceptor';\r\nimport {CorsInterceptor} from './Cors.interceptor';\r\nimport {RemoveNullParamsInterceptor} from './RemoveNullParams.interceptor';\r\nimport {UnderscoreToCamelcaseInterceptor} from './UnderscoreToCamelcase.interceptor';\r\n\r\nexport * from './Auth.interceptor';\r\nexport * from './Cors.interceptor';\r\nexport * from './RemoveNullParams.interceptor';\r\nexport * from './UnderscoreToCamelcase.interceptor';\r\n\r\n/** Http interceptor providers in outside-in order */\r\nexport const httpInterceptorProviders = [\r\n  { provide: HTTP_INTERCEPTORS, useClass: AuthInterceptor, multi: true },\r\n  { provide: HTTP_INTERCEPTORS, useClass: CorsInterceptor, multi: true },\r\n  { provide: HTTP_INTERCEPTORS, useClass: RemoveNullParamsInterceptor, multi: true },\r\n  { provide: HTTP_INTERCEPTORS, useClass: UnderscoreToCamelcaseInterceptor, multi: true }\r\n];\r\n","import {Artist} from './artist';\r\nimport {Copyright} from './copyright';\r\nimport {ExternalId} from './external-id';\r\nimport {ExternalUrl} from './external-url';\r\nimport {Image} from './image';\r\nimport {Restriction} from './restriction';\r\nimport {Track} from './track';\r\nimport {Paging} from './paging';\r\nimport {AlbumType} from './album-type';\r\n\r\nexport class Album {\r\n    albumType: AlbumType;\r\n    artists: Artist[];\r\n    availableMarkets: string[];\r\n    copyrights: Copyright[];\r\n    externalIds: ExternalId;\r\n    externalUrls: ExternalUrl;\r\n    genres: string[];\r\n    href: string;\r\n    id: string;\r\n    images: Image[];\r\n    label: string;\r\n    name: string;\r\n    popularity: number;\r\n    releaseDate: string;\r\n    releaseDatePrecision: 'year' | 'month' | 'day';\r\n    restrictions: Restriction;\r\n    tracks: Paging<Track>;\r\n    type: 'album';\r\n    uri: string;\r\n}\r\n","import {ExternalUrl} from './external-url';\r\nimport {Image} from './image';\r\nimport {Restriction} from './restriction';\r\nimport {ArtistSimplified} from './artist-simplified';\r\nimport {AlbumType} from './album-type';\r\nimport {AlbumGroup} from './album-group';\r\n\r\nexport class AlbumSimplified {\r\n    albumGroup: AlbumGroup;\r\n    albumType: AlbumType;\r\n    artists: ArtistSimplified[];\r\n    availableMarkets: string[];\r\n    externalUrls: ExternalUrl;\r\n    href: string;\r\n    id: string;\r\n    images: Image[];\r\n    name: string;\r\n    releaseDate: string;\r\n    releaseDatePrecision: 'year' | 'month' | 'day';\r\n    restrictions: Restriction;\r\n    type: 'album';\r\n    uri: string;\r\n}\r\n","import {ExternalUrl} from './external-url';\nimport {Followers} from './followers';\nimport {Image} from './image';\n\nexport class Artist {\n    externalUrls: ExternalUrl;\n    followers: Followers;\n    genres: string[];\n    href: string;\n    id: string;\n    images: Image[];\n    name: string;\n    populariy: number;\n    type: 'artist';\n    uri: string;\n}\n","import {ExternalUrl} from './external-url';\nimport {Followers} from './followers';\n\nexport class ArtistSimplified {\n    externalUrls: ExternalUrl;\n    href: string;\n    id: string;\n    name: string;\n    type: 'artist';\n    uri: string;\n}\n","export class AudioAnalysis {\r\n  [key: string]: any;\r\n}\r\n","export class AudioFeatures {\r\n    acousticness: number;\r\n    analysisUrl: string;\r\n    danceability: number;\r\n    durationMs: number;\r\n    energy: number;\r\n    id: string;\r\n    instrumentalness: number;\r\n    key: number;\r\n    liveness: number;\r\n    loudness: number;\r\n    mode: 0 | 1; // Major = 1, minor = 0\r\n    speechiness: number;\r\n    tempo: number;\r\n    timeSignature: number;\r\n    trackHref: string;\r\n    type: 'audio_features';\r\n    uri: string;\r\n    valence: number;\r\n}\r\n","import {Image} from './image';\n\nexport class Category {\n    href: string;\n    icons: Image[];\n    id: string;\n    name: string;\n}\n","import {ExternalUrl} from './external-url';\n\nexport class Context {\n    type: 'artist' | 'playlist' | 'album';\n    href: string;\n    externalUrls: ExternalUrl;\n    uri: string;\n}\n","export class Copyright {\n    text: string;\n    type: 'C' | 'P';\n}\n","export class Cursor {\n    after: string;\n}\n","import {Cursor} from './cursor';\n\nexport class CursorPaging<C> {\n    href: string;\n    items: C[];\n    limit: number;\n    next: string;\n    cursors: Cursor;\n    total: number;\n}\n","export class Device {\r\n  id: string;\r\n  name: string;\r\n  type: string;\r\n  volumePercent: number;\r\n  isActive: boolean;\r\n  isPrivateSession: boolean;\r\n  isRestricted: boolean;\r\n}","export class Error {\n    /* HTTP status-code */\n    status: number;\n    message: string;\n}\n","export class ExternalId {\r\n  isrc?: string;\r\n  ean?: string;\r\n  upc?: string;\r\n}\r\n","export class ExternalUrl {\r\n    [target: string]: string\r\n}\r\n","import {Paging} from './paging';\nimport {Playlist} from './playlist';\nimport {PlaylistSimplified} from './playlist-simplified';\n\nexport class FeaturedPlaylists {\n  message: string;\n  playlists: Paging<PlaylistSimplified>;\n}\n","export class Followers {\n    href: string;\n    total: number;\n\n}\n","export class Image {\n    height: number;\n    url: string;\n    width: number;\n}\n","export class Paging<C> {\n    href: string;\n    items: C[];\n    limit: number;\n    next: string;\n    offset: number;\n    previous: string;\n    total: number;\n}\n","import {TrackSimplified} from './track-simplified';\nimport {Timestamp} from 'rxjs';\nimport {Context} from './context';\n\nexport class PlayHistory {\n    track: TrackSimplified;\n    playedAt: number; // timestamp\n    context: Context;\n}\n","import {Device} from './device';\r\nimport {Track} from './track';\r\nimport {Context} from './context';\r\n\r\nexport class Playback {\r\n  timestamp: number;\r\n  device: Device;\r\n  progressMs: number;\r\n  isPlaying: boolean;\r\n  currentlyPlayingType: 'track';\r\n  item: Track;\r\n  shuffleState: boolean;\r\n  repeatState: 'track' | 'context' | 'off';\r\n  context: Context;\r\n}\r\n","import { Error } from './error';\n\nexport class PlayerError extends Error {\n    status: 404 | 403;\n    message: string;\n    reason: string;\n}\n","import {ExternalUrl} from './external-url';\nimport {Followers} from './followers';\nimport {Image} from './image';\nimport {UserPublic} from './user-public';\nimport {Paging} from './paging';\nimport {PlaylistTrack} from './playlist-track';\n\nexport class Playlist {\n    collaborative: boolean;\n    description: string;\n    externalUrls: ExternalUrl;\n    followers: Followers;\n    href: string;\n    id: string;\n    images: Image[];\n    name: string;\n    owner: UserPublic;\n    public: boolean | null;\n    snapshotId: string;\n    tracks: Paging<PlaylistTrack>;\n    type: 'playlist';\n    uri: string;\n}\n","import {ExternalUrl} from './external-url';\nimport {Followers} from './followers';\nimport {Image} from './image';\nimport {UserPublic} from './user-public';\nimport {Paging} from './paging';\nimport {PlaylistTrack} from './playlist-track';\n\nexport class PlaylistSimplified {\n    collaborative: boolean;\n    externalUrls: ExternalUrl;\n    href: string;\n    id: string;\n    images: Image[];\n    name: string;\n    owner: UserPublic;\n    public: boolean | null;\n    snapshotId: string;\n    tracks: {\n        href: string;\n        total: number;\n    };\n    type: 'playlist';\n    uri: string;\n}\n","import {UserPublic} from './user-public';\nimport {Track} from './track';\n\nexport class PlaylistTrack {\n    addedAt: number | null; // timestamp\n    addedBy: UserPublic | null;\n    isLocal: boolean;\n    track: Track;\n}\n","import {RecommendationsSeed} from './recommendations-seed';\nimport {TrackSimplified} from './track-simplified';\n\nexport class Recommendations {\n    seeds: RecommendationsSeed[];\n    tracks: TrackSimplified[];\n}\n","export class RecommendationsSeed {\n    afterFilteringSize: number;\n    afterRelinkingSize: number;\n    href: string;\n    id: number;\n    initialPoolSize: number;\n    type: 'artist' | 'track' | 'genre';\n}\n","export class Restriction {\n    reason: string;\n}\n","import {Album} from './album';\n\nexport class SavedAlbum {\n    addedAt: number; // timestamp\n    album: Album;\n}\n","import {Track} from './track';\n\nexport class SavedTrack {\n    addedAt: number; // timestamp\n    track: Track;\n}\n","import {Paging} from './paging';\r\nimport {Artist} from './artist';\r\nimport {AlbumSimplified} from './album-simplified';\r\nimport {Track} from './track';\r\nimport {PlaylistSimplified} from './playlist-simplified';\r\n\r\nexport class SearchResult {\r\n  artists?: Paging<Artist>;\r\n  albums?: Paging<AlbumSimplified>;\r\n  tracks?: Paging<Track>;\r\n  playlists?: Paging<PlaylistSimplified>;\r\n}\r\n","import {Album} from './album';\nimport {ArtistSimplified} from './artist-simplified';\nimport {ExternalId} from './external-id';\nimport {ExternalUrl} from './external-url';\nimport {TrackLink} from './track-link';\nimport {Restriction} from './restriction';\n\nexport class Track {\n    album: Album;\n    artists: ArtistSimplified[];\n    availableMarkets: string[];\n    discNumber: number;\n    durationMs: number;\n    explicit: boolean;\n    externalIds: ExternalId;\n    externalUrls: ExternalUrl;\n    href: string;\n    id: string;\n    isPlayable: boolean;\n    linkedFrom: TrackLink;\n    restrictions: Restriction;\n    name: string;\n    popularity: number;\n    previewUrl: string;\n    trackNumber: number;\n    type: 'track';\n    uri: string;\n    isLocal: boolean;\n}\n","import {Context} from './context';\r\nimport {Track} from './track';\r\n\r\nexport class TrackCurrent {\r\n  context: Context;\r\n  timestamp: number;\r\n  progressMs: number;\r\n  isPlaying: boolean;\r\n  currentlyPlayingType: 'track';\r\n  item: Track;\r\n}","import {ExternalUrl} from './external-url';\n\nexport class TrackLink {\n    externalUrls: ExternalUrl;\n    href: string;\n    id: string;\n    type: 'track';\n    uri: string;\n}\n","import {ArtistSimplified} from './artist-simplified';\nimport {ExternalUrl} from './external-url';\nimport {TrackLink} from './track-link';\nimport {Restriction} from './restriction';\n\nexport class TrackSimplified {\n    artists: ArtistSimplified[];\n    availableMarkets: string[];\n    discNumber: number;\n    durationMs: number;\n    explicit: boolean;\n    externalUrls: ExternalUrl;\n    href: string;\n    id: string;\n    isPlayable: boolean;\n    linkedFrom: TrackLink;\n    restrictions: Restriction;\n    name: string;\n    previewUrl: string;\n    trackNumber: number;\n    type: 'track';\n    uri: string;\n    isLocal: boolean;\n}\n","import {ExternalUrl} from './external-url';\nimport {Followers} from './followers';\nimport {Image} from './image';\n\nexport class UserPrivate {\n    birthdate: string;\n    country: string;\n    displayName: string;\n    email?: string;\n    externalUrls: ExternalUrl;\n    followers: Followers;\n    href: string;\n    id: string;\n    images: Image[];\n    product: 'premium' | 'free' | 'open';\n    type: 'user';\n    uri: string;\n}\n","import {ExternalUrl} from './external-url';\nimport {Followers} from './followers';\nimport {Image} from './image';\n\nexport class UserPublic {\n    displayName: string;\n    externalUrls: ExternalUrl;\n    followers: Followers;\n    href: string;\n    id: string;\n    images: Image[];\n    type: 'user';\n    uri: string;\n}\n","import {Injectable, Optional} from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {Observable, of} from 'rxjs';\r\nimport {Album} from '../models';\r\nimport {map, tap} from 'rxjs/operators';\r\nimport {Paging} from '../models';\r\nimport {Track} from '../models';\r\nimport {ApiConfig} from '../models';\r\n\r\nclass AlbumsResponse {\r\n  albums: Album[];\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AlbumService {\r\n\r\n  constructor(@Optional() private config: ApiConfig,\r\n              private http: HttpClient) {\r\n  }\r\n\r\n  getAlbum(id: string, market?: string): Observable<Album> {\r\n    return this.http.get<Album>(this.config.baseUrl + '/v1/albums/' + id, {\r\n      params: {\r\n        market: market\r\n      }\r\n    });\r\n  }\r\n\r\n  getAlbumTracks(id: string, limit: number = 20, offset: number = 0, market?: string): Observable<Paging<Track>> {\r\n    return this.http.get<Paging<Track>>(this.config.baseUrl + '/v1/albums/' + id + '/tracks', {\r\n      params: {\r\n        limit: limit.toString(),\r\n        offset: offset.toString(),\r\n        market: market\r\n      }\r\n    });\r\n  }\r\n\r\n  getAlbums(ids: string[], market?: string): Observable<Album[]> {\r\n    if (ids == null || ids.length < 1) {\r\n      return of([]);\r\n    } else if (ids.length > 20) {\r\n      return of(null);\r\n    }\r\n\r\n    return this.http.get<AlbumsResponse>(this.config.baseUrl + '/v1/albums', {\r\n      params: {\r\n        ids: ids.join(','),\r\n        market: market\r\n      }\r\n    }).pipe(map((res: AlbumsResponse): Album[] => {\r\n      return res.albums;\r\n    }));\r\n  }\r\n}\r\n","import {Injectable, Optional} from '@angular/core';\r\nimport {Observable, of} from 'rxjs';\r\nimport {Artist} from '../models';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {Paging} from '../models';\r\nimport {Track} from '../models';\r\nimport {Album} from '../models';\r\nimport {map} from 'rxjs/operators';\r\nimport {ApiConfig} from '../models';\r\nimport {AlbumGroup} from '../models';\r\nimport {AlbumSimplified} from '../models';\r\n\r\nclass ArtistListResponse {\r\n  artists: Artist[];\r\n}\r\n\r\nclass TrackListResponse {\r\n  tracks: Track[];\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ArtistService {\r\n\r\n  constructor(@Optional() private config: ApiConfig,\r\n              private http: HttpClient) { }\r\n\r\n  getArtist(id: string): Observable<Artist> {\r\n    return this.http.get<Artist>(this.config.baseUrl + '/v1/artists/' + id, {\r\n      params: {}\r\n    });\r\n  }\r\n\r\n  getArtistsAlbums(id: string, includeGroups?: AlbumGroup[], market?: string, limit: number = 20, offset: number = 0): Observable<Paging<AlbumSimplified>> {\r\n    return this.http.get<Paging<AlbumSimplified>>(this.config.baseUrl + '/v1/artists/' + id + '/albums', {\r\n      params: {\r\n        include_groups: includeGroups ? includeGroups.join(',') : null,\r\n        market,\r\n        limit: limit.toString(),\r\n        offset: offset.toString()\r\n      }\r\n    });\r\n  }\r\n\r\n  getArtistsTopTracks(id: string, market: string): Observable<Track[]> {\r\n    return this.http.get<TrackListResponse>(this.config.baseUrl + '/v1/artists/' + id + '/top-tracks', {\r\n      params: {\r\n        market: market\r\n      }\r\n    }).pipe(map((res: TrackListResponse): Track[] => {\r\n      return res.tracks;\r\n    }));\r\n  }\r\n\r\n  getArtistsRelatedArtists(id: string): Observable<Artist[]> {\r\n    return this.http.get<ArtistListResponse>(this.config.baseUrl + '/v1/artists/' + id + '/related-artists', {\r\n      params: {}\r\n    }).pipe(map((res: ArtistListResponse): Artist[] => {\r\n      return res.artists;\r\n    }));\r\n  }\r\n\r\n  getArtists(ids: string[]): Observable<Artist[]> {\r\n    if (ids == null || ids.length < 1) {\r\n      return of([]);\r\n    } else if (ids.length > 50) {\r\n      return of(null);\r\n    }\r\n\r\n    return this.http.get<ArtistListResponse>(this.config.baseUrl + '/v1/artists/', {\r\n      params: {\r\n        ids: ids.join(',')\r\n      }\r\n    }).pipe(map((res: ArtistListResponse): Artist[] => {\r\n      return res.artists;\r\n    }));\r\n  }\r\n}\r\n","import {Injectable, Optional} from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {Observable} from 'rxjs';\r\nimport {Category} from '../models';\r\nimport {Playlist} from '../models';\r\nimport {map} from 'rxjs/operators';\r\nimport {Paging} from '../models';\r\nimport {FeaturedPlaylists} from '../models';\r\nimport {Album} from '../models';\r\nimport {AlbumSimplified} from '../models';\r\nimport {ApiConfig} from '../models';\r\nimport {PlaylistSimplified} from '../models';\r\n\r\nclass PlaylistList {\r\n  playlists: Paging<PlaylistSimplified>;\r\n}\r\n\r\nclass CategoryList {\r\n  categories: Paging<Category>;\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class BrowseService {\r\n\r\n  constructor(@Optional() private config: ApiConfig,\r\n              private http: HttpClient) { }\r\n\r\n  public getCategory(id: string, country?: string, locale?: string): Observable<Category> {\r\n    return this.http.get<Category>(this.config.baseUrl + '/v1/browse/categories/' + id, {\r\n      params: {\r\n        country: country,\r\n        locale: locale\r\n      }\r\n    });\r\n  }\r\n\r\n  public getCategoryPlaylists(id: string, country?: string, limit: number = 20, offset: number = 0): Observable<Paging<PlaylistSimplified>> {\r\n    return this.http.get<PlaylistList>(this.config.baseUrl + '/v1/browse/categories/' + id + '/playlists', {\r\n      params: {\r\n        country: country,\r\n        limit: limit.toString(),\r\n        offset: offset.toString()\r\n      }\r\n    }).pipe(map((res: PlaylistList) => {\r\n        return res.playlists;\r\n      }));\r\n  }\r\n\r\n  public getCategories(country?: string, locale?: string, limit: number = 20, offset: number = 0): Observable<Paging<Category>> {\r\n    return this.http.get<CategoryList>(this.config.baseUrl + '/v1/browse/categories', {\r\n      params: {\r\n        country: country,\r\n        locale: locale,\r\n        limit: limit.toString(),\r\n        offset: offset.toString()\r\n      }\r\n    }).pipe(map((list: CategoryList) => {\r\n      return list.categories;\r\n    }));\r\n  }\r\n\r\n  public getFeaturedPlaylists(\r\n    country?: string,\r\n    locale?: string,\r\n    timestamp: Date = new Date(),\r\n    limit: number = 20, offset: number = 0)\r\n    : Observable<FeaturedPlaylists> {\r\n      return this.http.get<FeaturedPlaylists>(this.config.baseUrl + '/v1/browse/featured-playlists', {\r\n        params: {\r\n          country,\r\n          locale,\r\n          timestamp: timestamp.toISOString(),\r\n          limit: limit.toString(),\r\n          offset: offset.toString()\r\n        }\r\n      });\r\n  }\r\n\r\n  public getNewReleases(country?: string, limit: number = 20, offset: number = 0): Observable<Paging<AlbumSimplified>> {\r\n    return this.http.get<{ albums: Paging<AlbumSimplified> }>(this.config.baseUrl + '/v1/browse/new-releases', {\r\n      params: {\r\n        country,\r\n        limit: limit.toString(),\r\n        offset: offset.toString()\r\n      }\r\n    }).pipe(map(({albums}) => {\r\n      return albums;\r\n    }));\r\n  }\r\n\r\n  // Recommendations will follow in a future release\r\n}\r\n","import {Injectable, Optional} from '@angular/core';\r\nimport {HttpClient, HttpErrorResponse} from '@angular/common/http';\r\nimport {Observable, of} from 'rxjs';\r\nimport {CursorPaging} from '../models';\r\nimport {Artist} from '../models';\r\nimport {ApiConfig} from '../models';\r\nimport {catchError, map} from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class FollowService {\r\n\r\n  constructor(@Optional() private config: ApiConfig,\r\n              private http: HttpClient) { }\r\n\r\n  public isFollowingArtists(ids: string[]): Observable<boolean[]> {\r\n    if (ids === null || ids.length === 0) {\r\n      return of([]);\r\n    } else if (ids.length > 50) {\r\n      return of(null);\r\n    }\r\n    return this.http.get<boolean[]>(this.config.baseUrl + '/v1/me/following/contains', {\r\n      params: {\r\n        type: 'artist',\r\n        ids: ids.join(',')\r\n      }\r\n    });\r\n  }\r\n\r\n  public isFollowingUsers(ids: string[]): Observable<boolean[]> {\r\n    if (ids === null || ids.length === 0) {\r\n      return of([]);\r\n    } else if (ids.length > 50) {\r\n      return of(null);\r\n    }\r\n    return this.http.get<boolean[]>(this.config.baseUrl + '/v1/me/following/contains', {\r\n      params: {\r\n        type: 'user',\r\n        ids: ids.join(',')\r\n      }\r\n    });\r\n  }\r\n\r\n  public areFollowingPlaylist(playlistId: string, usersToCheck: string[]): Observable<boolean[]> {\r\n    if (usersToCheck === null || usersToCheck.length === 0) {\r\n      return of([]);\r\n    } else if (usersToCheck.length > 5) {\r\n      return of(null);\r\n    }\r\n    return this.http.get<boolean[]>(this.config.baseUrl + `/v1/playlists/${playlistId}/followers/contains`, {\r\n      params: {\r\n        ids: usersToCheck.join(',')\r\n      }\r\n    });\r\n  }\r\n\r\n  public followArtists(ids: string[]): Observable<boolean> {\r\n    if (ids === null || ids.length === 0) {\r\n      return of(false);\r\n    } else if (ids.length > 50) {\r\n      return of(false);\r\n    }\r\n    return this.http.put<void>(this.config.baseUrl + '/v1/me/following', {}, {\r\n      params: {\r\n        type: 'artist',\r\n        ids: ids.join(',')\r\n      }\r\n    }).pipe(map((): boolean => {\r\n      return true;\r\n    }));\r\n  }\r\n\r\n  public followUsers(ids: string[]): Observable<boolean> {\r\n    if (ids === null || ids.length === 0) {\r\n      return of(false);\r\n    } else if (ids.length > 50) {\r\n      return of(false);\r\n    }\r\n    return this.http.put(this.config.baseUrl + '/v1/me/following', {}, {\r\n      params: {\r\n        type: 'user',\r\n        ids: ids.join(',')\r\n      }\r\n    }).pipe(map(() => {\r\n      return true;\r\n    }));\r\n  }\r\n\r\n  public followPlaylist(id: string, isPublic: boolean = false): Observable<boolean> {\r\n    return this.http.put(this.config.baseUrl + `/v1/playlists/${id}/followers`, {\r\n      public: isPublic\r\n    }).pipe(map(() => {\r\n      return true;\r\n    }));\r\n  }\r\n\r\n  public getFollowedArtists(limit: number = 20, after?: string): Observable<CursorPaging<Artist>> {\r\n    return this.http.get<CursorPaging<Artist>>(this.config.baseUrl + `/v1/me/following`, {\r\n      params: {\r\n        type: 'artist',\r\n        limit: limit.toString(),\r\n        after: after\r\n      }\r\n    });\r\n  }\r\n\r\n  public unfollowArtists(ids: string[]): Observable<boolean> {\r\n    if (ids === null || ids.length === 0) {\r\n      return of(false);\r\n    } else if (ids.length > 50) {\r\n      return of(false);\r\n    }\r\n    return this.http.delete(this.config.baseUrl + '/v1/me/following', {\r\n      params: {\r\n        type: 'artist',\r\n        ids: ids.join(',')\r\n      }\r\n    }).pipe(map(() => true));\r\n  }\r\n\r\n  public unfollowUsers(ids: string[]): Observable<boolean> {\r\n    if (ids === null || ids.length === 0) {\r\n      return of(false);\r\n    } else if (ids.length > 50) {\r\n      return of(false);\r\n    }\r\n    return this.http.delete(this.config.baseUrl + '/v1/me/following', {\r\n      params: {\r\n        type: 'user',\r\n        ids: ids.join(',')\r\n      }\r\n    }).pipe(map(() => true));\r\n  }\r\n\r\n  public unfollowPlaylist(id: string): Observable<boolean> {\r\n    return this.http.delete(this.config.baseUrl + `/v1/playlists/${id}/followers`).pipe(map(() => true));\r\n  }\r\n}\r\n","import {Injectable, Optional} from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {Observable, of} from 'rxjs';\r\nimport {Paging} from '../models';\r\nimport {Album} from '../models';\r\nimport {Track} from '../models';\r\nimport {ApiConfig} from '../models';\r\nimport {map} from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LibraryService {\r\n\r\n  constructor(@Optional() private config: ApiConfig,\r\n              private http: HttpClient) { }\r\n\r\n  public areSavedAlbums(ids: string[]): Observable<boolean[]> {\r\n    if (ids === null || ids === undefined || ids.length === 0) {\r\n      return of([]);\r\n    } else if (ids.length > 50) {\r\n      return of(null);\r\n    }\r\n\r\n    return this.http.get<boolean[]>(this.config.baseUrl + `/v1/me/albums/contains`, {\r\n      params: {\r\n        ids: ids.join(',')\r\n      }\r\n    });\r\n  }\r\n\r\n  public areSavedTracks(ids: string[]): Observable<boolean[]> {\r\n    if (ids === null || ids === undefined || ids.length === 0) {\r\n      return of([]);\r\n    } else if (ids.length > 50) {\r\n      return of(null);\r\n    }\r\n\r\n    return this.http.get<boolean[]>(this.config.baseUrl + `/v1/me/tracks/contains`, {\r\n      params: {\r\n        ids: ids.join(',')\r\n      }\r\n    });\r\n  }\r\n\r\n  public getSavedAlbums(limit: number = 20, offset: number = 0, market?: string): Observable<Paging<Album>> {\r\n    return this.http.get<Paging<Album>>(this.config.baseUrl + `/v1/me/albums`, {\r\n      params: {\r\n        limit: limit.toString(),\r\n        offset: offset.toString(),\r\n        market\r\n      }\r\n    });\r\n  }\r\n\r\n  public getSavedTracks(limit: number = 20, offset: number = 0, market?: string): Observable<Paging<Track>> {\r\n    return this.http.get<Paging<Track>>(this.config.baseUrl + `/v1/me/tracks`, {\r\n      params: {\r\n        limit: limit.toString(),\r\n        offset: offset.toString(),\r\n        market\r\n      }\r\n    });\r\n  }\r\n\r\n  public saveAlbums(ids: string[]): Observable<boolean> {\r\n    if (ids === null || ids === undefined || ids.length === 0) {\r\n      return of(false);\r\n    } else if (ids.length > 50) {\r\n      return of(false);\r\n    }\r\n    return this.http.put(this.config.baseUrl + `/v1/me/albums`, {}, {\r\n      params: {\r\n        ids: ids.join(',')\r\n      }\r\n    }).pipe(map(() => true));\r\n  }\r\n\r\n  public removeAlbums(ids: string[]): Observable<boolean> {\r\n    if (ids === null || ids === undefined || ids.length === 0) {\r\n      return of(false);\r\n    } else if (ids.length > 50) {\r\n      return of(false);\r\n    }\r\n    return this.http.delete(this.config.baseUrl + `/v1/me/albums`, {\r\n      params: {\r\n        ids: ids.join(',')\r\n      }\r\n    }).pipe(map(() => true));\r\n  }\r\n\r\n  public saveTracks(ids: string[]): Observable<boolean> {\r\n    if (ids === null || ids === undefined || ids.length === 0) {\r\n      return of(false);\r\n    } else if (ids.length > 50) {\r\n      return of(false);\r\n    }\r\n    return this.http.put(this.config.baseUrl + `/v1/me/tracks`, {}, {\r\n      params: {\r\n        ids: ids.join(',')\r\n      }\r\n    }).pipe(map(() => true));\r\n  }\r\n\r\n  public removeTracks(ids: string[]): Observable<boolean> {\r\n    if (ids === null || ids === undefined || ids.length === 0) {\r\n      return of(false);\r\n    } else if (ids.length > 50) {\r\n      return of(false);\r\n    }\r\n    return this.http.delete(this.config.baseUrl + `/v1/me/tracks`, {\r\n      params: {\r\n        ids: ids.join(',')\r\n      }\r\n    }).pipe(map(() => true));\r\n  }\r\n}\r\n","import {Injectable, Optional} from '@angular/core';\r\nimport {Observable} from 'rxjs';\r\nimport {Paging} from '../models';\r\nimport {Artist} from '../models';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {Track} from '../models';\r\nimport {ApiConfig} from '../models';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PersonalizationService {\r\n\r\n  constructor(@Optional() private config: ApiConfig,\r\n              private http: HttpClient) { }\r\n\r\n  public getTopArtists(limit: number = 20, offset: number = 0, timeRange?: 'long_term' | 'medium_term' | 'short_term'): Observable<Paging<Artist>> {\r\n    return this.http.get<Paging<Artist>>(this.config.baseUrl + `/v1/me/top/artists`, {\r\n      params: {\r\n        limit: limit.toString(),\r\n        offset: offset.toString(),\r\n        time_range: timeRange\r\n      }\r\n    });\r\n  }\r\n  public getTopTracks(limit: number = 20, offset: number = 0, timeRange?: 'long_term' | 'medium_term' | 'short_term'): Observable<Paging<Track>> {\r\n    return this.http.get<Paging<Track>>(this.config.baseUrl + `/v1/me/top/tracks`, {\r\n      params: {\r\n        limit: limit.toString(),\r\n        offset: offset.toString(),\r\n        time_range: timeRange\r\n      }\r\n    });\r\n  }\r\n}\r\n","import {Injectable, Optional} from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {Observable} from 'rxjs';\r\nimport {Device} from '../models';\r\nimport {map, take} from 'rxjs/operators';\r\nimport {CursorPaging} from '../models';\r\nimport {PlayHistory} from '../models';\r\nimport {Playback} from '../models';\r\nimport {TrackCurrent} from '../models';\r\nimport {ApiConfig} from '../models';\r\n\r\nclass DeviceList {\r\n  devices: Device[];\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PlayerService {\r\n\r\n  constructor(@Optional() private config: ApiConfig,\r\n              private http: HttpClient) { }\r\n\r\n  public nextTrack(deviceId?: string): Observable<boolean> {\r\n    return this.http.post(this.config.baseUrl + `/v1/me/player/next`, {}, {\r\n      params: {\r\n        device_id: deviceId\r\n      }\r\n    }).pipe(\r\n      take(1),\r\n      map(() => {\r\n        return true;\r\n      })\r\n    );\r\n  }\r\n\r\n  public previousTrack(deviceId?: string): Observable<boolean> {\r\n    return this.http.post(this.config.baseUrl + `/v1/me/player/previous`, {}, {\r\n      params: {\r\n        device_id: deviceId\r\n      }\r\n    }).pipe(\r\n      take(1),\r\n      map(() => {\r\n        return true;\r\n      })\r\n    );\r\n  }\r\n\r\n  public seekToPosition(positionMs: number, deviceId?: string): Observable<boolean> {\r\n    return this.http.put(this.config.baseUrl + `/v1/me/player/seek`, {}, {\r\n      params: {\r\n        position_ms: positionMs.toString(),\r\n        device_id: deviceId\r\n      }\r\n    }).pipe(\r\n      take(1),\r\n      map(() => {\r\n        return true;\r\n      })\r\n    );\r\n  }\r\n\r\n  public getAvailableDevices(): Observable<Device[]> {\r\n    return this.http.get<DeviceList>(this.config.baseUrl + `/v1/me/player/devices`).pipe(map((list: DeviceList) => list.devices));\r\n  }\r\n\r\n  public toggleShuffle(shuffle: boolean, deviceId?: string): Observable<boolean> {\r\n    return this.http.put(this.config.baseUrl + `/v1/me/player/shuffle`, {}, {\r\n      params: {\r\n        state: shuffle.toString(),\r\n        device_id: deviceId\r\n      }\r\n    }).pipe(\r\n      take(1),\r\n      map(() => {\r\n        return true;\r\n      })\r\n    );\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param deviceIds Although an array is accepted, only a single deviceId is currently supported\r\n   * @param forcePlay\r\n   */\r\n  public transferPlayback(deviceIds: string[], forcePlay: boolean = false): Observable<boolean> {\r\n    return this.http.put(this.config.baseUrl + `/v1/me/player`, {\r\n      device_ids: deviceIds.join(','),\r\n      play: forcePlay\r\n    }).pipe(\r\n      take(1),\r\n      map(() => {\r\n        return true;\r\n      })\r\n    );\r\n  }\r\n\r\n  public getRecentlyPlayedTracks(limit: number = 20, before?: number, after: number = 0): Observable<CursorPaging<PlayHistory>> {\r\n    return this.http.get<CursorPaging<PlayHistory>>(this.config.baseUrl + `/v1/me/player/recently-played`, {\r\n      params: {\r\n        limit: limit.toString(),\r\n        before: (before ? before.toString() : undefined),\r\n        after: after.toString(),\r\n      }\r\n    });\r\n  }\r\n\r\n  public startPlayback(deviceId?: string, context?: string, uris?: string[], offset?: any, positionMs?: number): Observable<boolean> {\r\n    return this.http.put(this.config.baseUrl + `/v1/me/player/play`, {\r\n      context_uri: context,\r\n      uris: uris,\r\n      offset: offset,\r\n      position_ms: positionMs\r\n    }, {\r\n      params: {\r\n        device_id: deviceId\r\n      }\r\n    }).pipe(\r\n      take(1),\r\n      map(() => {\r\n        return true;\r\n      })\r\n    );\r\n  }\r\n\r\n  public pausePlayback(deviceId?: string): Observable<boolean> {\r\n    return this.http.put(this.config.baseUrl + `/v1/me/player/pause`, {}, {\r\n      params: {\r\n        device_id: deviceId\r\n      }\r\n    }).pipe(\r\n      take(1),\r\n      map(() => {\r\n        return true;\r\n      })\r\n    );\r\n  }\r\n\r\n  public toggleRepeatMode(mode: 'track' | 'context' | 'off', deviceId?: string): Observable<boolean> {\r\n    return this.http.put(this.config.baseUrl + `/v1/me/player/repeat`, {}, {\r\n      params: {\r\n        state: mode,\r\n        device_id: deviceId\r\n      }\r\n    }).pipe(\r\n      take(1),\r\n      map(() => {\r\n        return true;\r\n      })\r\n    );\r\n  }\r\n\r\n  public getPlayback(market?: string): Observable<Playback> {\r\n    return this.http.get<Playback>(this.config.baseUrl + `/v1/me/player`, {\r\n      params: {\r\n        market: market\r\n      }\r\n    });\r\n  }\r\n\r\n  public getCurrentlyPlayingTrack(market?: string): Observable<TrackCurrent> {\r\n    return this.http.get<TrackCurrent>(this.config.baseUrl + `/v1/me/player/currently-playing`, {\r\n      params: {\r\n        market: market\r\n      }\r\n    });\r\n  }\r\n\r\n  public setPlaybackVolume(volume: number, deviceId?: string): Observable<boolean> {\r\n    return this.http.put(this.config.baseUrl + `/v1/me/player/volume`, {}, {\r\n      params: {\r\n        volume_percent: volume.toString(),\r\n        device_id: deviceId\r\n      }\r\n    }).pipe(\r\n      take(1),\r\n      map(() => {\r\n        return true;\r\n      })\r\n    );\r\n  }\r\n}\r\n","import {Injectable, Optional} from '@angular/core';\r\nimport {HttpClient, HttpResponse} from '@angular/common/http';\r\nimport {Observable, of} from 'rxjs';\r\nimport {map} from 'rxjs/operators';\r\nimport {Playlist} from '../models';\r\nimport {Paging} from '../models';\r\nimport {PlaylistTrack} from '../models';\r\nimport {Image} from '../models';\r\nimport {ApiConfig} from '../models';\r\n\r\nclass Snapshot {\r\n  snapshotId: string;\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PlaylistService {\r\n\r\n  constructor(@Optional() private config: ApiConfig,\r\n              private http: HttpClient) { }\r\n\r\n  public addTracksToPlaylist(id: string, uris: string[], position: number): Observable<string> {\r\n    if (typeof uris !== typeof [] || uris.length < 1 || uris.length > 100) {\r\n      return of(null);\r\n    }\r\n    return this.http.post<Snapshot>(this.config.baseUrl + `/v1/playlists/${id}/tracks`, {\r\n      uris: uris,\r\n      position: position\r\n    }).pipe(map(({ snapshotId }) => {\r\n      return snapshotId;\r\n    }));\r\n  }\r\n\r\n  public removeTracksFromPlaylist(id: string, uris: string[]): Observable<string> {\r\n    if (typeof uris !== typeof [] || uris.length < 1 || uris.length > 100) {\r\n      return of(null);\r\n    }\r\n    return this.http.request<Snapshot>('DELETE', this.config.baseUrl + `/v1/playlists/${id}/tracks`, {\r\n      body: {\r\n        tracks: uris.map((uri: string) => {\r\n          return { uri: uri };\r\n        })\r\n      }\r\n    }).pipe(map(({ snapshotId }) => {\r\n      return snapshotId;\r\n    }));\r\n  }\r\n\r\n  public getPlaylist(id: string, market?: string): Observable<Playlist> {\r\n    return this.http.get<Playlist>(this.config.baseUrl + `/v1/playlists/${id}`, {\r\n      params: {\r\n        market: market || ''\r\n      }\r\n    });\r\n  }\r\n\r\n  public getPlaylistTracks(id: string, market: string, limit: number = 100, offset: number = 0): Observable<Paging<PlaylistTrack>> {\r\n    return this.http.get<Paging<PlaylistTrack>>(this.config.baseUrl + `/v1/playlists/${id}/tracks`, {\r\n      params: {\r\n        limit: limit.toString(),\r\n        offset: offset.toString(),\r\n        market: market\r\n      }\r\n    });\r\n  }\r\n\r\n  public getPlaylistCover(id: string): Observable<Image[]> {\r\n    return this.http.get<Image[]>(this.config.baseUrl + `/v1/playlists/${id}/images`);\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param id id of playlist\r\n   * @param image base64 encoded jpeg (max. 256KB)\r\n   */\r\n  public uploadPlaylistCover(id: string, image: string): Observable<boolean> {\r\n    return this.http.put(this.config.baseUrl + `/v1/playlists/${id}/images`, image, {\r\n      headers: {\r\n        'Content-Type': 'image/jpeg'\r\n      }\r\n    }).pipe(map((res: HttpResponse<any>) => {\r\n      return true;\r\n    }));\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param limit min=1, default=20, max=50\r\n   * @param offset min=0, default=0, max=100000\r\n   */\r\n  public getOwnPlaylists(limit: number = 20, offset: number = 0): Observable<Paging<Playlist>> {\r\n    return this.http.get<Paging<Playlist>>(this.config.baseUrl + `/v1/me/playlists`, {\r\n      params: {\r\n        limit: limit.toString(),\r\n        offset: offset.toString()\r\n      }\r\n    });\r\n  }\r\n\r\n  public updateDetails(id: string, name?: string, isPublic?: boolean, isCollaborative?: boolean, description?: string): Observable<boolean> {\r\n    return this.http.put(this.config.baseUrl + `/v1/playlists/${id}`, {\r\n      name,\r\n      public: isPublic,\r\n      collaborative: isCollaborative,\r\n      description: description\r\n    }, {\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    }).pipe(map((res: HttpResponse<any>): boolean => {\r\n      return true;\r\n    }));\r\n  }\r\n\r\n  public getUsersPlaylists(id: string, limit: number = 20, offset: number = 0): Observable<Paging<Playlist>> {\r\n    return this.http.get<Paging<Playlist>>(this.config.baseUrl + `/v1/users/${id}/playlists`, {\r\n      params: {\r\n        limit: limit.toString(),\r\n        offset: offset.toString()\r\n      }\r\n    });\r\n  }\r\n\r\n  public replacePlaylistTracks(id: string, uris: string[]): Observable<boolean> {\r\n    return this.http.put(this.config.baseUrl + `/v1/playlists/${id}/tracks`, {\r\n      uris: uris\r\n    }, {\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    }).pipe(map((res: HttpResponse<any>): boolean => {\r\n      return true;\r\n    }));\r\n  }\r\n\r\n  public createPlaylists(userid: string, name: string, isPublic: boolean, isCollaborative: boolean, description: string = ''): Observable<Playlist> {\r\n    return this.http.post<Playlist>(this.config.baseUrl + `/v1/users/${userid}/playlists`, {\r\n      name,\r\n      public: isPublic,\r\n      collaborative: isCollaborative,\r\n      description\r\n    }, {\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    });\r\n  }\r\n\r\n  public reorderPlaylistTracks(id: string, rangeStart: number, rangeLength: number, insertBefore: number, snapshot?: string): Observable<string> {\r\n    return this.http.put<Snapshot>(this.config.baseUrl + `/v1/playlists/${id}/tracks`, {\r\n      range_start: rangeStart,\r\n      insert_before: insertBefore,\r\n      range_length: rangeLength,\r\n      snapshot_id: snapshot\r\n    }, {\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    }).pipe(map((s: Snapshot) => s.snapshotId));\r\n  }\r\n}\r\n","import {Injectable, Optional} from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {Observable} from 'rxjs';\r\nimport {SearchResult} from '../models';\r\nimport {ApiConfig} from '../models';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SearchService {\r\n\r\n  constructor(@Optional() private config: ApiConfig,\r\n              private http: HttpClient) { }\r\n\r\n  public search(searchTerms: string, types: ('album' | 'artist' | 'track' | 'playlist')[], market?: string, limit: number = 20, offset: number = 0, includeExternal?: boolean): Observable<SearchResult> {\r\n    return this.http.get<SearchResult>(this.config.baseUrl + `/v1/search`, {\r\n      params: {\r\n        q: encodeURIComponent(searchTerms),\r\n        type: types.join(','),\r\n        market: market,\r\n        limit: limit.toString(),\r\n        offset: offset.toString(),\r\n        include_external: includeExternal ? 'audio' : undefined\r\n      }\r\n    });\r\n  }\r\n}\r\n","import {Injectable, Optional} from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {Observable, of} from 'rxjs';\r\nimport {Track} from '../models';\r\nimport {AudioFeatures} from '../models';\r\nimport {AudioAnalysis} from '../models';\r\nimport {map} from 'rxjs/operators';\r\nimport {ApiConfig} from '../models';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TrackService {\r\n\r\n  constructor(@Optional() private config: ApiConfig,\r\n              private http: HttpClient) { }\r\n\r\n  public getTrack(id: string, market?: string): Observable<Track> {\r\n    return this.http.get<Track>(this.config.baseUrl + `/v1/tracks/${id}`, {\r\n      params: {\r\n        market\r\n      }\r\n    });\r\n  }\r\n\r\n  public getAudioFeatures(id: string): Observable<AudioFeatures> {\r\n    return this.http.get<AudioFeatures>(this.config.baseUrl + `/v1/audio-features/${id}`);\r\n  }\r\n\r\n  public getAudioAnalysis(id: string): Observable<AudioAnalysis> {\r\n    return this.http.get<AudioAnalysis>(this.config.baseUrl + `/v1/audio-analysis/${id}`);\r\n  }\r\n\r\n  public getTracks(ids: string[], market?: string): Observable<Track[]> {\r\n    if (ids === undefined || ids === null || ids.length === 0) {\r\n      return of([]);\r\n    } else if (ids.length > 50) {\r\n      return of(null);\r\n    }\r\n\r\n    return this.http.get<{tracks: Track[]}>(this.config.baseUrl + `/v1/tracks`, {\r\n      params: {\r\n        ids: ids.join(','),\r\n        market: market || ''\r\n      }\r\n    }).pipe(map(({ tracks }): Track[] => tracks));\r\n  }\r\n\r\n  public getSeveralAudioFeatures(ids: string[]): Observable<AudioFeatures[]> {\r\n    if (ids === undefined || ids === null || ids.length === 0) {\r\n      return of([]);\r\n    } else if (ids.length > 50) {\r\n      return of(null);\r\n    }\r\n\r\n    return this.http.get<{audioFeatures: AudioFeatures[]}>(this.config.baseUrl + `/v1/audio-features`, {\r\n      params: {\r\n        ids: ids.join(',')\r\n      }\r\n    }).pipe(map(({ audioFeatures }): AudioFeatures[] => audioFeatures));\r\n  }\r\n}\r\n","import {Injectable, Optional} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {Observable} from 'rxjs';\nimport {UserPublic} from '../models';\nimport {UserPrivate} from '../models';\nimport {ApiConfig} from '../models';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n\n  constructor(@Optional() private config: ApiConfig,\n              private http: HttpClient) { }\n\n  getUser(id: string): Observable<UserPublic> {\n    return this.http.get<UserPublic>(this.config.baseUrl + `/v1/users/${id}`);\n  }\n\n  getCurrentUser(): Observable<UserPrivate> {\n    return this.http.get<UserPrivate>(this.config.baseUrl + `/v1/me`);\n  }\n}\n","import {ModuleWithProviders, NgModule} from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HttpClientModule } from '@angular/common/http';\nimport {\n  AlbumService,\n  ArtistService,\n  BrowseService,\n  FollowService,\n  LibraryService,\n  PersonalizationService,\n  PlayerService, PlaylistService, SearchService, TrackService, UserService\n} from './services';\nimport {httpInterceptorProviders} from './http-interceptors';\nimport {ApiConfig, AuthorizationConfig, SpotifyApiConfig} from './models/configs';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    HttpClientModule,\n  ],\n  providers: [\n    ArtistService,\n    AlbumService,\n    BrowseService,\n    FollowService,\n    LibraryService,\n    PersonalizationService,\n    PlayerService,\n    PlaylistService,\n    SearchService,\n    TrackService,\n    UserService,\n    httpInterceptorProviders\n  ]\n})\nexport class NgxSpotifyApiModule {\n  static forRoot(config: SpotifyApiConfig): ModuleWithProviders {\n    config = {\n      api: {\n        ...new ApiConfig(),\n        ...config.api\n      },\n      authorization: {\n        ...new AuthorizationConfig(),\n        ...config.authorization\n      }\n    };\n    return {\n      ngModule: NgxSpotifyApiModule,\n      providers: [\n        { provide: AuthorizationConfig, useValue: config.authorization },\n        { provide: ApiConfig,           useValue: config.api },\n      ]\n    };\n  }\n}\n"]}