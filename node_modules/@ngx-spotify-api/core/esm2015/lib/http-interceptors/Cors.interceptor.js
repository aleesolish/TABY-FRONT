/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Injectable } from '@angular/core';
import { ApiConfig } from '../models/configs/api.config';
export class CorsInterceptor {
    /**
     * @param {?} apiConfig
     */
    constructor(apiConfig) {
        this.apiConfig = apiConfig;
    }
    /**
     * @param {?} req
     * @param {?} next
     * @return {?}
     */
    intercept(req, next) {
        /** @type {?} */
        let headers = req.headers;
        if (req.url.indexOf(this.apiConfig.baseUrl) > -1) {
            headers = headers.set('Accept', 'application/json');
            headers = headers.set('Content-Type', 'application/json');
        }
        else if (req.url.indexOf('authorize')) {
            // headers = req.headers.set('Access-Control-Allow-Origin', '*');
        }
        /** @type {?} */
        const newReq = req.clone({
            headers: headers
        });
        return next.handle(newReq);
    }
}
CorsInterceptor.decorators = [
    { type: Injectable }
];
/** @nocollapse */
CorsInterceptor.ctorParameters = () => [
    { type: ApiConfig }
];
if (false) {
    /**
     * @type {?}
     * @private
     */
    CorsInterceptor.prototype.apiConfig;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQ29ycy5pbnRlcmNlcHRvci5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BuZ3gtc3BvdGlmeS1hcGkvY29yZS8iLCJzb3VyY2VzIjpbImxpYi9odHRwLWludGVyY2VwdG9ycy9Db3JzLmludGVyY2VwdG9yLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFFQSxPQUFPLEVBQUMsVUFBVSxFQUFDLE1BQU0sZUFBZSxDQUFDO0FBQ3pDLE9BQU8sRUFBQyxTQUFTLEVBQUMsTUFBTSw4QkFBOEIsQ0FBQztBQUd2RCxNQUFNLE9BQU8sZUFBZTs7OztJQUN4QixZQUFvQixTQUFvQjtRQUFwQixjQUFTLEdBQVQsU0FBUyxDQUFXO0lBQUcsQ0FBQzs7Ozs7O0lBRTVDLFNBQVMsQ0FBQyxHQUFxQixFQUFFLElBQWlCOztZQUMxQyxPQUFPLEdBQUcsR0FBRyxDQUFDLE9BQU87UUFFekIsSUFBSSxHQUFHLENBQUMsR0FBRyxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLE9BQU8sQ0FBQyxHQUFHLENBQUMsQ0FBQyxFQUFFO1lBQzlDLE9BQU8sR0FBRyxPQUFPLENBQUMsR0FBRyxDQUFDLFFBQVEsRUFBRSxrQkFBa0IsQ0FBQyxDQUFDO1lBQ3BELE9BQU8sR0FBRyxPQUFPLENBQUMsR0FBRyxDQUFDLGNBQWMsRUFBRSxrQkFBa0IsQ0FBQyxDQUFDO1NBQzdEO2FBQU0sSUFBSSxHQUFHLENBQUMsR0FBRyxDQUFDLE9BQU8sQ0FBQyxXQUFXLENBQUMsRUFBRTtZQUNyQyxpRUFBaUU7U0FDcEU7O2NBRUssTUFBTSxHQUFHLEdBQUcsQ0FBQyxLQUFLLENBQUM7WUFDckIsT0FBTyxFQUFFLE9BQU87U0FDbkIsQ0FBQztRQUNGLE9BQU8sSUFBSSxDQUFDLE1BQU0sQ0FBQyxNQUFNLENBQUMsQ0FBQztJQUMvQixDQUFDOzs7WUFsQkosVUFBVTs7OztZQUZILFNBQVM7Ozs7Ozs7SUFJRCxvQ0FBNEIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0h0dHBFdmVudCwgSHR0cEhhbmRsZXIsIEh0dHBJbnRlcmNlcHRvciwgSHR0cFJlcXVlc3R9IGZyb20gJ0Bhbmd1bGFyL2NvbW1vbi9odHRwJztcclxuaW1wb3J0IHtPYnNlcnZhYmxlfSBmcm9tICdyeGpzJztcclxuaW1wb3J0IHtJbmplY3RhYmxlfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHtBcGlDb25maWd9IGZyb20gJy4uL21vZGVscy9jb25maWdzL2FwaS5jb25maWcnO1xyXG5cclxuQEluamVjdGFibGUoKVxyXG5leHBvcnQgY2xhc3MgQ29yc0ludGVyY2VwdG9yIGltcGxlbWVudHMgSHR0cEludGVyY2VwdG9yIHtcclxuICAgIGNvbnN0cnVjdG9yKHByaXZhdGUgYXBpQ29uZmlnOiBBcGlDb25maWcpIHt9XHJcblxyXG4gICAgaW50ZXJjZXB0KHJlcTogSHR0cFJlcXVlc3Q8YW55PiwgbmV4dDogSHR0cEhhbmRsZXIpOiBPYnNlcnZhYmxlPEh0dHBFdmVudDxhbnk+PiB7XHJcbiAgICAgICAgbGV0IGhlYWRlcnMgPSByZXEuaGVhZGVycztcclxuXHJcbiAgICAgICAgaWYgKHJlcS51cmwuaW5kZXhPZih0aGlzLmFwaUNvbmZpZy5iYXNlVXJsKSA+IC0xKSB7XHJcbiAgICAgICAgICAgIGhlYWRlcnMgPSBoZWFkZXJzLnNldCgnQWNjZXB0JywgJ2FwcGxpY2F0aW9uL2pzb24nKTtcclxuICAgICAgICAgICAgaGVhZGVycyA9IGhlYWRlcnMuc2V0KCdDb250ZW50LVR5cGUnLCAnYXBwbGljYXRpb24vanNvbicpO1xyXG4gICAgICAgIH0gZWxzZSBpZiAocmVxLnVybC5pbmRleE9mKCdhdXRob3JpemUnKSkge1xyXG4gICAgICAgICAgICAvLyBoZWFkZXJzID0gcmVxLmhlYWRlcnMuc2V0KCdBY2Nlc3MtQ29udHJvbC1BbGxvdy1PcmlnaW4nLCAnKicpO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgY29uc3QgbmV3UmVxID0gcmVxLmNsb25lKHtcclxuICAgICAgICAgICAgaGVhZGVyczogaGVhZGVyc1xyXG4gICAgICAgIH0pO1xyXG4gICAgICAgIHJldHVybiBuZXh0LmhhbmRsZShuZXdSZXEpO1xyXG4gICAgfVxyXG59XHJcbiJdfQ==