/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { HttpParams } from '@angular/common/http';
import { Injectable } from '@angular/core';
import { ApiConfig } from '../models/configs';
export class RemoveNullParamsInterceptor {
    /**
     * @param {?} apiConfig
     */
    constructor(apiConfig) {
        this.apiConfig = apiConfig;
    }
    /**
     * @param {?} req
     * @param {?} next
     * @return {?}
     */
    intercept(req, next) {
        /** @type {?} */
        const params = new HttpParams();
        if (req.url.indexOf(this.apiConfig.baseUrl) > -1) {
            params.keys().forEach((key) => {
                /** @type {?} */
                const param = params.get(key);
                if (param != null && param !== 'null' && param !== 'undefined' && param !== '') {
                    params.set(key, param);
                }
            });
        }
        /** @type {?} */
        const newReq = req.clone({
            'params': params
        });
        return next.handle(newReq);
    }
}
RemoveNullParamsInterceptor.decorators = [
    { type: Injectable }
];
/** @nocollapse */
RemoveNullParamsInterceptor.ctorParameters = () => [
    { type: ApiConfig }
];
if (false) {
    /**
     * @type {?}
     * @private
     */
    RemoveNullParamsInterceptor.prototype.apiConfig;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiUmVtb3ZlTnVsbFBhcmFtcy5pbnRlcmNlcHRvci5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BuZ3gtc3BvdGlmeS1hcGkvY29yZS8iLCJzb3VyY2VzIjpbImxpYi9odHRwLWludGVyY2VwdG9ycy9SZW1vdmVOdWxsUGFyYW1zLmludGVyY2VwdG9yLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQTBDLFVBQVUsRUFBYyxNQUFNLHNCQUFzQixDQUFDO0FBRXRHLE9BQU8sRUFBQyxVQUFVLEVBQUMsTUFBTSxlQUFlLENBQUM7QUFDekMsT0FBTyxFQUFDLFNBQVMsRUFBQyxNQUFNLG1CQUFtQixDQUFDO0FBRzVDLE1BQU0sT0FBTywyQkFBMkI7Ozs7SUFDdEMsWUFBb0IsU0FBb0I7UUFBcEIsY0FBUyxHQUFULFNBQVMsQ0FBVztJQUV4QyxDQUFDOzs7Ozs7SUFDRCxTQUFTLENBQUMsR0FBcUIsRUFBRSxJQUFpQjs7Y0FDMUMsTUFBTSxHQUFlLElBQUksVUFBVSxFQUFFO1FBQzNDLElBQUksR0FBRyxDQUFDLEdBQUcsQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxPQUFPLENBQUMsR0FBRyxDQUFDLENBQUMsRUFBRTtZQUNoRCxNQUFNLENBQUMsSUFBSSxFQUFFLENBQUMsT0FBTyxDQUFDLENBQUMsR0FBVyxFQUFFLEVBQUU7O3NCQUM5QixLQUFLLEdBQUcsTUFBTSxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUM7Z0JBQzdCLElBQUksS0FBSyxJQUFJLElBQUksSUFBSSxLQUFLLEtBQUssTUFBTSxJQUFJLEtBQUssS0FBSyxXQUFXLElBQUksS0FBSyxLQUFLLEVBQUUsRUFBRTtvQkFDOUUsTUFBTSxDQUFDLEdBQUcsQ0FBQyxHQUFHLEVBQUUsS0FBSyxDQUFDLENBQUM7aUJBQ3hCO1lBQ0gsQ0FBQyxDQUFDLENBQUM7U0FDSjs7Y0FDSyxNQUFNLEdBQUcsR0FBRyxDQUFDLEtBQUssQ0FBQztZQUN2QixRQUFRLEVBQUUsTUFBTTtTQUNqQixDQUFDO1FBQ0YsT0FBTyxJQUFJLENBQUMsTUFBTSxDQUFDLE1BQU0sQ0FBQyxDQUFDO0lBQzdCLENBQUM7OztZQW5CRixVQUFVOzs7O1lBRkgsU0FBUzs7Ozs7OztJQUlILGdEQUE0QiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7SHR0cEV2ZW50LCBIdHRwSGFuZGxlciwgSHR0cEludGVyY2VwdG9yLCBIdHRwUGFyYW1zLCBIdHRwUmVxdWVzdH0gZnJvbSAnQGFuZ3VsYXIvY29tbW9uL2h0dHAnO1xyXG5pbXBvcnQge09ic2VydmFibGV9IGZyb20gJ3J4anMnO1xyXG5pbXBvcnQge0luamVjdGFibGV9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQge0FwaUNvbmZpZ30gZnJvbSAnLi4vbW9kZWxzL2NvbmZpZ3MnO1xyXG5cclxuQEluamVjdGFibGUoKVxyXG5leHBvcnQgY2xhc3MgUmVtb3ZlTnVsbFBhcmFtc0ludGVyY2VwdG9yIGltcGxlbWVudHMgSHR0cEludGVyY2VwdG9yIHtcclxuICBjb25zdHJ1Y3Rvcihwcml2YXRlIGFwaUNvbmZpZzogQXBpQ29uZmlnKSB7XHJcblxyXG4gIH1cclxuICBpbnRlcmNlcHQocmVxOiBIdHRwUmVxdWVzdDxhbnk+LCBuZXh0OiBIdHRwSGFuZGxlcik6IE9ic2VydmFibGU8SHR0cEV2ZW50PGFueT4+IHtcclxuICAgIGNvbnN0IHBhcmFtczogSHR0cFBhcmFtcyA9IG5ldyBIdHRwUGFyYW1zKCk7XHJcbiAgICBpZiAocmVxLnVybC5pbmRleE9mKHRoaXMuYXBpQ29uZmlnLmJhc2VVcmwpID4gLTEpIHtcclxuICAgICAgcGFyYW1zLmtleXMoKS5mb3JFYWNoKChrZXk6IHN0cmluZykgPT4ge1xyXG4gICAgICAgIGNvbnN0IHBhcmFtID0gcGFyYW1zLmdldChrZXkpO1xyXG4gICAgICAgIGlmIChwYXJhbSAhPSBudWxsICYmIHBhcmFtICE9PSAnbnVsbCcgJiYgcGFyYW0gIT09ICd1bmRlZmluZWQnICYmIHBhcmFtICE9PSAnJykge1xyXG4gICAgICAgICAgcGFyYW1zLnNldChrZXksIHBhcmFtKTtcclxuICAgICAgICB9XHJcbiAgICAgIH0pO1xyXG4gICAgfVxyXG4gICAgY29uc3QgbmV3UmVxID0gcmVxLmNsb25lKHtcclxuICAgICAgJ3BhcmFtcyc6IHBhcmFtc1xyXG4gICAgfSk7XHJcbiAgICByZXR1cm4gbmV4dC5oYW5kbGUobmV3UmVxKTtcclxuICB9XHJcbn1cclxuIl19