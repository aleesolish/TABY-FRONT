{"version":3,"file":"ngx-spotify-api-core.js.map","sources":["ng://@ngx-spotify-api/core/lib/models/configs/api.config.ts","ng://@ngx-spotify-api/core/lib/models/configs/authorization.config.ts","ng://@ngx-spotify-api/core/lib/models/configs/spotify-api.config.ts","ng://@ngx-spotify-api/core/lib/http-interceptors/Auth.interceptor.ts","ng://@ngx-spotify-api/core/lib/http-interceptors/Cors.interceptor.ts","ng://@ngx-spotify-api/core/lib/http-interceptors/RemoveNullParams.interceptor.ts","ng://@ngx-spotify-api/core/lib/http-interceptors/UnderscoreToCamelcase.interceptor.ts","ng://@ngx-spotify-api/core/lib/http-interceptors/index.ts","ng://@ngx-spotify-api/core/lib/models/album.ts","ng://@ngx-spotify-api/core/lib/models/album-simplified.ts","ng://@ngx-spotify-api/core/lib/models/artist.ts","ng://@ngx-spotify-api/core/lib/models/artist-simplified.ts","ng://@ngx-spotify-api/core/lib/models/audio-analysis.ts","ng://@ngx-spotify-api/core/lib/models/audio-features.ts","ng://@ngx-spotify-api/core/lib/models/category.ts","ng://@ngx-spotify-api/core/lib/models/context.ts","ng://@ngx-spotify-api/core/lib/models/copyright.ts","ng://@ngx-spotify-api/core/lib/models/cursor.ts","ng://@ngx-spotify-api/core/lib/models/cursor-paging.ts","ng://@ngx-spotify-api/core/lib/models/device.ts","ng://@ngx-spotify-api/core/lib/models/error.ts","ng://@ngx-spotify-api/core/lib/models/external-id.ts","ng://@ngx-spotify-api/core/lib/models/external-url.ts","ng://@ngx-spotify-api/core/lib/models/featured-playlists.ts","ng://@ngx-spotify-api/core/lib/models/followers.ts","ng://@ngx-spotify-api/core/lib/models/image.ts","ng://@ngx-spotify-api/core/lib/models/paging.ts","ng://@ngx-spotify-api/core/lib/models/play-history.ts","ng://@ngx-spotify-api/core/lib/models/playback.ts","ng://@ngx-spotify-api/core/lib/models/player-error.ts","ng://@ngx-spotify-api/core/lib/models/playlist.ts","ng://@ngx-spotify-api/core/lib/models/playlist-simplified.ts","ng://@ngx-spotify-api/core/lib/models/playlist-track.ts","ng://@ngx-spotify-api/core/lib/models/recommendations.ts","ng://@ngx-spotify-api/core/lib/models/recommendations-seed.ts","ng://@ngx-spotify-api/core/lib/models/restriction.ts","ng://@ngx-spotify-api/core/lib/models/saved-album.ts","ng://@ngx-spotify-api/core/lib/models/saved-track.ts","ng://@ngx-spotify-api/core/lib/models/search-result.ts","ng://@ngx-spotify-api/core/lib/models/track.ts","ng://@ngx-spotify-api/core/lib/models/track-current.ts","ng://@ngx-spotify-api/core/lib/models/track-link.ts","ng://@ngx-spotify-api/core/lib/models/track-simplified.ts","ng://@ngx-spotify-api/core/lib/models/user-private.ts","ng://@ngx-spotify-api/core/lib/models/user-public.ts","ng://@ngx-spotify-api/core/lib/services/album.service.ts","ng://@ngx-spotify-api/core/lib/services/artist.service.ts","ng://@ngx-spotify-api/core/lib/services/browse.service.ts","ng://@ngx-spotify-api/core/lib/services/follow.service.ts","ng://@ngx-spotify-api/core/lib/services/library.service.ts","ng://@ngx-spotify-api/core/lib/services/personalization.service.ts","ng://@ngx-spotify-api/core/lib/services/player.service.ts","ng://@ngx-spotify-api/core/lib/services/playlist.service.ts","ng://@ngx-spotify-api/core/lib/services/search.service.ts","ng://@ngx-spotify-api/core/lib/services/track.service.ts","ng://@ngx-spotify-api/core/lib/services/user.service.ts","ng://@ngx-spotify-api/core/lib/ngx-spotify-api.module.ts"],"sourcesContent":["export class ApiConfig {\r\n  baseUrl = 'https://api.spotify.com';\r\n}\r\n","import {Observable} from 'rxjs';\r\n\r\nexport class AuthorizationConfig {\r\n  /**\r\n   * @description This will be used for signing your requests. An access token is required for all endpoints\r\n   */\r\n  accessToken: () => Observable<string>;\r\n\r\n  /**\r\n   * @description This used to prefix the access- and refreshToken inside the local storage.\r\n   */\r\n  storagePrefix = 'ngx-spotify-api-';\r\n\r\n  /**\r\n   * @description This is an array of all scopes you need your application to access to. Default all scopes will be requested\r\n   */\r\n  scopes?: string[] = [\r\n    'user-top-read', 'user-read-recently-played',\r\n    'user-read-email', 'user-read-birthdate', 'user-read-private',\r\n    'playlist-read-collaborative', 'playlist-modify-public', 'playlist-read-private', 'playlist-modify-private',\r\n    'user-library-modify', 'user-library-read',\r\n    'user-follow-modify', 'user-follow-read',\r\n    'streaming', 'app-remote-control',\r\n    'user-read-playback-state', 'user-modify-playback-state', 'user-read-currently-playing'\r\n  ];\r\n}\r\n","import {AuthorizationConfig} from './authorization.config';\r\nimport {ApiConfig} from './api.config';\r\n\r\nexport class SpotifyApiConfig {\r\n  authorization: AuthorizationConfig;\r\n  api?: ApiConfig;\r\n}\r\n","import {HttpEvent, HttpHandler, HttpInterceptor, HttpRequest} from '@angular/common/http';\r\nimport {Observable} from 'rxjs';\r\nimport {Injectable} from '@angular/core';\r\nimport {ApiConfig, AuthorizationConfig} from '../models/configs';\r\nimport {flatMap, map} from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class AuthInterceptor implements HttpInterceptor {\r\n\r\n    constructor(private apiConfig: ApiConfig,\r\n                private authConfig: AuthorizationConfig) {}\r\n\r\n    private attachAuthorizationHeader(req: HttpRequest<any>): Observable<HttpRequest<any>> {\r\n      return  this.authConfig.accessToken().pipe(map((token: string): HttpRequest<any> => {\r\n        return req.clone({\r\n          headers: req.headers.set('Authorization', 'Bearer ' + token)\r\n        });\r\n      }));\r\n    }\r\n\r\n    intercept(origReq: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        return this.attachAuthorizationHeader(origReq).pipe(flatMap((req: HttpRequest<any>): Observable<HttpEvent<any>> => {\r\n          return next.handle(req);\r\n        }));\r\n    }\r\n}\r\n","import {HttpEvent, HttpHandler, HttpInterceptor, HttpRequest} from '@angular/common/http';\r\nimport {Observable} from 'rxjs';\r\nimport {Injectable} from '@angular/core';\r\nimport {ApiConfig} from '../models/configs/api.config';\r\n\r\n@Injectable()\r\nexport class CorsInterceptor implements HttpInterceptor {\r\n    constructor(private apiConfig: ApiConfig) {}\r\n\r\n    intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        let headers = req.headers;\r\n\r\n        if (req.url.indexOf(this.apiConfig.baseUrl) > -1) {\r\n            headers = headers.set('Accept', 'application/json');\r\n            headers = headers.set('Content-Type', 'application/json');\r\n        } else if (req.url.indexOf('authorize')) {\r\n            // headers = req.headers.set('Access-Control-Allow-Origin', '*');\r\n        }\r\n\r\n        const newReq = req.clone({\r\n            headers: headers\r\n        });\r\n        return next.handle(newReq);\r\n    }\r\n}\r\n","import {HttpEvent, HttpHandler, HttpInterceptor, HttpParams, HttpRequest} from '@angular/common/http';\r\nimport {Observable} from 'rxjs';\r\nimport {Injectable} from '@angular/core';\r\nimport {ApiConfig} from '../models/configs';\r\n\r\n@Injectable()\r\nexport class RemoveNullParamsInterceptor implements HttpInterceptor {\r\n  constructor(private apiConfig: ApiConfig) {\r\n\r\n  }\r\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n    const params: HttpParams = new HttpParams();\r\n    if (req.url.indexOf(this.apiConfig.baseUrl) > -1) {\r\n      params.keys().forEach((key: string) => {\r\n        const param = params.get(key);\r\n        if (param != null && param !== 'null' && param !== 'undefined' && param !== '') {\r\n          params.set(key, param);\r\n        }\r\n      });\r\n    }\r\n    const newReq = req.clone({\r\n      'params': params\r\n    });\r\n    return next.handle(newReq);\r\n  }\r\n}\r\n","import {HttpEvent, HttpHandler, HttpInterceptor, HttpRequest, HttpResponse} from '@angular/common/http';\r\nimport {Observable} from 'rxjs';\r\nimport {map, take} from 'rxjs/operators';\r\nimport {Injectable} from '@angular/core';\r\nimport {ApiConfig} from '../models/configs/api.config';\r\nimport {AuthorizationConfig} from \"../models/configs\";\r\n\r\n@Injectable()\r\nexport class UnderscoreToCamelcaseInterceptor implements HttpInterceptor {\r\n\r\n    constructor(private apiConfig: ApiConfig, private authConfig: AuthorizationConfig) {}\r\n\r\n    private transformObjectKeysToCamelCase(object: any): any {\r\n        if (object == null || object === {}) {\r\n            return object;\r\n        }\r\n        const ret = {};\r\n        Object.keys(object).forEach((key: string) => {\r\n            const newKey = key.replace(/[_]([^_])?/g, (v) => {\r\n                return v.replace('_', '').toUpperCase();\r\n            });\r\n            if (object[key] instanceof Array) {\r\n                ret[newKey] = object[key].map((value: any) => {\r\n                    return this.transformObjectKeysToCamelCase(value);\r\n                });\r\n            } else if (object[key] instanceof Object) {\r\n                ret[newKey] = this.transformObjectKeysToCamelCase(object[key]);\r\n            } else {\r\n                ret[newKey] = object[key];\r\n            }\r\n        });\r\n        return ret;\r\n    }\r\n    intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        return next.handle(req).pipe(map((res: HttpResponse<any>): HttpResponse<any> => {\r\n            if (req && req.url && req.url.includes(this.apiConfig.baseUrl) && res.body) {\r\n                return res.clone({\r\n                    body: this.transformObjectKeysToCamelCase(res.body)\r\n                });\r\n            }\r\n            return res;\r\n        }));\r\n    }\r\n}\r\n","/* \"Barrel\" of Http Interceptors */\r\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport {AuthInterceptor} from './Auth.interceptor';\r\nimport {CorsInterceptor} from './Cors.interceptor';\r\nimport {RemoveNullParamsInterceptor} from './RemoveNullParams.interceptor';\r\nimport {UnderscoreToCamelcaseInterceptor} from './UnderscoreToCamelcase.interceptor';\r\n\r\nexport * from './Auth.interceptor';\r\nexport * from './Cors.interceptor';\r\nexport * from './RemoveNullParams.interceptor';\r\nexport * from './UnderscoreToCamelcase.interceptor';\r\n\r\n/** Http interceptor providers in outside-in order */\r\nexport const httpInterceptorProviders = [\r\n  { provide: HTTP_INTERCEPTORS, useClass: AuthInterceptor, multi: true },\r\n  { provide: HTTP_INTERCEPTORS, useClass: CorsInterceptor, multi: true },\r\n  { provide: HTTP_INTERCEPTORS, useClass: RemoveNullParamsInterceptor, multi: true },\r\n  { provide: HTTP_INTERCEPTORS, useClass: UnderscoreToCamelcaseInterceptor, multi: true }\r\n];\r\n","import {Artist} from './artist';\r\nimport {Copyright} from './copyright';\r\nimport {ExternalId} from './external-id';\r\nimport {ExternalUrl} from './external-url';\r\nimport {Image} from './image';\r\nimport {Restriction} from './restriction';\r\nimport {Track} from './track';\r\nimport {Paging} from './paging';\r\nimport {AlbumType} from './album-type';\r\n\r\nexport class Album {\r\n    albumType: AlbumType;\r\n    artists: Artist[];\r\n    availableMarkets: string[];\r\n    copyrights: Copyright[];\r\n    externalIds: ExternalId;\r\n    externalUrls: ExternalUrl;\r\n    genres: string[];\r\n    href: string;\r\n    id: string;\r\n    images: Image[];\r\n    label: string;\r\n    name: string;\r\n    popularity: number;\r\n    releaseDate: string;\r\n    releaseDatePrecision: 'year' | 'month' | 'day';\r\n    restrictions: Restriction;\r\n    tracks: Paging<Track>;\r\n    type: 'album';\r\n    uri: string;\r\n}\r\n","import {ExternalUrl} from './external-url';\r\nimport {Image} from './image';\r\nimport {Restriction} from './restriction';\r\nimport {ArtistSimplified} from './artist-simplified';\r\nimport {AlbumType} from './album-type';\r\nimport {AlbumGroup} from './album-group';\r\n\r\nexport class AlbumSimplified {\r\n    albumGroup: AlbumGroup;\r\n    albumType: AlbumType;\r\n    artists: ArtistSimplified[];\r\n    availableMarkets: string[];\r\n    externalUrls: ExternalUrl;\r\n    href: string;\r\n    id: string;\r\n    images: Image[];\r\n    name: string;\r\n    releaseDate: string;\r\n    releaseDatePrecision: 'year' | 'month' | 'day';\r\n    restrictions: Restriction;\r\n    type: 'album';\r\n    uri: string;\r\n}\r\n","import {ExternalUrl} from './external-url';\nimport {Followers} from './followers';\nimport {Image} from './image';\n\nexport class Artist {\n    externalUrls: ExternalUrl;\n    followers: Followers;\n    genres: string[];\n    href: string;\n    id: string;\n    images: Image[];\n    name: string;\n    populariy: number;\n    type: 'artist';\n    uri: string;\n}\n","import {ExternalUrl} from './external-url';\nimport {Followers} from './followers';\n\nexport class ArtistSimplified {\n    externalUrls: ExternalUrl;\n    href: string;\n    id: string;\n    name: string;\n    type: 'artist';\n    uri: string;\n}\n","export class AudioAnalysis {\r\n  [key: string]: any;\r\n}\r\n","export class AudioFeatures {\r\n    acousticness: number;\r\n    analysisUrl: string;\r\n    danceability: number;\r\n    durationMs: number;\r\n    energy: number;\r\n    id: string;\r\n    instrumentalness: number;\r\n    key: number;\r\n    liveness: number;\r\n    loudness: number;\r\n    mode: 0 | 1; // Major = 1, minor = 0\r\n    speechiness: number;\r\n    tempo: number;\r\n    timeSignature: number;\r\n    trackHref: string;\r\n    type: 'audio_features';\r\n    uri: string;\r\n    valence: number;\r\n}\r\n","import {Image} from './image';\n\nexport class Category {\n    href: string;\n    icons: Image[];\n    id: string;\n    name: string;\n}\n","import {ExternalUrl} from './external-url';\n\nexport class Context {\n    type: 'artist' | 'playlist' | 'album';\n    href: string;\n    externalUrls: ExternalUrl;\n    uri: string;\n}\n","export class Copyright {\n    text: string;\n    type: 'C' | 'P';\n}\n","export class Cursor {\n    after: string;\n}\n","import {Cursor} from './cursor';\n\nexport class CursorPaging<C> {\n    href: string;\n    items: C[];\n    limit: number;\n    next: string;\n    cursors: Cursor;\n    total: number;\n}\n","export class Device {\r\n  id: string;\r\n  name: string;\r\n  type: string;\r\n  volumePercent: number;\r\n  isActive: boolean;\r\n  isPrivateSession: boolean;\r\n  isRestricted: boolean;\r\n}","export class Error {\n    /* HTTP status-code */\n    status: number;\n    message: string;\n}\n","export class ExternalId {\r\n  isrc?: string;\r\n  ean?: string;\r\n  upc?: string;\r\n}\r\n","export class ExternalUrl {\r\n    [target: string]: string\r\n}\r\n","import {Paging} from './paging';\nimport {Playlist} from './playlist';\nimport {PlaylistSimplified} from './playlist-simplified';\n\nexport class FeaturedPlaylists {\n  message: string;\n  playlists: Paging<PlaylistSimplified>;\n}\n","export class Followers {\n    href: string;\n    total: number;\n\n}\n","export class Image {\n    height: number;\n    url: string;\n    width: number;\n}\n","export class Paging<C> {\n    href: string;\n    items: C[];\n    limit: number;\n    next: string;\n    offset: number;\n    previous: string;\n    total: number;\n}\n","import {TrackSimplified} from './track-simplified';\nimport {Timestamp} from 'rxjs';\nimport {Context} from './context';\n\nexport class PlayHistory {\n    track: TrackSimplified;\n    playedAt: number; // timestamp\n    context: Context;\n}\n","import {Device} from './device';\r\nimport {Track} from './track';\r\nimport {Context} from './context';\r\n\r\nexport class Playback {\r\n  timestamp: number;\r\n  device: Device;\r\n  progressMs: number;\r\n  isPlaying: boolean;\r\n  currentlyPlayingType: 'track';\r\n  item: Track;\r\n  shuffleState: boolean;\r\n  repeatState: 'track' | 'context' | 'off';\r\n  context: Context;\r\n}\r\n","import { Error } from './error';\n\nexport class PlayerError extends Error {\n    status: 404 | 403;\n    message: string;\n    reason: string;\n}\n","import {ExternalUrl} from './external-url';\nimport {Followers} from './followers';\nimport {Image} from './image';\nimport {UserPublic} from './user-public';\nimport {Paging} from './paging';\nimport {PlaylistTrack} from './playlist-track';\n\nexport class Playlist {\n    collaborative: boolean;\n    description: string;\n    externalUrls: ExternalUrl;\n    followers: Followers;\n    href: string;\n    id: string;\n    images: Image[];\n    name: string;\n    owner: UserPublic;\n    public: boolean | null;\n    snapshotId: string;\n    tracks: Paging<PlaylistTrack>;\n    type: 'playlist';\n    uri: string;\n}\n","import {ExternalUrl} from './external-url';\nimport {Followers} from './followers';\nimport {Image} from './image';\nimport {UserPublic} from './user-public';\nimport {Paging} from './paging';\nimport {PlaylistTrack} from './playlist-track';\n\nexport class PlaylistSimplified {\n    collaborative: boolean;\n    externalUrls: ExternalUrl;\n    href: string;\n    id: string;\n    images: Image[];\n    name: string;\n    owner: UserPublic;\n    public: boolean | null;\n    snapshotId: string;\n    tracks: {\n        href: string;\n        total: number;\n    };\n    type: 'playlist';\n    uri: string;\n}\n","import {UserPublic} from './user-public';\nimport {Track} from './track';\n\nexport class PlaylistTrack {\n    addedAt: number | null; // timestamp\n    addedBy: UserPublic | null;\n    isLocal: boolean;\n    track: Track;\n}\n","import {RecommendationsSeed} from './recommendations-seed';\nimport {TrackSimplified} from './track-simplified';\n\nexport class Recommendations {\n    seeds: RecommendationsSeed[];\n    tracks: TrackSimplified[];\n}\n","export class RecommendationsSeed {\n    afterFilteringSize: number;\n    afterRelinkingSize: number;\n    href: string;\n    id: number;\n    initialPoolSize: number;\n    type: 'artist' | 'track' | 'genre';\n}\n","export class Restriction {\n    reason: string;\n}\n","import {Album} from './album';\n\nexport class SavedAlbum {\n    addedAt: number; // timestamp\n    album: Album;\n}\n","import {Track} from './track';\n\nexport class SavedTrack {\n    addedAt: number; // timestamp\n    track: Track;\n}\n","import {Paging} from './paging';\r\nimport {Artist} from './artist';\r\nimport {AlbumSimplified} from './album-simplified';\r\nimport {Track} from './track';\r\nimport {PlaylistSimplified} from './playlist-simplified';\r\n\r\nexport class SearchResult {\r\n  artists?: Paging<Artist>;\r\n  albums?: Paging<AlbumSimplified>;\r\n  tracks?: Paging<Track>;\r\n  playlists?: Paging<PlaylistSimplified>;\r\n}\r\n","import {Album} from './album';\nimport {ArtistSimplified} from './artist-simplified';\nimport {ExternalId} from './external-id';\nimport {ExternalUrl} from './external-url';\nimport {TrackLink} from './track-link';\nimport {Restriction} from './restriction';\n\nexport class Track {\n    album: Album;\n    artists: ArtistSimplified[];\n    availableMarkets: string[];\n    discNumber: number;\n    durationMs: number;\n    explicit: boolean;\n    externalIds: ExternalId;\n    externalUrls: ExternalUrl;\n    href: string;\n    id: string;\n    isPlayable: boolean;\n    linkedFrom: TrackLink;\n    restrictions: Restriction;\n    name: string;\n    popularity: number;\n    previewUrl: string;\n    trackNumber: number;\n    type: 'track';\n    uri: string;\n    isLocal: boolean;\n}\n","import {Context} from './context';\r\nimport {Track} from './track';\r\n\r\nexport class TrackCurrent {\r\n  context: Context;\r\n  timestamp: number;\r\n  progressMs: number;\r\n  isPlaying: boolean;\r\n  currentlyPlayingType: 'track';\r\n  item: Track;\r\n}","import {ExternalUrl} from './external-url';\n\nexport class TrackLink {\n    externalUrls: ExternalUrl;\n    href: string;\n    id: string;\n    type: 'track';\n    uri: string;\n}\n","import {ArtistSimplified} from './artist-simplified';\nimport {ExternalUrl} from './external-url';\nimport {TrackLink} from './track-link';\nimport {Restriction} from './restriction';\n\nexport class TrackSimplified {\n    artists: ArtistSimplified[];\n    availableMarkets: string[];\n    discNumber: number;\n    durationMs: number;\n    explicit: boolean;\n    externalUrls: ExternalUrl;\n    href: string;\n    id: string;\n    isPlayable: boolean;\n    linkedFrom: TrackLink;\n    restrictions: Restriction;\n    name: string;\n    previewUrl: string;\n    trackNumber: number;\n    type: 'track';\n    uri: string;\n    isLocal: boolean;\n}\n","import {ExternalUrl} from './external-url';\nimport {Followers} from './followers';\nimport {Image} from './image';\n\nexport class UserPrivate {\n    birthdate: string;\n    country: string;\n    displayName: string;\n    email?: string;\n    externalUrls: ExternalUrl;\n    followers: Followers;\n    href: string;\n    id: string;\n    images: Image[];\n    product: 'premium' | 'free' | 'open';\n    type: 'user';\n    uri: string;\n}\n","import {ExternalUrl} from './external-url';\nimport {Followers} from './followers';\nimport {Image} from './image';\n\nexport class UserPublic {\n    displayName: string;\n    externalUrls: ExternalUrl;\n    followers: Followers;\n    href: string;\n    id: string;\n    images: Image[];\n    type: 'user';\n    uri: string;\n}\n","import {Injectable, Optional} from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {Observable, of} from 'rxjs';\r\nimport {Album} from '../models';\r\nimport {map, tap} from 'rxjs/operators';\r\nimport {Paging} from '../models';\r\nimport {Track} from '../models';\r\nimport {ApiConfig} from '../models';\r\n\r\nclass AlbumsResponse {\r\n  albums: Album[];\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AlbumService {\r\n\r\n  constructor(@Optional() private config: ApiConfig,\r\n              private http: HttpClient) {\r\n  }\r\n\r\n  getAlbum(id: string, market?: string): Observable<Album> {\r\n    return this.http.get<Album>(this.config.baseUrl + '/v1/albums/' + id, {\r\n      params: {\r\n        market: market\r\n      }\r\n    });\r\n  }\r\n\r\n  getAlbumTracks(id: string, limit: number = 20, offset: number = 0, market?: string): Observable<Paging<Track>> {\r\n    return this.http.get<Paging<Track>>(this.config.baseUrl + '/v1/albums/' + id + '/tracks', {\r\n      params: {\r\n        limit: limit.toString(),\r\n        offset: offset.toString(),\r\n        market: market\r\n      }\r\n    });\r\n  }\r\n\r\n  getAlbums(ids: string[], market?: string): Observable<Album[]> {\r\n    if (ids == null || ids.length < 1) {\r\n      return of([]);\r\n    } else if (ids.length > 20) {\r\n      return of(null);\r\n    }\r\n\r\n    return this.http.get<AlbumsResponse>(this.config.baseUrl + '/v1/albums', {\r\n      params: {\r\n        ids: ids.join(','),\r\n        market: market\r\n      }\r\n    }).pipe(map((res: AlbumsResponse): Album[] => {\r\n      return res.albums;\r\n    }));\r\n  }\r\n}\r\n","import {Injectable, Optional} from '@angular/core';\r\nimport {Observable, of} from 'rxjs';\r\nimport {Artist} from '../models';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {Paging} from '../models';\r\nimport {Track} from '../models';\r\nimport {Album} from '../models';\r\nimport {map} from 'rxjs/operators';\r\nimport {ApiConfig} from '../models';\r\nimport {AlbumGroup} from '../models';\r\nimport {AlbumSimplified} from '../models';\r\n\r\nclass ArtistListResponse {\r\n  artists: Artist[];\r\n}\r\n\r\nclass TrackListResponse {\r\n  tracks: Track[];\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ArtistService {\r\n\r\n  constructor(@Optional() private config: ApiConfig,\r\n              private http: HttpClient) { }\r\n\r\n  getArtist(id: string): Observable<Artist> {\r\n    return this.http.get<Artist>(this.config.baseUrl + '/v1/artists/' + id, {\r\n      params: {}\r\n    });\r\n  }\r\n\r\n  getArtistsAlbums(id: string, includeGroups?: AlbumGroup[], market?: string, limit: number = 20, offset: number = 0): Observable<Paging<AlbumSimplified>> {\r\n    return this.http.get<Paging<AlbumSimplified>>(this.config.baseUrl + '/v1/artists/' + id + '/albums', {\r\n      params: {\r\n        include_groups: includeGroups ? includeGroups.join(',') : null,\r\n        market,\r\n        limit: limit.toString(),\r\n        offset: offset.toString()\r\n      }\r\n    });\r\n  }\r\n\r\n  getArtistsTopTracks(id: string, market: string): Observable<Track[]> {\r\n    return this.http.get<TrackListResponse>(this.config.baseUrl + '/v1/artists/' + id + '/top-tracks', {\r\n      params: {\r\n        market: market\r\n      }\r\n    }).pipe(map((res: TrackListResponse): Track[] => {\r\n      return res.tracks;\r\n    }));\r\n  }\r\n\r\n  getArtistsRelatedArtists(id: string): Observable<Artist[]> {\r\n    return this.http.get<ArtistListResponse>(this.config.baseUrl + '/v1/artists/' + id + '/related-artists', {\r\n      params: {}\r\n    }).pipe(map((res: ArtistListResponse): Artist[] => {\r\n      return res.artists;\r\n    }));\r\n  }\r\n\r\n  getArtists(ids: string[]): Observable<Artist[]> {\r\n    if (ids == null || ids.length < 1) {\r\n      return of([]);\r\n    } else if (ids.length > 50) {\r\n      return of(null);\r\n    }\r\n\r\n    return this.http.get<ArtistListResponse>(this.config.baseUrl + '/v1/artists/', {\r\n      params: {\r\n        ids: ids.join(',')\r\n      }\r\n    }).pipe(map((res: ArtistListResponse): Artist[] => {\r\n      return res.artists;\r\n    }));\r\n  }\r\n}\r\n","import {Injectable, Optional} from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {Observable} from 'rxjs';\r\nimport {Category} from '../models';\r\nimport {Playlist} from '../models';\r\nimport {map} from 'rxjs/operators';\r\nimport {Paging} from '../models';\r\nimport {FeaturedPlaylists} from '../models';\r\nimport {Album} from '../models';\r\nimport {AlbumSimplified} from '../models';\r\nimport {ApiConfig} from '../models';\r\nimport {PlaylistSimplified} from '../models';\r\n\r\nclass PlaylistList {\r\n  playlists: Paging<PlaylistSimplified>;\r\n}\r\n\r\nclass CategoryList {\r\n  categories: Paging<Category>;\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class BrowseService {\r\n\r\n  constructor(@Optional() private config: ApiConfig,\r\n              private http: HttpClient) { }\r\n\r\n  public getCategory(id: string, country?: string, locale?: string): Observable<Category> {\r\n    return this.http.get<Category>(this.config.baseUrl + '/v1/browse/categories/' + id, {\r\n      params: {\r\n        country: country,\r\n        locale: locale\r\n      }\r\n    });\r\n  }\r\n\r\n  public getCategoryPlaylists(id: string, country?: string, limit: number = 20, offset: number = 0): Observable<Paging<PlaylistSimplified>> {\r\n    return this.http.get<PlaylistList>(this.config.baseUrl + '/v1/browse/categories/' + id + '/playlists', {\r\n      params: {\r\n        country: country,\r\n        limit: limit.toString(),\r\n        offset: offset.toString()\r\n      }\r\n    }).pipe(map((res: PlaylistList) => {\r\n        return res.playlists;\r\n      }));\r\n  }\r\n\r\n  public getCategories(country?: string, locale?: string, limit: number = 20, offset: number = 0): Observable<Paging<Category>> {\r\n    return this.http.get<CategoryList>(this.config.baseUrl + '/v1/browse/categories', {\r\n      params: {\r\n        country: country,\r\n        locale: locale,\r\n        limit: limit.toString(),\r\n        offset: offset.toString()\r\n      }\r\n    }).pipe(map((list: CategoryList) => {\r\n      return list.categories;\r\n    }));\r\n  }\r\n\r\n  public getFeaturedPlaylists(\r\n    country?: string,\r\n    locale?: string,\r\n    timestamp: Date = new Date(),\r\n    limit: number = 20, offset: number = 0)\r\n    : Observable<FeaturedPlaylists> {\r\n      return this.http.get<FeaturedPlaylists>(this.config.baseUrl + '/v1/browse/featured-playlists', {\r\n        params: {\r\n          country,\r\n          locale,\r\n          timestamp: timestamp.toISOString(),\r\n          limit: limit.toString(),\r\n          offset: offset.toString()\r\n        }\r\n      });\r\n  }\r\n\r\n  public getNewReleases(country?: string, limit: number = 20, offset: number = 0): Observable<Paging<AlbumSimplified>> {\r\n    return this.http.get<{ albums: Paging<AlbumSimplified> }>(this.config.baseUrl + '/v1/browse/new-releases', {\r\n      params: {\r\n        country,\r\n        limit: limit.toString(),\r\n        offset: offset.toString()\r\n      }\r\n    }).pipe(map(({albums}) => {\r\n      return albums;\r\n    }));\r\n  }\r\n\r\n  // Recommendations will follow in a future release\r\n}\r\n","import {Injectable, Optional} from '@angular/core';\r\nimport {HttpClient, HttpErrorResponse} from '@angular/common/http';\r\nimport {Observable, of} from 'rxjs';\r\nimport {CursorPaging} from '../models';\r\nimport {Artist} from '../models';\r\nimport {ApiConfig} from '../models';\r\nimport {catchError, map} from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class FollowService {\r\n\r\n  constructor(@Optional() private config: ApiConfig,\r\n              private http: HttpClient) { }\r\n\r\n  public isFollowingArtists(ids: string[]): Observable<boolean[]> {\r\n    if (ids === null || ids.length === 0) {\r\n      return of([]);\r\n    } else if (ids.length > 50) {\r\n      return of(null);\r\n    }\r\n    return this.http.get<boolean[]>(this.config.baseUrl + '/v1/me/following/contains', {\r\n      params: {\r\n        type: 'artist',\r\n        ids: ids.join(',')\r\n      }\r\n    });\r\n  }\r\n\r\n  public isFollowingUsers(ids: string[]): Observable<boolean[]> {\r\n    if (ids === null || ids.length === 0) {\r\n      return of([]);\r\n    } else if (ids.length > 50) {\r\n      return of(null);\r\n    }\r\n    return this.http.get<boolean[]>(this.config.baseUrl + '/v1/me/following/contains', {\r\n      params: {\r\n        type: 'user',\r\n        ids: ids.join(',')\r\n      }\r\n    });\r\n  }\r\n\r\n  public areFollowingPlaylist(playlistId: string, usersToCheck: string[]): Observable<boolean[]> {\r\n    if (usersToCheck === null || usersToCheck.length === 0) {\r\n      return of([]);\r\n    } else if (usersToCheck.length > 5) {\r\n      return of(null);\r\n    }\r\n    return this.http.get<boolean[]>(this.config.baseUrl + `/v1/playlists/${playlistId}/followers/contains`, {\r\n      params: {\r\n        ids: usersToCheck.join(',')\r\n      }\r\n    });\r\n  }\r\n\r\n  public followArtists(ids: string[]): Observable<boolean> {\r\n    if (ids === null || ids.length === 0) {\r\n      return of(false);\r\n    } else if (ids.length > 50) {\r\n      return of(false);\r\n    }\r\n    return this.http.put<void>(this.config.baseUrl + '/v1/me/following', {}, {\r\n      params: {\r\n        type: 'artist',\r\n        ids: ids.join(',')\r\n      }\r\n    }).pipe(map((): boolean => {\r\n      return true;\r\n    }));\r\n  }\r\n\r\n  public followUsers(ids: string[]): Observable<boolean> {\r\n    if (ids === null || ids.length === 0) {\r\n      return of(false);\r\n    } else if (ids.length > 50) {\r\n      return of(false);\r\n    }\r\n    return this.http.put(this.config.baseUrl + '/v1/me/following', {}, {\r\n      params: {\r\n        type: 'user',\r\n        ids: ids.join(',')\r\n      }\r\n    }).pipe(map(() => {\r\n      return true;\r\n    }));\r\n  }\r\n\r\n  public followPlaylist(id: string, isPublic: boolean = false): Observable<boolean> {\r\n    return this.http.put(this.config.baseUrl + `/v1/playlists/${id}/followers`, {\r\n      public: isPublic\r\n    }).pipe(map(() => {\r\n      return true;\r\n    }));\r\n  }\r\n\r\n  public getFollowedArtists(limit: number = 20, after?: string): Observable<CursorPaging<Artist>> {\r\n    return this.http.get<CursorPaging<Artist>>(this.config.baseUrl + `/v1/me/following`, {\r\n      params: {\r\n        type: 'artist',\r\n        limit: limit.toString(),\r\n        after: after\r\n      }\r\n    });\r\n  }\r\n\r\n  public unfollowArtists(ids: string[]): Observable<boolean> {\r\n    if (ids === null || ids.length === 0) {\r\n      return of(false);\r\n    } else if (ids.length > 50) {\r\n      return of(false);\r\n    }\r\n    return this.http.delete(this.config.baseUrl + '/v1/me/following', {\r\n      params: {\r\n        type: 'artist',\r\n        ids: ids.join(',')\r\n      }\r\n    }).pipe(map(() => true));\r\n  }\r\n\r\n  public unfollowUsers(ids: string[]): Observable<boolean> {\r\n    if (ids === null || ids.length === 0) {\r\n      return of(false);\r\n    } else if (ids.length > 50) {\r\n      return of(false);\r\n    }\r\n    return this.http.delete(this.config.baseUrl + '/v1/me/following', {\r\n      params: {\r\n        type: 'user',\r\n        ids: ids.join(',')\r\n      }\r\n    }).pipe(map(() => true));\r\n  }\r\n\r\n  public unfollowPlaylist(id: string): Observable<boolean> {\r\n    return this.http.delete(this.config.baseUrl + `/v1/playlists/${id}/followers`).pipe(map(() => true));\r\n  }\r\n}\r\n","import {Injectable, Optional} from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {Observable, of} from 'rxjs';\r\nimport {Paging} from '../models';\r\nimport {Album} from '../models';\r\nimport {Track} from '../models';\r\nimport {ApiConfig} from '../models';\r\nimport {map} from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LibraryService {\r\n\r\n  constructor(@Optional() private config: ApiConfig,\r\n              private http: HttpClient) { }\r\n\r\n  public areSavedAlbums(ids: string[]): Observable<boolean[]> {\r\n    if (ids === null || ids === undefined || ids.length === 0) {\r\n      return of([]);\r\n    } else if (ids.length > 50) {\r\n      return of(null);\r\n    }\r\n\r\n    return this.http.get<boolean[]>(this.config.baseUrl + `/v1/me/albums/contains`, {\r\n      params: {\r\n        ids: ids.join(',')\r\n      }\r\n    });\r\n  }\r\n\r\n  public areSavedTracks(ids: string[]): Observable<boolean[]> {\r\n    if (ids === null || ids === undefined || ids.length === 0) {\r\n      return of([]);\r\n    } else if (ids.length > 50) {\r\n      return of(null);\r\n    }\r\n\r\n    return this.http.get<boolean[]>(this.config.baseUrl + `/v1/me/tracks/contains`, {\r\n      params: {\r\n        ids: ids.join(',')\r\n      }\r\n    });\r\n  }\r\n\r\n  public getSavedAlbums(limit: number = 20, offset: number = 0, market?: string): Observable<Paging<Album>> {\r\n    return this.http.get<Paging<Album>>(this.config.baseUrl + `/v1/me/albums`, {\r\n      params: {\r\n        limit: limit.toString(),\r\n        offset: offset.toString(),\r\n        market\r\n      }\r\n    });\r\n  }\r\n\r\n  public getSavedTracks(limit: number = 20, offset: number = 0, market?: string): Observable<Paging<Track>> {\r\n    return this.http.get<Paging<Track>>(this.config.baseUrl + `/v1/me/tracks`, {\r\n      params: {\r\n        limit: limit.toString(),\r\n        offset: offset.toString(),\r\n        market\r\n      }\r\n    });\r\n  }\r\n\r\n  public saveAlbums(ids: string[]): Observable<boolean> {\r\n    if (ids === null || ids === undefined || ids.length === 0) {\r\n      return of(false);\r\n    } else if (ids.length > 50) {\r\n      return of(false);\r\n    }\r\n    return this.http.put(this.config.baseUrl + `/v1/me/albums`, {}, {\r\n      params: {\r\n        ids: ids.join(',')\r\n      }\r\n    }).pipe(map(() => true));\r\n  }\r\n\r\n  public removeAlbums(ids: string[]): Observable<boolean> {\r\n    if (ids === null || ids === undefined || ids.length === 0) {\r\n      return of(false);\r\n    } else if (ids.length > 50) {\r\n      return of(false);\r\n    }\r\n    return this.http.delete(this.config.baseUrl + `/v1/me/albums`, {\r\n      params: {\r\n        ids: ids.join(',')\r\n      }\r\n    }).pipe(map(() => true));\r\n  }\r\n\r\n  public saveTracks(ids: string[]): Observable<boolean> {\r\n    if (ids === null || ids === undefined || ids.length === 0) {\r\n      return of(false);\r\n    } else if (ids.length > 50) {\r\n      return of(false);\r\n    }\r\n    return this.http.put(this.config.baseUrl + `/v1/me/tracks`, {}, {\r\n      params: {\r\n        ids: ids.join(',')\r\n      }\r\n    }).pipe(map(() => true));\r\n  }\r\n\r\n  public removeTracks(ids: string[]): Observable<boolean> {\r\n    if (ids === null || ids === undefined || ids.length === 0) {\r\n      return of(false);\r\n    } else if (ids.length > 50) {\r\n      return of(false);\r\n    }\r\n    return this.http.delete(this.config.baseUrl + `/v1/me/tracks`, {\r\n      params: {\r\n        ids: ids.join(',')\r\n      }\r\n    }).pipe(map(() => true));\r\n  }\r\n}\r\n","import {Injectable, Optional} from '@angular/core';\r\nimport {Observable} from 'rxjs';\r\nimport {Paging} from '../models';\r\nimport {Artist} from '../models';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {Track} from '../models';\r\nimport {ApiConfig} from '../models';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PersonalizationService {\r\n\r\n  constructor(@Optional() private config: ApiConfig,\r\n              private http: HttpClient) { }\r\n\r\n  public getTopArtists(limit: number = 20, offset: number = 0, timeRange?: 'long_term' | 'medium_term' | 'short_term'): Observable<Paging<Artist>> {\r\n    return this.http.get<Paging<Artist>>(this.config.baseUrl + `/v1/me/top/artists`, {\r\n      params: {\r\n        limit: limit.toString(),\r\n        offset: offset.toString(),\r\n        time_range: timeRange\r\n      }\r\n    });\r\n  }\r\n  public getTopTracks(limit: number = 20, offset: number = 0, timeRange?: 'long_term' | 'medium_term' | 'short_term'): Observable<Paging<Track>> {\r\n    return this.http.get<Paging<Track>>(this.config.baseUrl + `/v1/me/top/tracks`, {\r\n      params: {\r\n        limit: limit.toString(),\r\n        offset: offset.toString(),\r\n        time_range: timeRange\r\n      }\r\n    });\r\n  }\r\n}\r\n","import {Injectable, Optional} from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {Observable} from 'rxjs';\r\nimport {Device} from '../models';\r\nimport {map, take} from 'rxjs/operators';\r\nimport {CursorPaging} from '../models';\r\nimport {PlayHistory} from '../models';\r\nimport {Playback} from '../models';\r\nimport {TrackCurrent} from '../models';\r\nimport {ApiConfig} from '../models';\r\n\r\nclass DeviceList {\r\n  devices: Device[];\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PlayerService {\r\n\r\n  constructor(@Optional() private config: ApiConfig,\r\n              private http: HttpClient) { }\r\n\r\n  public nextTrack(deviceId?: string): Observable<boolean> {\r\n    return this.http.post(this.config.baseUrl + `/v1/me/player/next`, {}, {\r\n      params: {\r\n        device_id: deviceId\r\n      }\r\n    }).pipe(\r\n      take(1),\r\n      map(() => {\r\n        return true;\r\n      })\r\n    );\r\n  }\r\n\r\n  public previousTrack(deviceId?: string): Observable<boolean> {\r\n    return this.http.post(this.config.baseUrl + `/v1/me/player/previous`, {}, {\r\n      params: {\r\n        device_id: deviceId\r\n      }\r\n    }).pipe(\r\n      take(1),\r\n      map(() => {\r\n        return true;\r\n      })\r\n    );\r\n  }\r\n\r\n  public seekToPosition(positionMs: number, deviceId?: string): Observable<boolean> {\r\n    return this.http.put(this.config.baseUrl + `/v1/me/player/seek`, {}, {\r\n      params: {\r\n        position_ms: positionMs.toString(),\r\n        device_id: deviceId\r\n      }\r\n    }).pipe(\r\n      take(1),\r\n      map(() => {\r\n        return true;\r\n      })\r\n    );\r\n  }\r\n\r\n  public getAvailableDevices(): Observable<Device[]> {\r\n    return this.http.get<DeviceList>(this.config.baseUrl + `/v1/me/player/devices`).pipe(map((list: DeviceList) => list.devices));\r\n  }\r\n\r\n  public toggleShuffle(shuffle: boolean, deviceId?: string): Observable<boolean> {\r\n    return this.http.put(this.config.baseUrl + `/v1/me/player/shuffle`, {}, {\r\n      params: {\r\n        state: shuffle.toString(),\r\n        device_id: deviceId\r\n      }\r\n    }).pipe(\r\n      take(1),\r\n      map(() => {\r\n        return true;\r\n      })\r\n    );\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param deviceIds Although an array is accepted, only a single deviceId is currently supported\r\n   * @param forcePlay\r\n   */\r\n  public transferPlayback(deviceIds: string[], forcePlay: boolean = false): Observable<boolean> {\r\n    return this.http.put(this.config.baseUrl + `/v1/me/player`, {\r\n      device_ids: deviceIds.join(','),\r\n      play: forcePlay\r\n    }).pipe(\r\n      take(1),\r\n      map(() => {\r\n        return true;\r\n      })\r\n    );\r\n  }\r\n\r\n  public getRecentlyPlayedTracks(limit: number = 20, before?: number, after: number = 0): Observable<CursorPaging<PlayHistory>> {\r\n    return this.http.get<CursorPaging<PlayHistory>>(this.config.baseUrl + `/v1/me/player/recently-played`, {\r\n      params: {\r\n        limit: limit.toString(),\r\n        before: (before ? before.toString() : undefined),\r\n        after: after.toString(),\r\n      }\r\n    });\r\n  }\r\n\r\n  public startPlayback(deviceId?: string, context?: string, uris?: string[], offset?: any, positionMs?: number): Observable<boolean> {\r\n    return this.http.put(this.config.baseUrl + `/v1/me/player/play`, {\r\n      context_uri: context,\r\n      uris: uris,\r\n      offset: offset,\r\n      position_ms: positionMs\r\n    }, {\r\n      params: {\r\n        device_id: deviceId\r\n      }\r\n    }).pipe(\r\n      take(1),\r\n      map(() => {\r\n        return true;\r\n      })\r\n    );\r\n  }\r\n\r\n  public pausePlayback(deviceId?: string): Observable<boolean> {\r\n    return this.http.put(this.config.baseUrl + `/v1/me/player/pause`, {}, {\r\n      params: {\r\n        device_id: deviceId\r\n      }\r\n    }).pipe(\r\n      take(1),\r\n      map(() => {\r\n        return true;\r\n      })\r\n    );\r\n  }\r\n\r\n  public toggleRepeatMode(mode: 'track' | 'context' | 'off', deviceId?: string): Observable<boolean> {\r\n    return this.http.put(this.config.baseUrl + `/v1/me/player/repeat`, {}, {\r\n      params: {\r\n        state: mode,\r\n        device_id: deviceId\r\n      }\r\n    }).pipe(\r\n      take(1),\r\n      map(() => {\r\n        return true;\r\n      })\r\n    );\r\n  }\r\n\r\n  public getPlayback(market?: string): Observable<Playback> {\r\n    return this.http.get<Playback>(this.config.baseUrl + `/v1/me/player`, {\r\n      params: {\r\n        market: market\r\n      }\r\n    });\r\n  }\r\n\r\n  public getCurrentlyPlayingTrack(market?: string): Observable<TrackCurrent> {\r\n    return this.http.get<TrackCurrent>(this.config.baseUrl + `/v1/me/player/currently-playing`, {\r\n      params: {\r\n        market: market\r\n      }\r\n    });\r\n  }\r\n\r\n  public setPlaybackVolume(volume: number, deviceId?: string): Observable<boolean> {\r\n    return this.http.put(this.config.baseUrl + `/v1/me/player/volume`, {}, {\r\n      params: {\r\n        volume_percent: volume.toString(),\r\n        device_id: deviceId\r\n      }\r\n    }).pipe(\r\n      take(1),\r\n      map(() => {\r\n        return true;\r\n      })\r\n    );\r\n  }\r\n}\r\n","import {Injectable, Optional} from '@angular/core';\r\nimport {HttpClient, HttpResponse} from '@angular/common/http';\r\nimport {Observable, of} from 'rxjs';\r\nimport {map} from 'rxjs/operators';\r\nimport {Playlist} from '../models';\r\nimport {Paging} from '../models';\r\nimport {PlaylistTrack} from '../models';\r\nimport {Image} from '../models';\r\nimport {ApiConfig} from '../models';\r\n\r\nclass Snapshot {\r\n  snapshotId: string;\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PlaylistService {\r\n\r\n  constructor(@Optional() private config: ApiConfig,\r\n              private http: HttpClient) { }\r\n\r\n  public addTracksToPlaylist(id: string, uris: string[], position: number): Observable<string> {\r\n    if (typeof uris !== typeof [] || uris.length < 1 || uris.length > 100) {\r\n      return of(null);\r\n    }\r\n    return this.http.post<Snapshot>(this.config.baseUrl + `/v1/playlists/${id}/tracks`, {\r\n      uris: uris,\r\n      position: position\r\n    }).pipe(map(({ snapshotId }) => {\r\n      return snapshotId;\r\n    }));\r\n  }\r\n\r\n  public removeTracksFromPlaylist(id: string, uris: string[]): Observable<string> {\r\n    if (typeof uris !== typeof [] || uris.length < 1 || uris.length > 100) {\r\n      return of(null);\r\n    }\r\n    return this.http.request<Snapshot>('DELETE', this.config.baseUrl + `/v1/playlists/${id}/tracks`, {\r\n      body: {\r\n        tracks: uris.map((uri: string) => {\r\n          return { uri: uri };\r\n        })\r\n      }\r\n    }).pipe(map(({ snapshotId }) => {\r\n      return snapshotId;\r\n    }));\r\n  }\r\n\r\n  public getPlaylist(id: string, market?: string): Observable<Playlist> {\r\n    return this.http.get<Playlist>(this.config.baseUrl + `/v1/playlists/${id}`, {\r\n      params: {\r\n        market: market || ''\r\n      }\r\n    });\r\n  }\r\n\r\n  public getPlaylistTracks(id: string, market: string, limit: number = 100, offset: number = 0): Observable<Paging<PlaylistTrack>> {\r\n    return this.http.get<Paging<PlaylistTrack>>(this.config.baseUrl + `/v1/playlists/${id}/tracks`, {\r\n      params: {\r\n        limit: limit.toString(),\r\n        offset: offset.toString(),\r\n        market: market\r\n      }\r\n    });\r\n  }\r\n\r\n  public getPlaylistCover(id: string): Observable<Image[]> {\r\n    return this.http.get<Image[]>(this.config.baseUrl + `/v1/playlists/${id}/images`);\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param id id of playlist\r\n   * @param image base64 encoded jpeg (max. 256KB)\r\n   */\r\n  public uploadPlaylistCover(id: string, image: string): Observable<boolean> {\r\n    return this.http.put(this.config.baseUrl + `/v1/playlists/${id}/images`, image, {\r\n      headers: {\r\n        'Content-Type': 'image/jpeg'\r\n      }\r\n    }).pipe(map((res: HttpResponse<any>) => {\r\n      return true;\r\n    }));\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param limit min=1, default=20, max=50\r\n   * @param offset min=0, default=0, max=100000\r\n   */\r\n  public getOwnPlaylists(limit: number = 20, offset: number = 0): Observable<Paging<Playlist>> {\r\n    return this.http.get<Paging<Playlist>>(this.config.baseUrl + `/v1/me/playlists`, {\r\n      params: {\r\n        limit: limit.toString(),\r\n        offset: offset.toString()\r\n      }\r\n    });\r\n  }\r\n\r\n  public updateDetails(id: string, name?: string, isPublic?: boolean, isCollaborative?: boolean, description?: string): Observable<boolean> {\r\n    return this.http.put(this.config.baseUrl + `/v1/playlists/${id}`, {\r\n      name,\r\n      public: isPublic,\r\n      collaborative: isCollaborative,\r\n      description: description\r\n    }, {\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    }).pipe(map((res: HttpResponse<any>): boolean => {\r\n      return true;\r\n    }));\r\n  }\r\n\r\n  public getUsersPlaylists(id: string, limit: number = 20, offset: number = 0): Observable<Paging<Playlist>> {\r\n    return this.http.get<Paging<Playlist>>(this.config.baseUrl + `/v1/users/${id}/playlists`, {\r\n      params: {\r\n        limit: limit.toString(),\r\n        offset: offset.toString()\r\n      }\r\n    });\r\n  }\r\n\r\n  public replacePlaylistTracks(id: string, uris: string[]): Observable<boolean> {\r\n    return this.http.put(this.config.baseUrl + `/v1/playlists/${id}/tracks`, {\r\n      uris: uris\r\n    }, {\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    }).pipe(map((res: HttpResponse<any>): boolean => {\r\n      return true;\r\n    }));\r\n  }\r\n\r\n  public createPlaylists(userid: string, name: string, isPublic: boolean, isCollaborative: boolean, description: string = ''): Observable<Playlist> {\r\n    return this.http.post<Playlist>(this.config.baseUrl + `/v1/users/${userid}/playlists`, {\r\n      name,\r\n      public: isPublic,\r\n      collaborative: isCollaborative,\r\n      description\r\n    }, {\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    });\r\n  }\r\n\r\n  public reorderPlaylistTracks(id: string, rangeStart: number, rangeLength: number, insertBefore: number, snapshot?: string): Observable<string> {\r\n    return this.http.put<Snapshot>(this.config.baseUrl + `/v1/playlists/${id}/tracks`, {\r\n      range_start: rangeStart,\r\n      insert_before: insertBefore,\r\n      range_length: rangeLength,\r\n      snapshot_id: snapshot\r\n    }, {\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    }).pipe(map((s: Snapshot) => s.snapshotId));\r\n  }\r\n}\r\n","import {Injectable, Optional} from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {Observable} from 'rxjs';\r\nimport {SearchResult} from '../models';\r\nimport {ApiConfig} from '../models';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SearchService {\r\n\r\n  constructor(@Optional() private config: ApiConfig,\r\n              private http: HttpClient) { }\r\n\r\n  public search(searchTerms: string, types: ('album' | 'artist' | 'track' | 'playlist')[], market?: string, limit: number = 20, offset: number = 0, includeExternal?: boolean): Observable<SearchResult> {\r\n    return this.http.get<SearchResult>(this.config.baseUrl + `/v1/search`, {\r\n      params: {\r\n        q: encodeURIComponent(searchTerms),\r\n        type: types.join(','),\r\n        market: market,\r\n        limit: limit.toString(),\r\n        offset: offset.toString(),\r\n        include_external: includeExternal ? 'audio' : undefined\r\n      }\r\n    });\r\n  }\r\n}\r\n","import {Injectable, Optional} from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {Observable, of} from 'rxjs';\r\nimport {Track} from '../models';\r\nimport {AudioFeatures} from '../models';\r\nimport {AudioAnalysis} from '../models';\r\nimport {map} from 'rxjs/operators';\r\nimport {ApiConfig} from '../models';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TrackService {\r\n\r\n  constructor(@Optional() private config: ApiConfig,\r\n              private http: HttpClient) { }\r\n\r\n  public getTrack(id: string, market?: string): Observable<Track> {\r\n    return this.http.get<Track>(this.config.baseUrl + `/v1/tracks/${id}`, {\r\n      params: {\r\n        market\r\n      }\r\n    });\r\n  }\r\n\r\n  public getAudioFeatures(id: string): Observable<AudioFeatures> {\r\n    return this.http.get<AudioFeatures>(this.config.baseUrl + `/v1/audio-features/${id}`);\r\n  }\r\n\r\n  public getAudioAnalysis(id: string): Observable<AudioAnalysis> {\r\n    return this.http.get<AudioAnalysis>(this.config.baseUrl + `/v1/audio-analysis/${id}`);\r\n  }\r\n\r\n  public getTracks(ids: string[], market?: string): Observable<Track[]> {\r\n    if (ids === undefined || ids === null || ids.length === 0) {\r\n      return of([]);\r\n    } else if (ids.length > 50) {\r\n      return of(null);\r\n    }\r\n\r\n    return this.http.get<{tracks: Track[]}>(this.config.baseUrl + `/v1/tracks`, {\r\n      params: {\r\n        ids: ids.join(','),\r\n        market: market || ''\r\n      }\r\n    }).pipe(map(({ tracks }): Track[] => tracks));\r\n  }\r\n\r\n  public getSeveralAudioFeatures(ids: string[]): Observable<AudioFeatures[]> {\r\n    if (ids === undefined || ids === null || ids.length === 0) {\r\n      return of([]);\r\n    } else if (ids.length > 50) {\r\n      return of(null);\r\n    }\r\n\r\n    return this.http.get<{audioFeatures: AudioFeatures[]}>(this.config.baseUrl + `/v1/audio-features`, {\r\n      params: {\r\n        ids: ids.join(',')\r\n      }\r\n    }).pipe(map(({ audioFeatures }): AudioFeatures[] => audioFeatures));\r\n  }\r\n}\r\n","import {Injectable, Optional} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {Observable} from 'rxjs';\nimport {UserPublic} from '../models';\nimport {UserPrivate} from '../models';\nimport {ApiConfig} from '../models';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n\n  constructor(@Optional() private config: ApiConfig,\n              private http: HttpClient) { }\n\n  getUser(id: string): Observable<UserPublic> {\n    return this.http.get<UserPublic>(this.config.baseUrl + `/v1/users/${id}`);\n  }\n\n  getCurrentUser(): Observable<UserPrivate> {\n    return this.http.get<UserPrivate>(this.config.baseUrl + `/v1/me`);\n  }\n}\n","import {ModuleWithProviders, NgModule} from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HttpClientModule } from '@angular/common/http';\nimport {\n  AlbumService,\n  ArtistService,\n  BrowseService,\n  FollowService,\n  LibraryService,\n  PersonalizationService,\n  PlayerService, PlaylistService, SearchService, TrackService, UserService\n} from './services';\nimport {httpInterceptorProviders} from './http-interceptors';\nimport {ApiConfig, AuthorizationConfig, SpotifyApiConfig} from './models/configs';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    HttpClientModule,\n  ],\n  providers: [\n    ArtistService,\n    AlbumService,\n    BrowseService,\n    FollowService,\n    LibraryService,\n    PersonalizationService,\n    PlayerService,\n    PlaylistService,\n    SearchService,\n    TrackService,\n    UserService,\n    httpInterceptorProviders\n  ]\n})\nexport class NgxSpotifyApiModule {\n  static forRoot(config: SpotifyApiConfig): ModuleWithProviders {\n    config = {\n      api: {\n        ...new ApiConfig(),\n        ...config.api\n      },\n      authorization: {\n        ...new AuthorizationConfig(),\n        ...config.authorization\n      }\n    };\n    return {\n      ngModule: NgxSpotifyApiModule,\n      providers: [\n        { provide: AuthorizationConfig, useValue: config.authorization },\n        { provide: ApiConfig,           useValue: config.api },\n      ]\n    };\n  }\n}\n"],"names":["tslib_1.__extends"],"mappings":"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"}
